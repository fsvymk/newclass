
module.o:     формат файла elf64-x86-64

Разделы:
Инд Имя           Размер    VMA               LMA               Файл      Вырав
  0 .group        00000008  0000000000000000  0000000000000000  00000040  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  1 .group        00000008  0000000000000000  0000000000000000  00000048  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  2 .group        00000008  0000000000000000  0000000000000000  00000050  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  3 .group        00000008  0000000000000000  0000000000000000  00000058  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  4 .group        00000008  0000000000000000  0000000000000000  00000060  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  5 .group        00000008  0000000000000000  0000000000000000  00000068  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  6 .group        00000008  0000000000000000  0000000000000000  00000070  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  7 .group        00000008  0000000000000000  0000000000000000  00000078  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  8 .group        00000008  0000000000000000  0000000000000000  00000080  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  9 .group        00000008  0000000000000000  0000000000000000  00000088  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 10 .group        00000008  0000000000000000  0000000000000000  00000090  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 11 .group        00000008  0000000000000000  0000000000000000  00000098  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 12 .group        00000008  0000000000000000  0000000000000000  000000a0  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 13 .group        00000008  0000000000000000  0000000000000000  000000a8  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 14 .group        00000008  0000000000000000  0000000000000000  000000b0  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 15 .group        00000008  0000000000000000  0000000000000000  000000b8  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 16 .group        00000008  0000000000000000  0000000000000000  000000c0  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 17 .group        0000000c  0000000000000000  0000000000000000  000000c8  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 18 .group        00000008  0000000000000000  0000000000000000  000000d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 19 .group        00000008  0000000000000000  0000000000000000  000000dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 20 .group        0000000c  0000000000000000  0000000000000000  000000e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 21 .group        00000008  0000000000000000  0000000000000000  000000f0  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 22 .group        00000008  0000000000000000  0000000000000000  000000f8  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 23 .group        00000008  0000000000000000  0000000000000000  00000100  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 24 .group        00000008  0000000000000000  0000000000000000  00000108  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 25 .group        0000000c  0000000000000000  0000000000000000  00000110  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 26 .group        00000008  0000000000000000  0000000000000000  0000011c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 27 .group        00000008  0000000000000000  0000000000000000  00000124  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 28 .group        00000008  0000000000000000  0000000000000000  0000012c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 29 .group        00000008  0000000000000000  0000000000000000  00000134  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 30 .group        00000008  0000000000000000  0000000000000000  0000013c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 31 .group        00000008  0000000000000000  0000000000000000  00000144  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 32 .group        00000008  0000000000000000  0000000000000000  0000014c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 33 .group        00000008  0000000000000000  0000000000000000  00000154  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 34 .group        00000008  0000000000000000  0000000000000000  0000015c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 35 .group        00000008  0000000000000000  0000000000000000  00000164  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 36 .group        00000008  0000000000000000  0000000000000000  0000016c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 37 .group        00000008  0000000000000000  0000000000000000  00000174  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 38 .group        00000008  0000000000000000  0000000000000000  0000017c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 39 .group        00000008  0000000000000000  0000000000000000  00000184  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 40 .group        00000008  0000000000000000  0000000000000000  0000018c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 41 .group        00000008  0000000000000000  0000000000000000  00000194  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 42 .group        00000008  0000000000000000  0000000000000000  0000019c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 43 .group        00000008  0000000000000000  0000000000000000  000001a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 44 .group        00000008  0000000000000000  0000000000000000  000001ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 45 .group        00000008  0000000000000000  0000000000000000  000001b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 46 .group        00000008  0000000000000000  0000000000000000  000001bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 47 .group        00000008  0000000000000000  0000000000000000  000001c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 48 .group        00000008  0000000000000000  0000000000000000  000001cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 49 .group        00000008  0000000000000000  0000000000000000  000001d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 50 .group        00000008  0000000000000000  0000000000000000  000001dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 51 .group        00000008  0000000000000000  0000000000000000  000001e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 52 .group        00000008  0000000000000000  0000000000000000  000001ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 53 .group        00000008  0000000000000000  0000000000000000  000001f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 54 .group        00000008  0000000000000000  0000000000000000  000001fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 55 .group        00000008  0000000000000000  0000000000000000  00000204  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 56 .group        00000008  0000000000000000  0000000000000000  0000020c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 57 .group        00000008  0000000000000000  0000000000000000  00000214  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 58 .group        00000008  0000000000000000  0000000000000000  0000021c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 59 .group        00000008  0000000000000000  0000000000000000  00000224  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 60 .group        00000008  0000000000000000  0000000000000000  0000022c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 61 .group        00000008  0000000000000000  0000000000000000  00000234  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 62 .group        00000008  0000000000000000  0000000000000000  0000023c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 63 .group        00000008  0000000000000000  0000000000000000  00000244  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 64 .group        00000008  0000000000000000  0000000000000000  0000024c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 65 .group        00000008  0000000000000000  0000000000000000  00000254  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 66 .group        00000008  0000000000000000  0000000000000000  0000025c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 67 .group        00000008  0000000000000000  0000000000000000  00000264  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 68 .group        00000008  0000000000000000  0000000000000000  0000026c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 69 .group        00000008  0000000000000000  0000000000000000  00000274  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 70 .group        00000008  0000000000000000  0000000000000000  0000027c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 71 .group        00000008  0000000000000000  0000000000000000  00000284  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 72 .group        00000008  0000000000000000  0000000000000000  0000028c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 73 .group        00000008  0000000000000000  0000000000000000  00000294  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 74 .group        00000008  0000000000000000  0000000000000000  0000029c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 75 .group        00000008  0000000000000000  0000000000000000  000002a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 76 .group        00000008  0000000000000000  0000000000000000  000002ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 77 .group        00000008  0000000000000000  0000000000000000  000002b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 78 .group        00000008  0000000000000000  0000000000000000  000002bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 79 .group        00000008  0000000000000000  0000000000000000  000002c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 80 .group        00000008  0000000000000000  0000000000000000  000002cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 81 .group        00000008  0000000000000000  0000000000000000  000002d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 82 .group        00000008  0000000000000000  0000000000000000  000002dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 83 .group        00000008  0000000000000000  0000000000000000  000002e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 84 .group        00000008  0000000000000000  0000000000000000  000002ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 85 .group        00000008  0000000000000000  0000000000000000  000002f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 86 .group        00000008  0000000000000000  0000000000000000  000002fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 87 .group        00000008  0000000000000000  0000000000000000  00000304  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 88 .group        00000008  0000000000000000  0000000000000000  0000030c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 89 .group        00000008  0000000000000000  0000000000000000  00000314  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 90 .group        00000008  0000000000000000  0000000000000000  0000031c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 91 .group        00000008  0000000000000000  0000000000000000  00000324  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 92 .group        00000008  0000000000000000  0000000000000000  0000032c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 93 .group        00000008  0000000000000000  0000000000000000  00000334  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 94 .group        00000008  0000000000000000  0000000000000000  0000033c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 95 .group        00000008  0000000000000000  0000000000000000  00000344  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 96 .group        00000008  0000000000000000  0000000000000000  0000034c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 97 .group        00000008  0000000000000000  0000000000000000  00000354  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 98 .group        00000008  0000000000000000  0000000000000000  0000035c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 99 .group        00000008  0000000000000000  0000000000000000  00000364  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
100 .group        00000008  0000000000000000  0000000000000000  0000036c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
101 .group        00000008  0000000000000000  0000000000000000  00000374  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
102 .group        00000008  0000000000000000  0000000000000000  0000037c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
103 .group        00000008  0000000000000000  0000000000000000  00000384  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
104 .group        00000008  0000000000000000  0000000000000000  0000038c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
105 .group        00000008  0000000000000000  0000000000000000  00000394  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
106 .group        00000008  0000000000000000  0000000000000000  0000039c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
107 .group        00000008  0000000000000000  0000000000000000  000003a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
108 .group        00000008  0000000000000000  0000000000000000  000003ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
109 .group        00000008  0000000000000000  0000000000000000  000003b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
110 .group        00000008  0000000000000000  0000000000000000  000003bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
111 .group        00000008  0000000000000000  0000000000000000  000003c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
112 .group        00000008  0000000000000000  0000000000000000  000003cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
113 .group        00000008  0000000000000000  0000000000000000  000003d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
114 .group        00000008  0000000000000000  0000000000000000  000003dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
115 .group        00000008  0000000000000000  0000000000000000  000003e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
116 .group        00000008  0000000000000000  0000000000000000  000003ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
117 .group        00000008  0000000000000000  0000000000000000  000003f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
118 .group        00000008  0000000000000000  0000000000000000  000003fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
119 .group        00000008  0000000000000000  0000000000000000  00000404  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
120 .group        00000008  0000000000000000  0000000000000000  0000040c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
121 .group        00000008  0000000000000000  0000000000000000  00000414  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
122 .group        00000008  0000000000000000  0000000000000000  0000041c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
123 .group        00000008  0000000000000000  0000000000000000  00000424  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
124 .group        00000008  0000000000000000  0000000000000000  0000042c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
125 .group        00000008  0000000000000000  0000000000000000  00000434  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
126 .group        00000008  0000000000000000  0000000000000000  0000043c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
127 .group        00000008  0000000000000000  0000000000000000  00000444  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
128 .group        00000008  0000000000000000  0000000000000000  0000044c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
129 .group        00000008  0000000000000000  0000000000000000  00000454  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
130 .group        00000008  0000000000000000  0000000000000000  0000045c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
131 .group        00000008  0000000000000000  0000000000000000  00000464  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
132 .group        00000008  0000000000000000  0000000000000000  0000046c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
133 .group        00000008  0000000000000000  0000000000000000  00000474  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
134 .group        00000008  0000000000000000  0000000000000000  0000047c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
135 .group        00000008  0000000000000000  0000000000000000  00000484  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
136 .group        00000008  0000000000000000  0000000000000000  0000048c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
137 .group        00000008  0000000000000000  0000000000000000  00000494  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
138 .group        00000008  0000000000000000  0000000000000000  0000049c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
139 .group        00000008  0000000000000000  0000000000000000  000004a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
140 .group        00000008  0000000000000000  0000000000000000  000004ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
141 .group        00000008  0000000000000000  0000000000000000  000004b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
142 .group        00000008  0000000000000000  0000000000000000  000004bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
143 .group        00000008  0000000000000000  0000000000000000  000004c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
144 .group        00000008  0000000000000000  0000000000000000  000004cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
145 .group        00000008  0000000000000000  0000000000000000  000004d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
146 .group        00000008  0000000000000000  0000000000000000  000004dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
147 .group        00000008  0000000000000000  0000000000000000  000004e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
148 .group        00000008  0000000000000000  0000000000000000  000004ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
149 .group        00000008  0000000000000000  0000000000000000  000004f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
150 .group        00000008  0000000000000000  0000000000000000  000004fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
151 .group        00000008  0000000000000000  0000000000000000  00000504  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
152 .group        00000008  0000000000000000  0000000000000000  0000050c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
153 .group        00000008  0000000000000000  0000000000000000  00000514  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
154 .group        00000008  0000000000000000  0000000000000000  0000051c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
155 .group        00000008  0000000000000000  0000000000000000  00000524  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
156 .group        00000008  0000000000000000  0000000000000000  0000052c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
157 .group        00000008  0000000000000000  0000000000000000  00000534  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
158 .group        00000008  0000000000000000  0000000000000000  0000053c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
159 .group        00000008  0000000000000000  0000000000000000  00000544  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
160 .group        00000008  0000000000000000  0000000000000000  0000054c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
161 .group        00000008  0000000000000000  0000000000000000  00000554  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
162 .group        00000008  0000000000000000  0000000000000000  0000055c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
163 .group        00000008  0000000000000000  0000000000000000  00000564  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
164 .group        00000008  0000000000000000  0000000000000000  0000056c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
165 .group        00000008  0000000000000000  0000000000000000  00000574  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
166 .group        00000008  0000000000000000  0000000000000000  0000057c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
167 .group        00000008  0000000000000000  0000000000000000  00000584  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
168 .group        00000008  0000000000000000  0000000000000000  0000058c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
169 .group        00000008  0000000000000000  0000000000000000  00000594  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
170 .group        00000008  0000000000000000  0000000000000000  0000059c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
171 .group        00000008  0000000000000000  0000000000000000  000005a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
172 .group        00000008  0000000000000000  0000000000000000  000005ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
173 .group        00000008  0000000000000000  0000000000000000  000005b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
174 .group        00000008  0000000000000000  0000000000000000  000005bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
175 .group        00000008  0000000000000000  0000000000000000  000005c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
176 .group        00000008  0000000000000000  0000000000000000  000005cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
177 .group        00000008  0000000000000000  0000000000000000  000005d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
178 .group        00000008  0000000000000000  0000000000000000  000005dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
179 .group        00000008  0000000000000000  0000000000000000  000005e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
180 .group        00000008  0000000000000000  0000000000000000  000005ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
181 .group        00000008  0000000000000000  0000000000000000  000005f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
182 .group        00000008  0000000000000000  0000000000000000  000005fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
183 .group        00000008  0000000000000000  0000000000000000  00000604  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
184 .group        00000008  0000000000000000  0000000000000000  0000060c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
185 .group        00000008  0000000000000000  0000000000000000  00000614  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
186 .group        00000008  0000000000000000  0000000000000000  0000061c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
187 .group        00000008  0000000000000000  0000000000000000  00000624  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
188 .group        00000008  0000000000000000  0000000000000000  0000062c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
189 .group        00000008  0000000000000000  0000000000000000  00000634  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
190 .group        00000008  0000000000000000  0000000000000000  0000063c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
191 .group        00000008  0000000000000000  0000000000000000  00000644  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
192 .group        00000008  0000000000000000  0000000000000000  0000064c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
193 .group        00000008  0000000000000000  0000000000000000  00000654  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
194 .group        00000008  0000000000000000  0000000000000000  0000065c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
195 .group        00000008  0000000000000000  0000000000000000  00000664  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
196 .group        00000008  0000000000000000  0000000000000000  0000066c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
197 .group        00000008  0000000000000000  0000000000000000  00000674  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
198 .group        00000008  0000000000000000  0000000000000000  0000067c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
199 .group        00000008  0000000000000000  0000000000000000  00000684  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
200 .group        00000008  0000000000000000  0000000000000000  0000068c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
201 .group        00000008  0000000000000000  0000000000000000  00000694  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
202 .group        00000008  0000000000000000  0000000000000000  0000069c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
203 .group        00000008  0000000000000000  0000000000000000  000006a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
204 .group        00000008  0000000000000000  0000000000000000  000006ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
205 .group        00000008  0000000000000000  0000000000000000  000006b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
206 .group        00000008  0000000000000000  0000000000000000  000006bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
207 .group        00000008  0000000000000000  0000000000000000  000006c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
208 .group        00000008  0000000000000000  0000000000000000  000006cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
209 .group        00000008  0000000000000000  0000000000000000  000006d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
210 .group        00000008  0000000000000000  0000000000000000  000006dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
211 .group        00000008  0000000000000000  0000000000000000  000006e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
212 .group        00000008  0000000000000000  0000000000000000  000006ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
213 .group        00000008  0000000000000000  0000000000000000  000006f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
214 .group        00000008  0000000000000000  0000000000000000  000006fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
215 .group        00000008  0000000000000000  0000000000000000  00000704  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
216 .group        00000008  0000000000000000  0000000000000000  0000070c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
217 .group        00000008  0000000000000000  0000000000000000  00000714  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
218 .group        00000008  0000000000000000  0000000000000000  0000071c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
219 .group        00000008  0000000000000000  0000000000000000  00000724  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
220 .text         00000e91  0000000000000000  0000000000000000  0000072c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
221 .data         00000000  0000000000000000  0000000000000000  000015bd  2**0
                  CONTENTS, ALLOC, LOAD, DATA
222 .bss          00000000  0000000000000000  0000000000000000  000015bd  2**0
                  ALLOC
223 .text._ZnwmPv 00000012  0000000000000000  0000000000000000  000015bd  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 .text._ZdlPvS_ 0000000f  0000000000000000  0000000000000000  000015cf  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 .text._Z7qt_noopv 00000007  0000000000000000  0000000000000000  000015de  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 .text._ZN9QtPrivate8RefCount3refEv 00000041  0000000000000000  0000000000000000  000015e6  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
227 .text._ZN9QtPrivate8RefCount5derefEv 00000043  0000000000000000  0000000000000000  00001628  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
228 .text._ZNK9QtPrivate8RefCount8isSharedEv 00000035  0000000000000000  0000000000000000  0000166c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
229 .rodata       000001f0  0000000000000000  0000000000000000  000016a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
230 .text._ZN10QArrayData4dataEv 00000063  0000000000000000  0000000000000000  00001898  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
231 .text._ZN10QArrayData10sharedNullEv 0000000d  0000000000000000  0000000000000000  000018fb  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
232 .text._ZN10QByteArrayC2Ev 0000001e  0000000000000000  0000000000000000  00001908  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
233 .text._ZN10QByteArrayD2Ev 00000034  0000000000000000  0000000000000000  00001926  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
234 .text._ZNK10QByteArray4sizeEv 00000014  0000000000000000  0000000000000000  0000195a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 .text._ZNK10QByteArray2atEi 00000060  0000000000000000  0000000000000000  0000196e  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
236 .text._ZNK10QByteArraycvPKcEv 0000001d  0000000000000000  0000000000000000  000019ce  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
237 .text._ZNK7QString4sizeEv 00000014  0000000000000000  0000000000000000  000019ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 .text._ZN7QStringpLERKS_ 00000025  0000000000000000  0000000000000000  00001a00  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
239 .text._ZN7QString8fromUtf8EPKci 0000006c  0000000000000000  0000000000000000  00001a25  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
240 .text._ZN7QStringC2EPKc 00000047  0000000000000000  0000000000000000  00001a92  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
241 .text._ZN7QString6appendEPKc 00000094  0000000000000000  0000000000000000  00001ada  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
242 .gcc_except_table._ZN7QString6appendEPKc 00000015  0000000000000000  0000000000000000  00001b6e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
243 .text._ZNK7QString6isNullEv 00000026  0000000000000000  0000000000000000  00001b84  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
244 .text._ZNK7QString9constDataEv 0000001d  0000000000000000  0000000000000000  00001baa  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
245 .text._ZN7QString5clearEv 00000092  0000000000000000  0000000000000000  00001bc8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
246 .gcc_except_table._ZN7QString5clearEv 00000014  0000000000000000  0000000000000000  00001c5a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
247 .text._ZN7QStringC2ERKS_ 00000057  0000000000000000  0000000000000000  00001c6e  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
248 .text._ZN7QStringC2Ev 0000001e  0000000000000000  0000000000000000  00001cc6  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
249 .text._ZN7QStringD2Ev 00000034  0000000000000000  0000000000000000  00001ce4  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
250 .text._ZNK7QStringeqEPKc 00000053  0000000000000000  0000000000000000  00001d18  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
251 .text._ZplRK7QStringPKc 000000ba  0000000000000000  0000000000000000  00001d6b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
252 .gcc_except_table._ZplRK7QStringPKc 0000001b  0000000000000000  0000000000000000  00001e25  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
253 .text._ZN9QListData7disposeEv 0000001e  0000000000000000  0000000000000000  00001e40  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
254 .text._ZNK9QListData4sizeEv 00000022  0000000000000000  0000000000000000  00001e5e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 .text._ZNK9QListData2atEi 00000034  0000000000000000  0000000000000000  00001e80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 .text._ZNK9QListData5beginEv 00000028  0000000000000000  0000000000000000  00001eb4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 .text._ZNK9QListData3endEv 00000028  0000000000000000  0000000000000000  00001edc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 .text._ZN19QListSpecialMethodsI7QStringED2Ev 0000000b  0000000000000000  0000000000000000  00001f04  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 .text._ZN11QStringListC2Ev 0000001b  0000000000000000  0000000000000000  00001f10  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
260 .text._ZN11QStringListD2Ev 0000001b  0000000000000000  0000000000000000  00001f2c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
261 .text._ZN11QDataStreamlsEh 00000028  0000000000000000  0000000000000000  00001f48  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
262 .text._ZN11QDataStreamlsEt 00000029  0000000000000000  0000000000000000  00001f70  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
263 .text._ZN11QStringListaSERKS_ 00000029  0000000000000000  0000000000000000  00001f9a  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
264 .gcc_except_table 000002e4  0000000000000000  0000000000000000  00001fc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
265 .text._ZN8VarTypesD2Ev 0000001b  0000000000000000  0000000000000000  000022a8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
266 .text._ZN8variableD2Ev 0000001f  0000000000000000  0000000000000000  000022c4  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
267 .text._ZNK19QBasicAtomicIntegerIiE4loadEv 00000019  0000000000000000  0000000000000000  000022e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
268 .text._ZN19QBasicAtomicIntegerIiE3refEv 0000001a  0000000000000000  0000000000000000  000022fe  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
269 .text._ZN19QBasicAtomicIntegerIiE5derefEv 0000001a  0000000000000000  0000000000000000  00002318  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
270 .text._ZN15QTypedArrayDataIcE10sharedNullEv 0000000b  0000000000000000  0000000000000000  00002332  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
271 .text._ZN15QTypedArrayDataIcE10deallocateEP10QArrayData 00000025  0000000000000000  0000000000000000  0000233d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
272 .text._ZN15QTypedArrayDataIcE4dataEv 0000001a  0000000000000000  0000000000000000  00002362  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
273 .text._ZN15QTypedArrayDataItE4dataEv 0000001a  0000000000000000  0000000000000000  0000237c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
274 .text._ZN15QTypedArrayDataItE10sharedNullEv 0000000b  0000000000000000  0000000000000000  00002396  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
275 .text._ZN15QTypedArrayDataItE10deallocateEP10QArrayData 00000025  0000000000000000  0000000000000000  000023a1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
276 .text._Z4qMaxIiERKT_S2_S2_ 00000028  0000000000000000  0000000000000000  000023c6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
277 .text._ZN19QListSpecialMethodsI7QStringEC2Ev 0000000b  0000000000000000  0000000000000000  000023ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
278 .text._ZN5QListI7QStringEC2Ev 00000029  0000000000000000  0000000000000000  000023fa  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
279 .text._ZN5QListI7QStringED2Ev 00000068  0000000000000000  0000000000000000  00002424  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
280 .text._ZN5QListI7QStringEC2ERKS1_ 000000de  0000000000000000  0000000000000000  0000248c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
281 .text._ZN5QListI7QStringEaSERKS1_ 000000a0  0000000000000000  0000000000000000  0000256a  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
282 .text._ZN6QFlagsIN9QIODevice12OpenModeFlagEEC2ES1_ 00000017  0000000000000000  0000000000000000  0000260a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
283 .text._ZN19QListSpecialMethodsI8variableEC2Ev 0000000b  0000000000000000  0000000000000000  00002622  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
284 .text._ZN5QListI8variableEC2Ev 00000029  0000000000000000  0000000000000000  0000262e  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
285 .text._ZN5QListI8variableED2Ev 00000068  0000000000000000  0000000000000000  00002658  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
286 .text._ZN5QListI8variableE8iteratorC2Ev 00000016  0000000000000000  0000000000000000  000026c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
287 .text._ZN5QListI8variableE5beginEv 00000040  0000000000000000  0000000000000000  000026d6  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
288 .text._ZN5QListI8variableE3endEv 00000040  0000000000000000  0000000000000000  00002716  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
289 .text._ZNK5QListI8variableE8iteratorneERKS2_ 00000022  0000000000000000  0000000000000000  00002756  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
290 .text._ZN5QListI8variableE8iteratorppEv 00000020  0000000000000000  0000000000000000  00002778  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
291 .text._ZNK5QListI8variableE8iteratorptEv 0000001d  0000000000000000  0000000000000000  00002798  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
292 .text._ZN5QListI7QStringE8iteratorC2Ev 00000016  0000000000000000  0000000000000000  000027b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
293 .text._ZN5QListI7QStringE5beginEv 00000040  0000000000000000  0000000000000000  000027cc  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
294 .text._ZN5QListI7QStringE3endEv 00000040  0000000000000000  0000000000000000  0000280c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
295 .text._ZNK5QListI7QStringE8iteratorneERKS2_ 00000022  0000000000000000  0000000000000000  0000284c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
296 .text._ZN5QListI7QStringE8iteratorppEv 00000020  0000000000000000  0000000000000000  0000286e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
297 .text._ZNK5QListI7QStringE8iteratordeEv 0000001d  0000000000000000  0000000000000000  0000288e  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
298 .text._ZNK5QListI7QStringE7indexOfERKS0_i 0000010e  0000000000000000  0000000000000000  000028ac  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
299 .text._ZN5QListI8variableE6appendERKS0_ 0000010d  0000000000000000  0000000000000000  000029ba  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
300 .text._ZN5QListI7QStringEixEi 00000071  0000000000000000  0000000000000000  00002ac8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
301 .text._ZN15QBasicAtomicOpsILi4EE3refIiEEbRT_ 00000023  0000000000000000  0000000000000000  00002b39  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
302 .text._ZN15QBasicAtomicOpsILi4EE5derefIiEEbRT_ 00000023  0000000000000000  0000000000000000  00002b5c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
303 .text._ZN5QListI7QStringE7deallocEPN9QListData4DataE 0000005e  0000000000000000  0000000000000000  00002b80  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
304 .text._ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_ 000000c9  0000000000000000  0000000000000000  00002bde  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
305 .text._ZN5QListI7QStringE4swapERS1_ 00000026  0000000000000000  0000000000000000  00002ca8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
306 .text._ZN19QListSpecialMethodsI8variableED2Ev 0000000b  0000000000000000  0000000000000000  00002cce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
307 .text._ZN5QListI8variableE7deallocEPN9QListData4DataE 0000005e  0000000000000000  0000000000000000  00002cda  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
308 .text._ZN5QListI8variableE6detachEv 0000002e  0000000000000000  0000000000000000  00002d38  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
309 .text._ZN5QListI8variableE8iteratorC2EPNS1_4NodeE 0000001a  0000000000000000  0000000000000000  00002d66  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
310 .text._ZN5QListI8variableE4Node1tEv 00000011  0000000000000000  0000000000000000  00002d80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
311 .text._ZN5QListI7QStringE6detachEv 0000002e  0000000000000000  0000000000000000  00002d92  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
312 .text._ZN5QListI7QStringE8iteratorC2EPNS1_4NodeE 0000001a  0000000000000000  0000000000000000  00002dc0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
313 .text._ZN5QListI7QStringE4Node1tEv 0000000e  0000000000000000  0000000000000000  00002dda  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
314 .text._ZN5QListI8variableE18detach_helper_growEii 000001d5  0000000000000000  0000000000000000  00002de8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
315 .text._ZN8variableC2ERKS_ 00000072  0000000000000000  0000000000000000  00002fbe  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
316 .text._ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_ 0000005b  0000000000000000  0000000000000000  00003030  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
317 .text._ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_ 00000034  0000000000000000  0000000000000000  0000308c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
318 .text._Z5qSwapIPN9QListData4DataEEvRT_S4_ 00000026  0000000000000000  0000000000000000  000030c0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
319 .text._ZN5QListI8variableE13node_destructEPNS1_4NodeES3_ 0000004a  0000000000000000  0000000000000000  000030e6  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
320 .text._ZN5QListI8variableE13detach_helperEv 00000027  0000000000000000  0000000000000000  00003130  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
321 .text._ZN5QListI7QStringE13detach_helperEv 00000027  0000000000000000  0000000000000000  00003158  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
322 .text._ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_ 000000d2  0000000000000000  0000000000000000  00003180  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
323 .text._ZSt4swapIPN9QListData4DataEEvRT_S4_ 00000033  0000000000000000  0000000000000000  00003252  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
324 .text._ZN5QListI8variableE13detach_helperEi 000000d0  0000000000000000  0000000000000000  00003286  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
325 .text._ZN5QListI7QStringE13detach_helperEi 000000d0  0000000000000000  0000000000000000  00003356  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
326 .debug_info   000162c1  0000000000000000  0000000000000000  00003426  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
327 .debug_abbrev 00000b29  0000000000000000  0000000000000000  000196e7  2**0
                  CONTENTS, READONLY, DEBUGGING
328 .debug_aranges 00000650  0000000000000000  0000000000000000  0001a210  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
329 .debug_ranges 000007c0  0000000000000000  0000000000000000  0001a860  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
330 .debug_macro  00000aa2  0000000000000000  0000000000000000  0001b020  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
331 .debug_macro  0000061c  0000000000000000  0000000000000000  0001bac2  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
332 .debug_macro  00000022  0000000000000000  0000000000000000  0001c0de  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
333 .debug_macro  00000136  0000000000000000  0000000000000000  0001c100  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
334 .debug_macro  00000010  0000000000000000  0000000000000000  0001c236  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
335 .debug_macro  00000275  0000000000000000  0000000000000000  0001c246  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
336 .debug_macro  0000016f  0000000000000000  0000000000000000  0001c4bb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
337 .debug_macro  00000016  0000000000000000  0000000000000000  0001c62a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
338 .debug_macro  00000035  0000000000000000  0000000000000000  0001c640  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
339 .debug_macro  00000058  0000000000000000  0000000000000000  0001c675  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
340 .debug_macro  000005b4  0000000000000000  0000000000000000  0001c6cd  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
341 .debug_macro  0000016d  0000000000000000  0000000000000000  0001cc81  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
342 .debug_macro  00000016  0000000000000000  0000000000000000  0001cdee  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
343 .debug_macro  0000009a  0000000000000000  0000000000000000  0001ce04  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
344 .debug_macro  00000016  0000000000000000  0000000000000000  0001ce9e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
345 .debug_macro  00000018  0000000000000000  0000000000000000  0001ceb4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
346 .debug_macro  00000032  0000000000000000  0000000000000000  0001cecc  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
347 .debug_macro  000000c0  0000000000000000  0000000000000000  0001cefe  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
348 .debug_macro  00000028  0000000000000000  0000000000000000  0001cfbe  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
349 .debug_macro  00000012  0000000000000000  0000000000000000  0001cfe6  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
350 .debug_macro  000000cf  0000000000000000  0000000000000000  0001cff8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
351 .debug_macro  0000001c  0000000000000000  0000000000000000  0001d0c7  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
352 .debug_macro  00000018  0000000000000000  0000000000000000  0001d0e3  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
353 .debug_macro  0000006e  0000000000000000  0000000000000000  0001d0fb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
354 .debug_macro  00000082  0000000000000000  0000000000000000  0001d169  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
355 .debug_macro  00000012  0000000000000000  0000000000000000  0001d1eb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
356 .debug_macro  00000012  0000000000000000  0000000000000000  0001d1fd  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
357 .debug_macro  00000016  0000000000000000  0000000000000000  0001d20f  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
358 .debug_macro  00000035  0000000000000000  0000000000000000  0001d225  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
359 .debug_macro  00000052  0000000000000000  0000000000000000  0001d25a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
360 .debug_macro  0000004c  0000000000000000  0000000000000000  0001d2ac  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
361 .debug_macro  0000001c  0000000000000000  0000000000000000  0001d2f8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
362 .debug_macro  00000028  0000000000000000  0000000000000000  0001d314  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
363 .debug_macro  0000005e  0000000000000000  0000000000000000  0001d33c  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
364 .debug_macro  000000e2  0000000000000000  0000000000000000  0001d39a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
365 .debug_macro  00000010  0000000000000000  0000000000000000  0001d47c  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
366 .debug_macro  0000004c  0000000000000000  0000000000000000  0001d48c  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
367 .debug_macro  00000022  0000000000000000  0000000000000000  0001d4d8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
368 .debug_macro  00000068  0000000000000000  0000000000000000  0001d4fa  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
369 .debug_macro  0000007f  0000000000000000  0000000000000000  0001d562  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
370 .debug_macro  0000003a  0000000000000000  0000000000000000  0001d5e1  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
371 .debug_macro  00000019  0000000000000000  0000000000000000  0001d61b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
372 .debug_macro  00000020  0000000000000000  0000000000000000  0001d634  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
373 .debug_macro  00000022  0000000000000000  0000000000000000  0001d654  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
374 .debug_macro  00000010  0000000000000000  0000000000000000  0001d676  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
375 .debug_macro  00000016  0000000000000000  0000000000000000  0001d686  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
376 .debug_macro  00000028  0000000000000000  0000000000000000  0001d69c  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
377 .debug_macro  00000010  0000000000000000  0000000000000000  0001d6c4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
378 .debug_macro  00000046  0000000000000000  0000000000000000  0001d6d4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
379 .debug_macro  0000001c  0000000000000000  0000000000000000  0001d71a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
380 .debug_macro  00000020  0000000000000000  0000000000000000  0001d736  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
381 .debug_macro  0000005a  0000000000000000  0000000000000000  0001d756  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
382 .debug_macro  00000010  0000000000000000  0000000000000000  0001d7b0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
383 .debug_macro  00000010  0000000000000000  0000000000000000  0001d7c0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
384 .debug_macro  000000e4  0000000000000000  0000000000000000  0001d7d0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
385 .debug_macro  0000025a  0000000000000000  0000000000000000  0001d8b4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
386 .debug_macro  0000002d  0000000000000000  0000000000000000  0001db0e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
387 .debug_macro  00000016  0000000000000000  0000000000000000  0001db3b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
388 .debug_macro  00000050  0000000000000000  0000000000000000  0001db51  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
389 .debug_macro  00000019  0000000000000000  0000000000000000  0001dba1  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
390 .debug_macro  00000011  0000000000000000  0000000000000000  0001dbba  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
391 .debug_macro  0000014b  0000000000000000  0000000000000000  0001dbcb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
392 .debug_macro  0000001e  0000000000000000  0000000000000000  0001dd16  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
393 .debug_macro  0000001c  0000000000000000  0000000000000000  0001dd34  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
394 .debug_macro  00000024  0000000000000000  0000000000000000  0001dd50  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
395 .debug_macro  00000016  0000000000000000  0000000000000000  0001dd74  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
396 .debug_macro  00000018  0000000000000000  0000000000000000  0001dd8a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
397 .debug_macro  00000019  0000000000000000  0000000000000000  0001dda2  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
398 .debug_macro  00000058  0000000000000000  0000000000000000  0001ddbb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
399 .debug_macro  00000016  0000000000000000  0000000000000000  0001de13  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
400 .debug_macro  0000001c  0000000000000000  0000000000000000  0001de29  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
401 .debug_macro  00000016  0000000000000000  0000000000000000  0001de45  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
402 .debug_macro  00000022  0000000000000000  0000000000000000  0001de5b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
403 .debug_macro  00000043  0000000000000000  0000000000000000  0001de7d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
404 .debug_macro  0000003c  0000000000000000  0000000000000000  0001dec0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
405 .debug_macro  00000173  0000000000000000  0000000000000000  0001defc  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
406 .debug_macro  00000012  0000000000000000  0000000000000000  0001e06f  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
407 .debug_macro  00000010  0000000000000000  0000000000000000  0001e081  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
408 .debug_macro  00000058  0000000000000000  0000000000000000  0001e091  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
409 .debug_macro  000000b4  0000000000000000  0000000000000000  0001e0e9  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
410 .debug_macro  00000016  0000000000000000  0000000000000000  0001e19d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
411 .debug_macro  00000010  0000000000000000  0000000000000000  0001e1b3  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
412 .debug_macro  00000037  0000000000000000  0000000000000000  0001e1c3  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
413 .debug_macro  00000058  0000000000000000  0000000000000000  0001e1fa  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
414 .debug_macro  00000011  0000000000000000  0000000000000000  0001e252  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
415 .debug_macro  00000016  0000000000000000  0000000000000000  0001e263  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
416 .debug_macro  00000010  0000000000000000  0000000000000000  0001e279  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
417 .debug_macro  00000010  0000000000000000  0000000000000000  0001e289  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
418 .debug_macro  00000022  0000000000000000  0000000000000000  0001e299  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
419 .debug_macro  00000122  0000000000000000  0000000000000000  0001e2bb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
420 .debug_macro  0000008e  0000000000000000  0000000000000000  0001e3dd  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
421 .debug_macro  00000016  0000000000000000  0000000000000000  0001e46b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
422 .debug_macro  00000058  0000000000000000  0000000000000000  0001e481  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
423 .debug_macro  000000fa  0000000000000000  0000000000000000  0001e4d9  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
424 .debug_macro  00000030  0000000000000000  0000000000000000  0001e5d3  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
425 .debug_macro  000000c1  0000000000000000  0000000000000000  0001e603  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
426 .debug_macro  0000004d  0000000000000000  0000000000000000  0001e6c4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
427 .debug_macro  00000010  0000000000000000  0000000000000000  0001e711  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
428 .debug_macro  00000019  0000000000000000  0000000000000000  0001e721  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
429 .debug_macro  00000020  0000000000000000  0000000000000000  0001e73a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
430 .debug_macro  000000fc  0000000000000000  0000000000000000  0001e75a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
431 .debug_macro  00000018  0000000000000000  0000000000000000  0001e856  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
432 .debug_macro  00000023  0000000000000000  0000000000000000  0001e86e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
433 .debug_macro  00000010  0000000000000000  0000000000000000  0001e891  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
434 .debug_macro  00000016  0000000000000000  0000000000000000  0001e8a1  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
435 .debug_macro  00000076  0000000000000000  0000000000000000  0001e8b7  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
436 .debug_macro  00000016  0000000000000000  0000000000000000  0001e92d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
437 .debug_macro  00000025  0000000000000000  0000000000000000  0001e943  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
438 .debug_macro  000000de  0000000000000000  0000000000000000  0001e968  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
439 .debug_macro  0000001c  0000000000000000  0000000000000000  0001ea46  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
440 .debug_macro  00000058  0000000000000000  0000000000000000  0001ea62  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
441 .debug_macro  00000088  0000000000000000  0000000000000000  0001eaba  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
442 .debug_macro  00000076  0000000000000000  0000000000000000  0001eb42  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
443 .debug_macro  00000010  0000000000000000  0000000000000000  0001ebb8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
444 .debug_macro  00000041  0000000000000000  0000000000000000  0001ebc8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
445 .debug_macro  000000ee  0000000000000000  0000000000000000  0001ec09  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
446 .debug_macro  00000010  0000000000000000  0000000000000000  0001ecf7  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
447 .debug_macro  000000e5  0000000000000000  0000000000000000  0001ed07  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
448 .debug_macro  00000012  0000000000000000  0000000000000000  0001edec  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
449 .debug_macro  0000001f  0000000000000000  0000000000000000  0001edfe  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
450 .debug_macro  00000016  0000000000000000  0000000000000000  0001ee1d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
451 .debug_macro  00000010  0000000000000000  0000000000000000  0001ee33  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
452 .debug_line   00001bf8  0000000000000000  0000000000000000  0001ee43  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
453 .debug_str    0002cd1c  0000000000000000  0000000000000000  00020a3b  2**0
                  CONTENTS, READONLY, DEBUGGING
454 .data.DW.ref.__gxx_personality_v0 00000008  0000000000000000  0000000000000000  0004d758  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
455 .comment      0000002e  0000000000000000  0000000000000000  0004d760  2**0
                  CONTENTS, READONLY
456 .note.GNU-stack 00000000  0000000000000000  0000000000000000  0004d78e  2**0
                  CONTENTS, READONLY
457 .eh_frame     00000df0  0000000000000000  0000000000000000  0004d790  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Дизассемблирование раздела .text:

0000000000000000 <_ZN6moduleC1EP11QStringListS1_>:
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	callq  21 <_ZN6moduleC1EP11QStringListS1_+0x21>
  21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  25:	48 83 c0 08          	add    $0x8,%rax
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	callq  31 <_ZN6moduleC1EP11QStringListS1_+0x31>
  31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  35:	48 83 c0 10          	add    $0x10,%rax
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	callq  41 <_ZN6moduleC1EP11QStringListS1_+0x41>
  41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  45:	48 83 c0 18          	add    $0x18,%rax
  49:	48 89 c7             	mov    %rax,%rdi
  4c:	e8 00 00 00 00       	callq  51 <_ZN6moduleC1EP11QStringListS1_+0x51>
  51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  55:	48 83 c0 20          	add    $0x20,%rax
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	callq  61 <_ZN6moduleC1EP11QStringListS1_+0x61>
  61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  65:	48 83 c0 28          	add    $0x28,%rax
  69:	48 89 c7             	mov    %rax,%rdi
  6c:	e8 00 00 00 00       	callq  71 <_ZN6moduleC1EP11QStringListS1_+0x71>
{
    this->code                  = *code;
  71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  75:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  79:	48 89 d6             	mov    %rdx,%rsi
  7c:	48 89 c7             	mov    %rax,%rdi
  7f:	e8 00 00 00 00       	callq  84 <_ZN6moduleC1EP11QStringListS1_+0x84>
    this->indexBase             = *indexBase;
  84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  88:	48 8d 50 18          	lea    0x18(%rax),%rdx
  8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  90:	48 89 c6             	mov    %rax,%rsi
  93:	48 89 d7             	mov    %rdx,%rdi
  96:	e8 00 00 00 00       	callq  9b <_ZN6moduleC1EP11QStringListS1_+0x9b>
}
  9b:	eb 6f                	jmp    10c <_ZN6moduleC1EP11QStringListS1_+0x10c>
  9d:	48 89 c3             	mov    %rax,%rbx
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a4:	48 83 c0 28          	add    $0x28,%rax
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	callq  b0 <_ZN6moduleC1EP11QStringListS1_+0xb0>
  b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b4:	48 83 c0 20          	add    $0x20,%rax
  b8:	48 89 c7             	mov    %rax,%rdi
  bb:	e8 00 00 00 00       	callq  c0 <_ZN6moduleC1EP11QStringListS1_+0xc0>
  c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c4:	48 83 c0 18          	add    $0x18,%rax
  c8:	48 89 c7             	mov    %rax,%rdi
  cb:	e8 00 00 00 00       	callq  d0 <_ZN6moduleC1EP11QStringListS1_+0xd0>
  d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d4:	48 83 c0 10          	add    $0x10,%rax
  d8:	48 89 c7             	mov    %rax,%rdi
  db:	e8 00 00 00 00       	callq  e0 <_ZN6moduleC1EP11QStringListS1_+0xe0>
  e0:	eb 03                	jmp    e5 <_ZN6moduleC1EP11QStringListS1_+0xe5>
  e2:	48 89 c3             	mov    %rax,%rbx
  e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e9:	48 83 c0 08          	add    $0x8,%rax
  ed:	48 89 c7             	mov    %rax,%rdi
  f0:	e8 00 00 00 00       	callq  f5 <_ZN6moduleC1EP11QStringListS1_+0xf5>
  f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f9:	48 89 c7             	mov    %rax,%rdi
  fc:	e8 00 00 00 00       	callq  101 <_ZN6moduleC1EP11QStringListS1_+0x101>
 101:	48 89 d8             	mov    %rbx,%rax
 104:	48 89 c7             	mov    %rax,%rdi
 107:	e8 00 00 00 00       	callq  10c <_ZN6moduleC1EP11QStringListS1_+0x10c>
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
 10c:	48 83 c4 28          	add    $0x28,%rsp
 110:	5b                   	pop    %rbx
 111:	5d                   	pop    %rbp
 112:	c3                   	retq   
 113:	90                   	nop

0000000000000114 <_ZN6module2A6Ev>:

QByteArray module::A6(){
 114:	55                   	push   %rbp
 115:	48 89 e5             	mov    %rsp,%rbp
 118:	41 55                	push   %r13
 11a:	41 54                	push   %r12
 11c:	53                   	push   %rbx
 11d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
 124:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
 12b:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
 132:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 139:	00 00 
 13b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 13f:	31 c0                	xor    %eax,%eax
    QByteArray result;
 141:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 148:	48 89 c7             	mov    %rax,%rdi
 14b:	e8 00 00 00 00       	callq  150 <_ZN6module2A6Ev+0x3c>

    QDataStream An(&result, QIODevice::ReadWrite);
 150:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 154:	be 03 00 00 00       	mov    $0x3,%esi
 159:	48 89 c7             	mov    %rax,%rdi
 15c:	e8 00 00 00 00       	callq  161 <_ZN6module2A6Ev+0x4d>
 161:	8b 55 a0             	mov    -0x60(%rbp),%edx
 164:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
 16b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 16f:	48 89 ce             	mov    %rcx,%rsi
 172:	48 89 c7             	mov    %rax,%rdi
 175:	e8 00 00 00 00       	callq  17a <_ZN6module2A6Ev+0x66>

    quint16 CRC16 = 0xF0F0;
 17a:	66 c7 85 6e ff ff ff 	movw   $0xf0f0,-0x92(%rbp)
 181:	f0 f0 

    quint8 counter = 0xEE;
 183:	c6 85 6c ff ff ff ee 	movb   $0xee,-0x94(%rbp)
    quint8 typeId  = 0x11;
 18a:	c6 85 6d ff ff ff 11 	movb   $0x11,-0x93(%rbp)

    An << counter << typeId << this->primary << this->id;
 191:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 198:	0f b6 40 32          	movzbl 0x32(%rax),%eax
 19c:	0f b6 d8             	movzbl %al,%ebx
 19f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 1a6:	0f b6 40 30          	movzbl 0x30(%rax),%eax
 1aa:	44 0f b6 e0          	movzbl %al,%r12d
 1ae:	44 0f b6 ad 6d ff ff 	movzbl -0x93(%rbp),%r13d
 1b5:	ff 
 1b6:	0f b6 95 6c ff ff ff 	movzbl -0x94(%rbp),%edx
 1bd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 1c1:	89 d6                	mov    %edx,%esi
 1c3:	48 89 c7             	mov    %rax,%rdi
 1c6:	e8 00 00 00 00       	callq  1cb <_ZN6module2A6Ev+0xb7>
 1cb:	44 89 ee             	mov    %r13d,%esi
 1ce:	48 89 c7             	mov    %rax,%rdi
 1d1:	e8 00 00 00 00       	callq  1d6 <_ZN6module2A6Ev+0xc2>
 1d6:	44 89 e6             	mov    %r12d,%esi
 1d9:	48 89 c7             	mov    %rax,%rdi
 1dc:	e8 00 00 00 00       	callq  1e1 <_ZN6module2A6Ev+0xcd>
 1e1:	89 de                	mov    %ebx,%esi
 1e3:	48 89 c7             	mov    %rax,%rdi
 1e6:	e8 00 00 00 00       	callq  1eb <_ZN6module2A6Ev+0xd7>

    QList<variable>::iterator it;
 1eb:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 1f2:	48 89 c7             	mov    %rax,%rdi
 1f5:	e8 00 00 00 00       	callq  1fa <_ZN6module2A6Ev+0xe6>
    for(it = this->variables.begin(); it != this->variables.end(); ++it){
 1fa:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 201:	48 8d 50 10          	lea    0x10(%rax),%rdx
 205:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 209:	48 89 d6             	mov    %rdx,%rsi
 20c:	48 89 c7             	mov    %rax,%rdi
 20f:	e8 00 00 00 00       	callq  214 <_ZN6module2A6Ev+0x100>
 214:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 218:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 21f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
 226:	48 8d 50 10          	lea    0x10(%rax),%rdx
 22a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 22e:	48 89 d6             	mov    %rdx,%rsi
 231:	48 89 c7             	mov    %rax,%rdi
 234:	e8 00 00 00 00       	callq  239 <_ZN6module2A6Ev+0x125>
 239:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
 23d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 244:	48 89 d6             	mov    %rdx,%rsi
 247:	48 89 c7             	mov    %rax,%rdi
 24a:	e8 00 00 00 00       	callq  24f <_ZN6module2A6Ev+0x13b>
 24f:	84 c0                	test   %al,%al
 251:	74 61                	je     2b4 <_ZN6module2A6Ev+0x1a0>
        An << *it->A6();
 253:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 25a:	48 89 c7             	mov    %rax,%rdi
 25d:	e8 00 00 00 00       	callq  262 <_ZN6module2A6Ev+0x14e>
 262:	48 89 c2             	mov    %rax,%rdx
 265:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 269:	48 89 d6             	mov    %rdx,%rsi
 26c:	48 89 c7             	mov    %rax,%rdi
 26f:	e8 00 00 00 00       	callq  274 <_ZN6module2A6Ev+0x160>
 274:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 278:	48 89 c7             	mov    %rax,%rdi
 27b:	e8 00 00 00 00       	callq  280 <_ZN6module2A6Ev+0x16c>
 280:	0f b6 00             	movzbl (%rax),%eax
 283:	0f be d0             	movsbl %al,%edx
 286:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 28a:	89 d6                	mov    %edx,%esi
 28c:	48 89 c7             	mov    %rax,%rdi
 28f:	e8 00 00 00 00       	callq  294 <_ZN6module2A6Ev+0x180>
 294:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 298:	48 89 c7             	mov    %rax,%rdi
 29b:	e8 00 00 00 00       	callq  2a0 <_ZN6module2A6Ev+0x18c>
    quint8 typeId  = 0x11;

    An << counter << typeId << this->primary << this->id;

    QList<variable>::iterator it;
    for(it = this->variables.begin(); it != this->variables.end(); ++it){
 2a0:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 2a7:	48 89 c7             	mov    %rax,%rdi
 2aa:	e8 00 00 00 00       	callq  2af <_ZN6module2A6Ev+0x19b>
 2af:	e9 6b ff ff ff       	jmpq   21f <_ZN6module2A6Ev+0x10b>
        An << *it->A6();
    }

    An << CRC16;
 2b4:	0f b7 95 6e ff ff ff 	movzwl -0x92(%rbp),%edx
 2bb:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 2bf:	89 d6                	mov    %edx,%esi
 2c1:	48 89 c7             	mov    %rax,%rdi
 2c4:	e8 00 00 00 00       	callq  2c9 <_ZN6module2A6Ev+0x1b5>
    return result;
 2c9:	90                   	nop
}

QByteArray module::A6(){
    QByteArray result;

    QDataStream An(&result, QIODevice::ReadWrite);
 2ca:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 2ce:	48 89 c7             	mov    %rax,%rdi
 2d1:	e8 00 00 00 00       	callq  2d6 <_ZN6module2A6Ev+0x1c2>
    for(it = this->variables.begin(); it != this->variables.end(); ++it){
        An << *it->A6();
    }

    An << CRC16;
    return result;
 2d6:	eb 3f                	jmp    317 <_ZN6module2A6Ev+0x203>
 2d8:	48 89 c3             	mov    %rax,%rbx

    An << counter << typeId << this->primary << this->id;

    QList<variable>::iterator it;
    for(it = this->variables.begin(); it != this->variables.end(); ++it){
        An << *it->A6();
 2db:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 2df:	48 89 c7             	mov    %rax,%rdi
 2e2:	e8 00 00 00 00       	callq  2e7 <_ZN6module2A6Ev+0x1d3>
 2e7:	eb 03                	jmp    2ec <_ZN6module2A6Ev+0x1d8>
 2e9:	48 89 c3             	mov    %rax,%rbx
}

QByteArray module::A6(){
    QByteArray result;

    QDataStream An(&result, QIODevice::ReadWrite);
 2ec:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 2f0:	48 89 c7             	mov    %rax,%rdi
 2f3:	e8 00 00 00 00       	callq  2f8 <_ZN6module2A6Ev+0x1e4>
 2f8:	eb 03                	jmp    2fd <_ZN6module2A6Ev+0x1e9>
 2fa:	48 89 c3             	mov    %rax,%rbx
 2fd:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 304:	48 89 c7             	mov    %rax,%rdi
 307:	e8 00 00 00 00       	callq  30c <_ZN6module2A6Ev+0x1f8>
 30c:	48 89 d8             	mov    %rbx,%rax
 30f:	48 89 c7             	mov    %rax,%rdi
 312:	e8 00 00 00 00       	callq  317 <_ZN6module2A6Ev+0x203>
        An << *it->A6();
    }

    An << CRC16;
    return result;
}
 317:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 31e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 322:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 329:	00 00 
 32b:	74 05                	je     332 <_ZN6module2A6Ev+0x21e>
 32d:	e8 00 00 00 00       	callq  332 <_ZN6module2A6Ev+0x21e>
 332:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
 339:	5b                   	pop    %rbx
 33a:	41 5c                	pop    %r12
 33c:	41 5d                	pop    %r13
 33e:	5d                   	pop    %rbp
 33f:	c3                   	retq   

0000000000000340 <_ZN6module5toHexEv>:


QString module::toHex(){
 340:	55                   	push   %rbp
 341:	48 89 e5             	mov    %rsp,%rbp
 344:	53                   	push   %rbx
 345:	48 83 ec 48          	sub    $0x48,%rsp
 349:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
 34d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
 351:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 358:	00 00 
 35a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 35e:	31 c0                	xor    %eax,%eax

    this->compiledHex.clear();
 360:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 364:	48 83 c0 20          	add    $0x20,%rax
 368:	48 89 c7             	mov    %rax,%rdi
 36b:	e8 00 00 00 00       	callq  370 <_ZN6module5toHexEv+0x30>
    int n = this->compiled.size();
 370:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 374:	48 83 c0 08          	add    $0x8,%rax
 378:	48 89 c7             	mov    %rax,%rdi
 37b:	e8 00 00 00 00       	callq  380 <_ZN6module5toHexEv+0x40>
 380:	89 45 cc             	mov    %eax,-0x34(%rbp)
    int i = 0;
 383:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
    for(i=0; i<n; i++){
 38a:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
 391:	8b 45 c8             	mov    -0x38(%rbp),%eax
 394:	3b 45 cc             	cmp    -0x34(%rbp),%eax
 397:	0f 8d 01 01 00 00    	jge    49e <_ZN6module5toHexEv+0x15e>
        unsigned char c = this->compiled.at(i);
 39d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3a1:	48 8d 50 08          	lea    0x8(%rax),%rdx
 3a5:	8b 45 c8             	mov    -0x38(%rbp),%eax
 3a8:	89 c6                	mov    %eax,%esi
 3aa:	48 89 d7             	mov    %rdx,%rdi
 3ad:	e8 00 00 00 00       	callq  3b2 <_ZN6module5toHexEv+0x72>
 3b2:	88 45 c7             	mov    %al,-0x39(%rbp)
        QString hex = QString::number(c, 16);
 3b5:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
 3b9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 3bd:	ba 10 00 00 00       	mov    $0x10,%edx
 3c2:	89 ce                	mov    %ecx,%esi
 3c4:	48 89 c7             	mov    %rax,%rdi
 3c7:	e8 00 00 00 00       	callq  3cc <_ZN6module5toHexEv+0x8c>

        if(i%4 == 0) this->compiledHex.append("  ");
 3cc:	8b 45 c8             	mov    -0x38(%rbp),%eax
 3cf:	83 e0 03             	and    $0x3,%eax
 3d2:	85 c0                	test   %eax,%eax
 3d4:	75 17                	jne    3ed <_ZN6module5toHexEv+0xad>
 3d6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3da:	48 83 c0 20          	add    $0x20,%rax
 3de:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 3e5 <_ZN6module5toHexEv+0xa5>
 3e5:	48 89 c7             	mov    %rax,%rdi
 3e8:	e8 00 00 00 00       	callq  3ed <_ZN6module5toHexEv+0xad>
        if(i%8 == 0) this->compiledHex.append("   ");
 3ed:	8b 45 c8             	mov    -0x38(%rbp),%eax
 3f0:	83 e0 07             	and    $0x7,%eax
 3f3:	85 c0                	test   %eax,%eax
 3f5:	75 17                	jne    40e <_ZN6module5toHexEv+0xce>
 3f7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3fb:	48 83 c0 20          	add    $0x20,%rax
 3ff:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 406 <_ZN6module5toHexEv+0xc6>
 406:	48 89 c7             	mov    %rax,%rdi
 409:	e8 00 00 00 00       	callq  40e <_ZN6module5toHexEv+0xce>
        if(i%16 == 0) this->compiledHex.append("\n");
 40e:	8b 45 c8             	mov    -0x38(%rbp),%eax
 411:	83 e0 0f             	and    $0xf,%eax
 414:	85 c0                	test   %eax,%eax
 416:	75 17                	jne    42f <_ZN6module5toHexEv+0xef>
 418:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 41c:	48 83 c0 20          	add    $0x20,%rax
 420:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 427 <_ZN6module5toHexEv+0xe7>
 427:	48 89 c7             	mov    %rax,%rdi
 42a:	e8 00 00 00 00       	callq  42f <_ZN6module5toHexEv+0xef>
        if(c<16) this->compiledHex.append("0");
 42f:	80 7d c7 0f          	cmpb   $0xf,-0x39(%rbp)
 433:	77 17                	ja     44c <_ZN6module5toHexEv+0x10c>
 435:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 439:	48 83 c0 20          	add    $0x20,%rax
 43d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 444 <_ZN6module5toHexEv+0x104>
 444:	48 89 c7             	mov    %rax,%rdi
 447:	e8 00 00 00 00       	callq  44c <_ZN6module5toHexEv+0x10c>
        this->compiledHex.append(hex + " ");
 44c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 450:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 454:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 45b <_ZN6module5toHexEv+0x11b>
 45b:	48 89 ce             	mov    %rcx,%rsi
 45e:	48 89 c7             	mov    %rax,%rdi
 461:	e8 00 00 00 00       	callq  466 <_ZN6module5toHexEv+0x126>
 466:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 46a:	48 8d 50 20          	lea    0x20(%rax),%rdx
 46e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 472:	48 89 c6             	mov    %rax,%rsi
 475:	48 89 d7             	mov    %rdx,%rdi
 478:	e8 00 00 00 00       	callq  47d <_ZN6module5toHexEv+0x13d>
 47d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 481:	48 89 c7             	mov    %rax,%rdi
 484:	e8 00 00 00 00       	callq  489 <_ZN6module5toHexEv+0x149>
    this->compiledHex.clear();
    int n = this->compiled.size();
    int i = 0;
    for(i=0; i<n; i++){
        unsigned char c = this->compiled.at(i);
        QString hex = QString::number(c, 16);
 489:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 48d:	48 89 c7             	mov    %rax,%rdi
 490:	e8 00 00 00 00       	callq  495 <_ZN6module5toHexEv+0x155>
QString module::toHex(){

    this->compiledHex.clear();
    int n = this->compiled.size();
    int i = 0;
    for(i=0; i<n; i++){
 495:	83 45 c8 01          	addl   $0x1,-0x38(%rbp)
 499:	e9 f3 fe ff ff       	jmpq   391 <_ZN6module5toHexEv+0x51>
        if(i%16 == 0) this->compiledHex.append("\n");
        if(c<16) this->compiledHex.append("0");
        this->compiledHex.append(hex + " ");
    }

    return this->compiledHex;
 49e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 4a2:	48 8d 50 20          	lea    0x20(%rax),%rdx
 4a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 4aa:	48 89 d6             	mov    %rdx,%rsi
 4ad:	48 89 c7             	mov    %rax,%rdi
 4b0:	e8 00 00 00 00       	callq  4b5 <_ZN6module5toHexEv+0x175>
}
 4b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 4b9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 4bd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 4c4:	00 00 
 4c6:	74 32                	je     4fa <_ZN6module5toHexEv+0x1ba>
 4c8:	eb 2b                	jmp    4f5 <_ZN6module5toHexEv+0x1b5>
 4ca:	48 89 c3             	mov    %rax,%rbx

        if(i%4 == 0) this->compiledHex.append("  ");
        if(i%8 == 0) this->compiledHex.append("   ");
        if(i%16 == 0) this->compiledHex.append("\n");
        if(c<16) this->compiledHex.append("0");
        this->compiledHex.append(hex + " ");
 4cd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 4d1:	48 89 c7             	mov    %rax,%rdi
 4d4:	e8 00 00 00 00       	callq  4d9 <_ZN6module5toHexEv+0x199>
 4d9:	eb 03                	jmp    4de <_ZN6module5toHexEv+0x19e>
 4db:	48 89 c3             	mov    %rax,%rbx
    this->compiledHex.clear();
    int n = this->compiled.size();
    int i = 0;
    for(i=0; i<n; i++){
        unsigned char c = this->compiled.at(i);
        QString hex = QString::number(c, 16);
 4de:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 4e2:	48 89 c7             	mov    %rax,%rdi
 4e5:	e8 00 00 00 00       	callq  4ea <_ZN6module5toHexEv+0x1aa>
 4ea:	48 89 d8             	mov    %rbx,%rax
 4ed:	48 89 c7             	mov    %rax,%rdi
 4f0:	e8 00 00 00 00       	callq  4f5 <_ZN6module5toHexEv+0x1b5>
        if(c<16) this->compiledHex.append("0");
        this->compiledHex.append(hex + " ");
    }

    return this->compiledHex;
}
 4f5:	e8 00 00 00 00       	callq  4fa <_ZN6module5toHexEv+0x1ba>
 4fa:	48 83 c4 48          	add    $0x48,%rsp
 4fe:	5b                   	pop    %rbx
 4ff:	5d                   	pop    %rbp
 500:	c3                   	retq   
 501:	90                   	nop

0000000000000502 <_ZN6module16prepareVariablesEv>:

void module::prepareVariables(){
 502:	55                   	push   %rbp
 503:	48 89 e5             	mov    %rsp,%rbp
 506:	53                   	push   %rbx
 507:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
 50e:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
 515:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 51c:	00 00 
 51e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 522:	31 c0                	xor    %eax,%eax
    QStringList::iterator it;
 524:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
 52b:	48 89 c7             	mov    %rax,%rdi
 52e:	e8 00 00 00 00       	callq  533 <_ZN6module16prepareVariablesEv+0x31>
    VarTypes VT;
 533:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
 53a:	48 89 c7             	mov    %rax,%rdi
 53d:	e8 00 00 00 00       	callq  542 <_ZN6module16prepareVariablesEv+0x40>
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
 542:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 549:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
 550:	48 89 d6             	mov    %rdx,%rsi
 553:	48 89 c7             	mov    %rax,%rdi
 556:	e8 00 00 00 00       	callq  55b <_ZN6module16prepareVariablesEv+0x59>
 55b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 562:	48 8d 8d 00 ff ff ff 	lea    -0x100(%rbp),%rcx
 569:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 570 <_ZN6module16prepareVariablesEv+0x6e>
 570:	48 89 ce             	mov    %rcx,%rsi
 573:	48 89 c7             	mov    %rax,%rdi
 576:	e8 00 00 00 00       	callq  57b <_ZN6module16prepareVariablesEv+0x79>
 57b:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
 582:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 589:	b9 00 00 00 00       	mov    $0x0,%ecx
 58e:	ba 01 00 00 00       	mov    $0x1,%edx
 593:	48 89 c7             	mov    %rax,%rdi
 596:	e8 00 00 00 00       	callq  59b <_ZN6module16prepareVariablesEv+0x99>
 59b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 5a2:	48 89 c7             	mov    %rax,%rdi
 5a5:	e8 00 00 00 00       	callq  5aa <_ZN6module16prepareVariablesEv+0xa8>
 5aa:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 5b1:	48 89 c7             	mov    %rax,%rdi
 5b4:	e8 00 00 00 00       	callq  5b9 <_ZN6module16prepareVariablesEv+0xb7>
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // иЗя : порт : номер
 5b9:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 5c0:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 5c7 <_ZN6module16prepareVariablesEv+0xc5>
 5c7:	48 89 c7             	mov    %rax,%rdi
 5ca:	e8 00 00 00 00       	callq  5cf <_ZN6module16prepareVariablesEv+0xcd>
 5cf:	48 8d b5 40 ff ff ff 	lea    -0xc0(%rbp),%rsi
 5d6:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
 5dd:	b9 00 00 00 00       	mov    $0x0,%ecx
 5e2:	ba 01 00 00 00       	mov    $0x1,%edx
 5e7:	48 89 c7             	mov    %rax,%rdi
 5ea:	e8 00 00 00 00       	callq  5ef <_ZN6module16prepareVariablesEv+0xed>
 5ef:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 5f6:	48 89 c7             	mov    %rax,%rdi
 5f9:	e8 00 00 00 00       	callq  5fe <_ZN6module16prepareVariablesEv+0xfc>
    QRegExp testVarName("\\w+");
 5fe:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 605:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 60c <_ZN6module16prepareVariablesEv+0x10a>
 60c:	48 89 c7             	mov    %rax,%rdi
 60f:	e8 00 00 00 00       	callq  614 <_ZN6module16prepareVariablesEv+0x112>
 614:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
 61b:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 622:	b9 00 00 00 00       	mov    $0x0,%ecx
 627:	ba 01 00 00 00       	mov    $0x1,%edx
 62c:	48 89 c7             	mov    %rax,%rdi
 62f:	e8 00 00 00 00       	callq  634 <_ZN6module16prepareVariablesEv+0x132>
 634:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 63b:	48 89 c7             	mov    %rax,%rdi
 63e:	e8 00 00 00 00       	callq  643 <_ZN6module16prepareVariablesEv+0x141>

    for(it=this->code.begin(); it!=this->code.end(); ++it){
 643:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
 64a:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 651:	48 89 d6             	mov    %rdx,%rsi
 654:	48 89 c7             	mov    %rax,%rdi
 657:	e8 00 00 00 00       	callq  65c <_ZN6module16prepareVariablesEv+0x15a>
 65c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 663:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
 66a:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
 671:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 675:	48 89 d6             	mov    %rdx,%rsi
 678:	48 89 c7             	mov    %rax,%rdi
 67b:	e8 00 00 00 00       	callq  680 <_ZN6module16prepareVariablesEv+0x17e>
 680:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
 684:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
 68b:	48 89 d6             	mov    %rdx,%rsi
 68e:	48 89 c7             	mov    %rax,%rdi
 691:	e8 00 00 00 00       	callq  696 <_ZN6module16prepareVariablesEv+0x194>
 696:	84 c0                	test   %al,%al
 698:	0f 84 9b 03 00 00    	je     a39 <_ZN6module16prepareVariablesEv+0x537>
        int test = testDefinition.indexIn(*it);
 69e:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
 6a5:	48 89 c7             	mov    %rax,%rdi
 6a8:	e8 00 00 00 00       	callq  6ad <_ZN6module16prepareVariablesEv+0x1ab>
 6ad:	48 89 c6             	mov    %rax,%rsi
 6b0:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 6b7:	b9 00 00 00 00       	mov    $0x0,%ecx
 6bc:	ba 00 00 00 00       	mov    $0x0,%edx
 6c1:	48 89 c7             	mov    %rax,%rdi
 6c4:	e8 00 00 00 00       	callq  6c9 <_ZN6module16prepareVariablesEv+0x1c7>
 6c9:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
        if(test >= 0){
 6cf:	83 bd bc fe ff ff 00 	cmpl   $0x0,-0x144(%rbp)
 6d6:	0f 88 49 03 00 00    	js     a25 <_ZN6module16prepareVariablesEv+0x523>
            QString type = testDefinition.cap(1);
 6dc:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 6e3:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
 6ea:	ba 01 00 00 00       	mov    $0x1,%edx
 6ef:	48 89 ce             	mov    %rcx,%rsi
 6f2:	48 89 c7             	mov    %rax,%rdi
 6f5:	e8 00 00 00 00       	callq  6fa <_ZN6module16prepareVariablesEv+0x1f8>
            QString defs = testDefinition.cap(2);
 6fa:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 701:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
 708:	ba 02 00 00 00       	mov    $0x2,%edx
 70d:	48 89 ce             	mov    %rcx,%rsi
 710:	48 89 c7             	mov    %rax,%rdi
 713:	e8 00 00 00 00       	callq  718 <_ZN6module16prepareVariablesEv+0x216>

            QStringList listCommaSplitted = defs.split("\,");
 718:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 71f:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 726 <_ZN6module16prepareVariablesEv+0x224>
 726:	48 89 c7             	mov    %rax,%rdi
 729:	e8 00 00 00 00       	callq  72e <_ZN6module16prepareVariablesEv+0x22c>
 72e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 735:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
 73c:	48 8d b5 40 ff ff ff 	lea    -0xc0(%rbp),%rsi
 743:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 749:	b9 00 00 00 00       	mov    $0x0,%ecx
 74e:	48 89 c7             	mov    %rax,%rdi
 751:	e8 00 00 00 00       	callq  756 <_ZN6module16prepareVariablesEv+0x254>
 756:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 75d:	48 89 c7             	mov    %rax,%rdi
 760:	e8 00 00 00 00       	callq  765 <_ZN6module16prepareVariablesEv+0x263>
            variable v;
 765:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 769:	48 89 c7             	mov    %rax,%rdi
 76c:	e8 00 00 00 00       	callq  771 <_ZN6module16prepareVariablesEv+0x26f>

            QStringList::iterator it;
 771:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 778:	48 89 c7             	mov    %rax,%rdi
 77b:	e8 00 00 00 00       	callq  780 <_ZN6module16prepareVariablesEv+0x27e>
            for(it=listCommaSplitted.begin(); it!=listCommaSplitted.end(); ++it){
 780:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 784:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
 78b:	48 89 d6             	mov    %rdx,%rsi
 78e:	48 89 c7             	mov    %rax,%rdi
 791:	e8 00 00 00 00       	callq  796 <_ZN6module16prepareVariablesEv+0x294>
 796:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 79a:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 7a1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 7a5:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
 7ac:	48 89 d6             	mov    %rdx,%rsi
 7af:	48 89 c7             	mov    %rax,%rdi
 7b2:	e8 00 00 00 00       	callq  7b7 <_ZN6module16prepareVariablesEv+0x2b5>
 7b7:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
 7bb:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 7c2:	48 89 d6             	mov    %rdx,%rsi
 7c5:	48 89 c7             	mov    %rax,%rdi
 7c8:	e8 00 00 00 00       	callq  7cd <_ZN6module16prepareVariablesEv+0x2cb>
 7cd:	84 c0                	test   %al,%al
 7cf:	0f 84 17 02 00 00    	je     9ec <_ZN6module16prepareVariablesEv+0x4ea>
                int indexRgPort     =  testRgPort.indexIn(*it);
 7d5:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 7dc:	48 89 c7             	mov    %rax,%rdi
 7df:	e8 00 00 00 00       	callq  7e4 <_ZN6module16prepareVariablesEv+0x2e2>
 7e4:	48 89 c6             	mov    %rax,%rsi
 7e7:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
 7ee:	b9 00 00 00 00       	mov    $0x0,%ecx
 7f3:	ba 00 00 00 00       	mov    $0x0,%edx
 7f8:	48 89 c7             	mov    %rax,%rdi
 7fb:	e8 00 00 00 00       	callq  800 <_ZN6module16prepareVariablesEv+0x2fe>
 800:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
                int indexVarName    =  testVarName.indexIn(*it);
 806:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 80d:	48 89 c7             	mov    %rax,%rdi
 810:	e8 00 00 00 00       	callq  815 <_ZN6module16prepareVariablesEv+0x313>
 815:	48 89 c6             	mov    %rax,%rsi
 818:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 81f:	b9 00 00 00 00       	mov    $0x0,%ecx
 824:	ba 00 00 00 00       	mov    $0x0,%edx
 829:	48 89 c7             	mov    %rax,%rdi
 82c:	e8 00 00 00 00       	callq  831 <_ZN6module16prepareVariablesEv+0x32f>
 831:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
                int countRgPort     =  testRgPort.captureCount();
 837:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
 83e:	48 89 c7             	mov    %rax,%rdi
 841:	e8 00 00 00 00       	callq  846 <_ZN6module16prepareVariablesEv+0x344>
 846:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
                int countVarName    =  testVarName.captureCount();
 84c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 853:	48 89 c7             	mov    %rax,%rdi
 856:	e8 00 00 00 00       	callq  85b <_ZN6module16prepareVariablesEv+0x359>
 85b:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)

                if(indexRgPort >= 0){
 861:	83 bd c0 fe ff ff 00 	cmpl   $0x0,-0x140(%rbp)
 868:	0f 88 e8 00 00 00    	js     956 <_ZN6module16prepareVariablesEv+0x454>
                    v.name                  = testRgPort.cap(1);
 86e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 872:	48 8d 8d 10 ff ff ff 	lea    -0xf0(%rbp),%rcx
 879:	ba 01 00 00 00       	mov    $0x1,%edx
 87e:	48 89 ce             	mov    %rcx,%rsi
 881:	48 89 c7             	mov    %rax,%rdi
 884:	e8 00 00 00 00       	callq  889 <_ZN6module16prepareVariablesEv+0x387>
 889:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 88d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
 891:	48 83 c2 18          	add    $0x18,%rdx
 895:	48 89 c6             	mov    %rax,%rsi
 898:	48 89 d7             	mov    %rdx,%rdi
 89b:	e8 00 00 00 00       	callq  8a0 <_ZN6module16prepareVariablesEv+0x39e>
 8a0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 8a4:	48 89 c7             	mov    %rax,%rdi
 8a7:	e8 00 00 00 00       	callq  8ac <_ZN6module16prepareVariablesEv+0x3aa>

                    QString assignment      = testRgPort.cap(2);
 8ac:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 8b0:	48 8d 8d 10 ff ff ff 	lea    -0xf0(%rbp),%rcx
 8b7:	ba 02 00 00 00       	mov    $0x2,%edx
 8bc:	48 89 ce             	mov    %rcx,%rsi
 8bf:	48 89 c7             	mov    %rax,%rdi
 8c2:	e8 00 00 00 00       	callq  8c7 <_ZN6module16prepareVariablesEv+0x3c5>
                    QString address         = testRgPort.cap(3);
 8c7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 8cb:	48 8d 8d 10 ff ff ff 	lea    -0xf0(%rbp),%rcx
 8d2:	ba 03 00 00 00       	mov    $0x3,%edx
 8d7:	48 89 ce             	mov    %rcx,%rsi
 8da:	48 89 c7             	mov    %rax,%rdi
 8dd:	e8 00 00 00 00       	callq  8e2 <_ZN6module16prepareVariablesEv+0x3e0>
                    if(assignment=="port"){
 8e2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 8e6:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 8ed <_ZN6module16prepareVariablesEv+0x3eb>
 8ed:	48 89 c7             	mov    %rax,%rdi
 8f0:	e8 00 00 00 00       	callq  8f5 <_ZN6module16prepareVariablesEv+0x3f3>
 8f5:	84 c0                	test   %al,%al
 8f7:	74 28                	je     921 <_ZN6module16prepareVariablesEv+0x41f>
                        bool ok;
                        v.assign            = 80;
 8f9:	c6 45 c1 50          	movb   $0x50,-0x3f(%rbp)
                        v.VP.indexRP        = address.toInt(&ok, 10);
 8fd:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
 901:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 905:	ba 0a 00 00 00       	mov    $0xa,%edx
 90a:	48 89 ce             	mov    %rcx,%rsi
 90d:	48 89 c7             	mov    %rax,%rdi
 910:	e8 00 00 00 00       	callq  915 <_ZN6module16prepareVariablesEv+0x413>
 915:	89 45 c4             	mov    %eax,-0x3c(%rbp)
                        v.VP.eventCHANGE    = 0x00010000;
 918:	c7 45 d0 00 00 01 00 	movl   $0x10000,-0x30(%rbp)
 91f:	eb 1b                	jmp    93c <_ZN6module16prepareVariablesEv+0x43a>
                    }else if(assignment=="rg"){
 921:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 925:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 92c <_ZN6module16prepareVariablesEv+0x42a>
 92c:	48 89 c7             	mov    %rax,%rdi
 92f:	e8 00 00 00 00       	callq  934 <_ZN6module16prepareVariablesEv+0x432>
 934:	84 c0                	test   %al,%al
 936:	74 04                	je     93c <_ZN6module16prepareVariablesEv+0x43a>
                        v.assign = 40;
 938:	c6 45 c1 28          	movb   $0x28,-0x3f(%rbp)

                if(indexRgPort >= 0){
                    v.name                  = testRgPort.cap(1);

                    QString assignment      = testRgPort.cap(2);
                    QString address         = testRgPort.cap(3);
 93c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 940:	48 89 c7             	mov    %rax,%rdi
 943:	e8 00 00 00 00       	callq  948 <_ZN6module16prepareVariablesEv+0x446>
                int countVarName    =  testVarName.captureCount();

                if(indexRgPort >= 0){
                    v.name                  = testRgPort.cap(1);

                    QString assignment      = testRgPort.cap(2);
 948:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 94c:	48 89 c7             	mov    %rax,%rdi
 94f:	e8 00 00 00 00       	callq  954 <_ZN6module16prepareVariablesEv+0x452>
 954:	eb 42                	jmp    998 <_ZN6module16prepareVariablesEv+0x496>
                        v.assign = 40;
                    }else{
                        // error. undefined assignment.
                    }
                }else{
                    v.assign    = 4;
 956:	c6 45 c1 04          	movb   $0x4,-0x3f(%rbp)
                    v.name      = testVarName.cap(0);
 95a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 95e:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 965:	ba 00 00 00 00       	mov    $0x0,%edx
 96a:	48 89 ce             	mov    %rcx,%rsi
 96d:	48 89 c7             	mov    %rax,%rdi
 970:	e8 00 00 00 00       	callq  975 <_ZN6module16prepareVariablesEv+0x473>
 975:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 979:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
 97d:	48 83 c2 18          	add    $0x18,%rdx
 981:	48 89 c6             	mov    %rax,%rsi
 984:	48 89 d7             	mov    %rdx,%rdi
 987:	e8 00 00 00 00       	callq  98c <_ZN6module16prepareVariablesEv+0x48a>
 98c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 990:	48 89 c7             	mov    %rax,%rdi
 993:	e8 00 00 00 00       	callq  998 <_ZN6module16prepareVariablesEv+0x496>
                }
                v.index = this->indexBase.indexOf(v.name);
 998:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
 99f:	48 83 c0 18          	add    $0x18,%rax
 9a3:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
 9a7:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
 9ab:	ba 00 00 00 00       	mov    $0x0,%edx
 9b0:	48 89 ce             	mov    %rcx,%rsi
 9b3:	48 89 c7             	mov    %rax,%rdi
 9b6:	e8 00 00 00 00       	callq  9bb <_ZN6module16prepareVariablesEv+0x4b9>
 9bb:	88 45 c0             	mov    %al,-0x40(%rbp)
                this->variables.append(v);
 9be:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
 9c5:	48 8d 50 10          	lea    0x10(%rax),%rdx
 9c9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 9cd:	48 89 c6             	mov    %rax,%rsi
 9d0:	48 89 d7             	mov    %rdx,%rdi
 9d3:	e8 00 00 00 00       	callq  9d8 <_ZN6module16prepareVariablesEv+0x4d6>

            QStringList listCommaSplitted = defs.split("\,");
            variable v;

            QStringList::iterator it;
            for(it=listCommaSplitted.begin(); it!=listCommaSplitted.end(); ++it){
 9d8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 9df:	48 89 c7             	mov    %rax,%rdi
 9e2:	e8 00 00 00 00       	callq  9e7 <_ZN6module16prepareVariablesEv+0x4e5>
 9e7:	e9 b5 fd ff ff       	jmpq   7a1 <_ZN6module16prepareVariablesEv+0x29f>
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);

            QStringList listCommaSplitted = defs.split("\,");
            variable v;
 9ec:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 9f0:	48 89 c7             	mov    %rax,%rdi
 9f3:	e8 00 00 00 00       	callq  9f8 <_ZN6module16prepareVariablesEv+0x4f6>
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);

            QStringList listCommaSplitted = defs.split("\,");
 9f8:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 9ff:	48 89 c7             	mov    %rax,%rdi
 a02:	e8 00 00 00 00       	callq  a07 <_ZN6module16prepareVariablesEv+0x505>

    for(it=this->code.begin(); it!=this->code.end(); ++it){
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);
 a07:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 a0e:	48 89 c7             	mov    %rax,%rdi
 a11:	e8 00 00 00 00       	callq  a16 <_ZN6module16prepareVariablesEv+0x514>
    QRegExp testVarName("\\w+");

    for(it=this->code.begin(); it!=this->code.end(); ++it){
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
 a16:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 a1d:	48 89 c7             	mov    %rax,%rdi
 a20:	e8 00 00 00 00       	callq  a25 <_ZN6module16prepareVariablesEv+0x523>
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // иЗя : порт : номер
    QRegExp testVarName("\\w+");

    for(it=this->code.begin(); it!=this->code.end(); ++it){
 a25:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
 a2c:	48 89 c7             	mov    %rax,%rdi
 a2f:	e8 00 00 00 00       	callq  a34 <_ZN6module16prepareVariablesEv+0x532>
 a34:	e9 31 fc ff ff       	jmpq   66a <_ZN6module16prepareVariablesEv+0x168>
void module::prepareVariables(){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // иЗя : порт : номер
    QRegExp testVarName("\\w+");
 a39:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 a40:	48 89 c7             	mov    %rax,%rdi
 a43:	e8 00 00 00 00       	callq  a48 <_ZN6module16prepareVariablesEv+0x546>

void module::prepareVariables(){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // иЗя : порт : номер
 a48:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
 a4f:	48 89 c7             	mov    %rax,%rdi
 a52:	e8 00 00 00 00       	callq  a57 <_ZN6module16prepareVariablesEv+0x555>
}

void module::prepareVariables(){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
 a57:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 a5e:	48 89 c7             	mov    %rax,%rdi
 a61:	e8 00 00 00 00       	callq  a66 <_ZN6module16prepareVariablesEv+0x564>
    return this->compiledHex;
}

void module::prepareVariables(){
    QStringList::iterator it;
    VarTypes VT;
 a66:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
 a6d:	48 89 c7             	mov    %rax,%rdi
 a70:	e8 00 00 00 00       	callq  a75 <_ZN6module16prepareVariablesEv+0x573>
                v.index = this->indexBase.indexOf(v.name);
                this->variables.append(v);
            }
        }
    }
}
 a75:	90                   	nop
 a76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 a7a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 a81:	00 00 
 a83:	0f 84 d1 01 00 00    	je     c5a <_ZN6module16prepareVariablesEv+0x758>
 a89:	e9 c7 01 00 00       	jmpq   c55 <_ZN6module16prepareVariablesEv+0x753>
 a8e:	48 89 c3             	mov    %rax,%rbx
 a91:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 a98:	48 89 c7             	mov    %rax,%rdi
 a9b:	e8 00 00 00 00       	callq  aa0 <_ZN6module16prepareVariablesEv+0x59e>
 aa0:	eb 17                	jmp    ab9 <_ZN6module16prepareVariablesEv+0x5b7>
 aa2:	48 89 c3             	mov    %rax,%rbx
 aa5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 aac:	48 89 c7             	mov    %rax,%rdi
 aaf:	e8 00 00 00 00       	callq  ab4 <_ZN6module16prepareVariablesEv+0x5b2>
 ab4:	eb 03                	jmp    ab9 <_ZN6module16prepareVariablesEv+0x5b7>
 ab6:	48 89 c3             	mov    %rax,%rbx
 ab9:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 ac0:	48 89 c7             	mov    %rax,%rdi
 ac3:	e8 00 00 00 00       	callq  ac8 <_ZN6module16prepareVariablesEv+0x5c6>
 ac8:	e9 6e 01 00 00       	jmpq   c3b <_ZN6module16prepareVariablesEv+0x739>
 acd:	48 89 c3             	mov    %rax,%rbx
 ad0:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 ad7:	48 89 c7             	mov    %rax,%rdi
 ada:	e8 00 00 00 00       	callq  adf <_ZN6module16prepareVariablesEv+0x5dd>
 adf:	e9 57 01 00 00       	jmpq   c3b <_ZN6module16prepareVariablesEv+0x739>
 ae4:	48 89 c3             	mov    %rax,%rbx
 ae7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 aee:	48 89 c7             	mov    %rax,%rdi
 af1:	e8 00 00 00 00       	callq  af6 <_ZN6module16prepareVariablesEv+0x5f4>
 af6:	e9 2c 01 00 00       	jmpq   c27 <_ZN6module16prepareVariablesEv+0x725>
 afb:	48 89 c3             	mov    %rax,%rbx
 afe:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
 b05:	48 89 c7             	mov    %rax,%rdi
 b08:	e8 00 00 00 00       	callq  b0d <_ZN6module16prepareVariablesEv+0x60b>
 b0d:	e9 15 01 00 00       	jmpq   c27 <_ZN6module16prepareVariablesEv+0x725>
 b12:	48 89 c3             	mov    %rax,%rbx
 b15:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 b1c:	48 89 c7             	mov    %rax,%rdi
 b1f:	e8 00 00 00 00       	callq  b24 <_ZN6module16prepareVariablesEv+0x622>
 b24:	e9 ea 00 00 00       	jmpq   c13 <_ZN6module16prepareVariablesEv+0x711>
 b29:	48 89 c3             	mov    %rax,%rbx
 b2c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 b33:	48 89 c7             	mov    %rax,%rdi
 b36:	e8 00 00 00 00       	callq  b3b <_ZN6module16prepareVariablesEv+0x639>
 b3b:	e9 d3 00 00 00       	jmpq   c13 <_ZN6module16prepareVariablesEv+0x711>
 b40:	48 89 c3             	mov    %rax,%rbx
 b43:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 b4a:	48 89 c7             	mov    %rax,%rdi
 b4d:	e8 00 00 00 00       	callq  b52 <_ZN6module16prepareVariablesEv+0x650>
 b52:	e9 80 00 00 00       	jmpq   bd7 <_ZN6module16prepareVariablesEv+0x6d5>
 b57:	48 89 c3             	mov    %rax,%rbx
 b5a:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 b61:	48 89 c7             	mov    %rax,%rdi
 b64:	e8 00 00 00 00       	callq  b69 <_ZN6module16prepareVariablesEv+0x667>
 b69:	eb 6c                	jmp    bd7 <_ZN6module16prepareVariablesEv+0x6d5>
 b6b:	48 89 c3             	mov    %rax,%rbx
                int indexVarName    =  testVarName.indexIn(*it);
                int countRgPort     =  testRgPort.captureCount();
                int countVarName    =  testVarName.captureCount();

                if(indexRgPort >= 0){
                    v.name                  = testRgPort.cap(1);
 b6e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 b72:	48 89 c7             	mov    %rax,%rdi
 b75:	e8 00 00 00 00       	callq  b7a <_ZN6module16prepareVariablesEv+0x678>
 b7a:	eb 36                	jmp    bb2 <_ZN6module16prepareVariablesEv+0x6b0>
 b7c:	48 89 c3             	mov    %rax,%rbx

                    QString assignment      = testRgPort.cap(2);
                    QString address         = testRgPort.cap(3);
 b7f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 b83:	48 89 c7             	mov    %rax,%rdi
 b86:	e8 00 00 00 00       	callq  b8b <_ZN6module16prepareVariablesEv+0x689>
 b8b:	eb 03                	jmp    b90 <_ZN6module16prepareVariablesEv+0x68e>
 b8d:	48 89 c3             	mov    %rax,%rbx
                int countVarName    =  testVarName.captureCount();

                if(indexRgPort >= 0){
                    v.name                  = testRgPort.cap(1);

                    QString assignment      = testRgPort.cap(2);
 b90:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 b94:	48 89 c7             	mov    %rax,%rdi
 b97:	e8 00 00 00 00       	callq  b9c <_ZN6module16prepareVariablesEv+0x69a>
 b9c:	eb 14                	jmp    bb2 <_ZN6module16prepareVariablesEv+0x6b0>
 b9e:	48 89 c3             	mov    %rax,%rbx
                    }else{
                        // error. undefined assignment.
                    }
                }else{
                    v.assign    = 4;
                    v.name      = testVarName.cap(0);
 ba1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 ba5:	48 89 c7             	mov    %rax,%rdi
 ba8:	e8 00 00 00 00       	callq  bad <_ZN6module16prepareVariablesEv+0x6ab>
 bad:	eb 03                	jmp    bb2 <_ZN6module16prepareVariablesEv+0x6b0>
 baf:	48 89 c3             	mov    %rax,%rbx
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);

            QStringList listCommaSplitted = defs.split("\,");
            variable v;
 bb2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 bb6:	48 89 c7             	mov    %rax,%rdi
 bb9:	e8 00 00 00 00       	callq  bbe <_ZN6module16prepareVariablesEv+0x6bc>
 bbe:	eb 03                	jmp    bc3 <_ZN6module16prepareVariablesEv+0x6c1>
 bc0:	48 89 c3             	mov    %rax,%rbx
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);

            QStringList listCommaSplitted = defs.split("\,");
 bc3:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 bca:	48 89 c7             	mov    %rax,%rdi
 bcd:	e8 00 00 00 00       	callq  bd2 <_ZN6module16prepareVariablesEv+0x6d0>
 bd2:	eb 03                	jmp    bd7 <_ZN6module16prepareVariablesEv+0x6d5>
 bd4:	48 89 c3             	mov    %rax,%rbx

    for(it=this->code.begin(); it!=this->code.end(); ++it){
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);
 bd7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 bde:	48 89 c7             	mov    %rax,%rdi
 be1:	e8 00 00 00 00       	callq  be6 <_ZN6module16prepareVariablesEv+0x6e4>
 be6:	eb 03                	jmp    beb <_ZN6module16prepareVariablesEv+0x6e9>
 be8:	48 89 c3             	mov    %rax,%rbx
    QRegExp testVarName("\\w+");

    for(it=this->code.begin(); it!=this->code.end(); ++it){
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
 beb:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 bf2:	48 89 c7             	mov    %rax,%rdi
 bf5:	e8 00 00 00 00       	callq  bfa <_ZN6module16prepareVariablesEv+0x6f8>
 bfa:	eb 03                	jmp    bff <_ZN6module16prepareVariablesEv+0x6fd>
 bfc:	48 89 c3             	mov    %rax,%rbx
void module::prepareVariables(){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // иЗя : порт : номер
    QRegExp testVarName("\\w+");
 bff:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 c06:	48 89 c7             	mov    %rax,%rdi
 c09:	e8 00 00 00 00       	callq  c0e <_ZN6module16prepareVariablesEv+0x70c>
 c0e:	eb 03                	jmp    c13 <_ZN6module16prepareVariablesEv+0x711>
 c10:	48 89 c3             	mov    %rax,%rbx

void module::prepareVariables(){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // иЗя : порт : номер
 c13:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
 c1a:	48 89 c7             	mov    %rax,%rdi
 c1d:	e8 00 00 00 00       	callq  c22 <_ZN6module16prepareVariablesEv+0x720>
 c22:	eb 03                	jmp    c27 <_ZN6module16prepareVariablesEv+0x725>
 c24:	48 89 c3             	mov    %rax,%rbx
}

void module::prepareVariables(){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
 c27:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 c2e:	48 89 c7             	mov    %rax,%rdi
 c31:	e8 00 00 00 00       	callq  c36 <_ZN6module16prepareVariablesEv+0x734>
 c36:	eb 03                	jmp    c3b <_ZN6module16prepareVariablesEv+0x739>
 c38:	48 89 c3             	mov    %rax,%rbx
    return this->compiledHex;
}

void module::prepareVariables(){
    QStringList::iterator it;
    VarTypes VT;
 c3b:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
 c42:	48 89 c7             	mov    %rax,%rdi
 c45:	e8 00 00 00 00       	callq  c4a <_ZN6module16prepareVariablesEv+0x748>
 c4a:	48 89 d8             	mov    %rbx,%rax
 c4d:	48 89 c7             	mov    %rax,%rdi
 c50:	e8 00 00 00 00       	callq  c55 <_ZN6module16prepareVariablesEv+0x753>
                v.index = this->indexBase.indexOf(v.name);
                this->variables.append(v);
            }
        }
    }
}
 c55:	e8 00 00 00 00       	callq  c5a <_ZN6module16prepareVariablesEv+0x758>
 c5a:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
 c61:	5b                   	pop    %rbx
 c62:	5d                   	pop    %rbp
 c63:	c3                   	retq   

0000000000000c64 <_ZN6module11takePrimaryEv>:


// will not used;
void module::takePrimary(){
 c64:	55                   	push   %rbp
 c65:	48 89 e5             	mov    %rsp,%rbp
 c68:	53                   	push   %rbx
 c69:	48 83 ec 38          	sub    $0x38,%rsp
 c6d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 c71:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 c78:	00 00 
 c7a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 c7e:	31 c0                	xor    %eax,%eax
    QRegExp QRPrimary("module[\\s\\t]*\\([\\s\\t]*([\\w]*)[\\s\\t]*\\,[\\s\\t]*([\\w]*)[\\s\\t]*\\)");
 c80:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 c84:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # c8b <_ZN6module11takePrimaryEv+0x27>
 c8b:	48 89 c7             	mov    %rax,%rdi
 c8e:	e8 00 00 00 00       	callq  c93 <_ZN6module11takePrimaryEv+0x2f>
 c93:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
 c97:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 c9b:	b9 00 00 00 00       	mov    $0x0,%ecx
 ca0:	ba 01 00 00 00       	mov    $0x1,%edx
 ca5:	48 89 c7             	mov    %rax,%rdi
 ca8:	e8 00 00 00 00       	callq  cad <_ZN6module11takePrimaryEv+0x49>
 cad:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 cb1:	48 89 c7             	mov    %rax,%rdi
 cb4:	e8 00 00 00 00       	callq  cb9 <_ZN6module11takePrimaryEv+0x55>
    QRPrimary.indexIn(this->code[0]);
 cb9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 cbd:	be 00 00 00 00       	mov    $0x0,%esi
 cc2:	48 89 c7             	mov    %rax,%rdi
 cc5:	e8 00 00 00 00       	callq  cca <_ZN6module11takePrimaryEv+0x66>
 cca:	48 89 c6             	mov    %rax,%rsi
 ccd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 cd1:	b9 00 00 00 00       	mov    $0x0,%ecx
 cd6:	ba 00 00 00 00       	mov    $0x0,%edx
 cdb:	48 89 c7             	mov    %rax,%rdi
 cde:	e8 00 00 00 00       	callq  ce3 <_ZN6module11takePrimaryEv+0x7f>
    QString primary = QRPrimary.cap(1);
 ce3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 ce7:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 ceb:	ba 01 00 00 00       	mov    $0x1,%edx
 cf0:	48 89 ce             	mov    %rcx,%rsi
 cf3:	48 89 c7             	mov    %rax,%rdi
 cf6:	e8 00 00 00 00       	callq  cfb <_ZN6module11takePrimaryEv+0x97>
 cfb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 cff:	48 89 c7             	mov    %rax,%rdi
 d02:	e8 00 00 00 00       	callq  d07 <_ZN6module11takePrimaryEv+0xa3>
}


// will not used;
void module::takePrimary(){
    QRegExp QRPrimary("module[\\s\\t]*\\([\\s\\t]*([\\w]*)[\\s\\t]*\\,[\\s\\t]*([\\w]*)[\\s\\t]*\\)");
 d07:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 d0b:	48 89 c7             	mov    %rax,%rdi
 d0e:	e8 00 00 00 00       	callq  d13 <_ZN6module11takePrimaryEv+0xaf>
    QRPrimary.indexIn(this->code[0]);
    QString primary = QRPrimary.cap(1);
}
 d13:	90                   	nop
 d14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 d18:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 d1f:	00 00 
 d21:	74 55                	je     d78 <_ZN6module11takePrimaryEv+0x114>
 d23:	eb 4e                	jmp    d73 <_ZN6module11takePrimaryEv+0x10f>
 d25:	48 89 c3             	mov    %rax,%rbx
 d28:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 d2c:	48 89 c7             	mov    %rax,%rdi
 d2f:	e8 00 00 00 00       	callq  d34 <_ZN6module11takePrimaryEv+0xd0>
 d34:	48 89 d8             	mov    %rbx,%rax
 d37:	48 89 c7             	mov    %rax,%rdi
 d3a:	e8 00 00 00 00       	callq  d3f <_ZN6module11takePrimaryEv+0xdb>
 d3f:	48 89 c3             	mov    %rax,%rbx
 d42:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 d46:	48 89 c7             	mov    %rax,%rdi
 d49:	e8 00 00 00 00       	callq  d4e <_ZN6module11takePrimaryEv+0xea>
 d4e:	48 89 d8             	mov    %rbx,%rax
 d51:	48 89 c7             	mov    %rax,%rdi
 d54:	e8 00 00 00 00       	callq  d59 <_ZN6module11takePrimaryEv+0xf5>
 d59:	48 89 c3             	mov    %rax,%rbx
}


// will not used;
void module::takePrimary(){
    QRegExp QRPrimary("module[\\s\\t]*\\([\\s\\t]*([\\w]*)[\\s\\t]*\\,[\\s\\t]*([\\w]*)[\\s\\t]*\\)");
 d5c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 d60:	48 89 c7             	mov    %rax,%rdi
 d63:	e8 00 00 00 00       	callq  d68 <_ZN6module11takePrimaryEv+0x104>
 d68:	48 89 d8             	mov    %rbx,%rax
 d6b:	48 89 c7             	mov    %rax,%rdi
 d6e:	e8 00 00 00 00       	callq  d73 <_ZN6module11takePrimaryEv+0x10f>
    QRPrimary.indexIn(this->code[0]);
    QString primary = QRPrimary.cap(1);
}
 d73:	e8 00 00 00 00       	callq  d78 <_ZN6module11takePrimaryEv+0x114>
 d78:	48 83 c4 38          	add    $0x38,%rsp
 d7c:	5b                   	pop    %rbx
 d7d:	5d                   	pop    %rbp
 d7e:	c3                   	retq   
 d7f:	90                   	nop

0000000000000d80 <_ZN6module7compileEv>:

void module::compile(){
 d80:	55                   	push   %rbp
 d81:	48 89 e5             	mov    %rsp,%rbp
 d84:	53                   	push   %rbx
 d85:	48 83 ec 68          	sub    $0x68,%rsp
 d89:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
 d8d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 d94:	00 00 
 d96:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 d9a:	31 c0                	xor    %eax,%eax
    //this->compiled.clear();
    QDataStream R(this->compiled);
 d9c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 da0:	48 8d 50 08          	lea    0x8(%rax),%rdx
 da4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 da8:	48 89 d6             	mov    %rdx,%rsi
 dab:	48 89 c7             	mov    %rax,%rdi
 dae:	e8 00 00 00 00       	callq  db3 <_ZN6module7compileEv+0x33>
    prepareVariables();
 db3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 db7:	48 89 c7             	mov    %rax,%rdi
 dba:	e8 00 00 00 00       	callq  dbf <_ZN6module7compileEv+0x3f>
    QByteArray RRR = this->A6();
 dbf:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 dc3:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 dc7:	48 89 d6             	mov    %rdx,%rsi
 dca:	48 89 c7             	mov    %rax,%rdi
 dcd:	e8 00 00 00 00       	callq  dd2 <_ZN6module7compileEv+0x52>

    this->compiled.append(RRR);
 dd2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 dd6:	48 8d 50 08          	lea    0x8(%rax),%rdx
 dda:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 dde:	48 89 c6             	mov    %rax,%rsi
 de1:	48 89 d7             	mov    %rdx,%rdi
 de4:	e8 00 00 00 00       	callq  de9 <_ZN6module7compileEv+0x69>

    //this->compiledHex.append(this->code.at(0));
    this->compiledHex.append(this->toHex());
 de9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 ded:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 df1:	48 89 d6             	mov    %rdx,%rsi
 df4:	48 89 c7             	mov    %rax,%rdi
 df7:	e8 00 00 00 00       	callq  dfc <_ZN6module7compileEv+0x7c>
 dfc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 e00:	48 8d 50 20          	lea    0x20(%rax),%rdx
 e04:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 e08:	48 89 c6             	mov    %rax,%rsi
 e0b:	48 89 d7             	mov    %rdx,%rdi
 e0e:	e8 00 00 00 00       	callq  e13 <_ZN6module7compileEv+0x93>
 e13:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 e17:	48 89 c7             	mov    %rax,%rdi
 e1a:	e8 00 00 00 00       	callq  e1f <_ZN6module7compileEv+0x9f>

void module::compile(){
    //this->compiled.clear();
    QDataStream R(this->compiled);
    prepareVariables();
    QByteArray RRR = this->A6();
 e1f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 e23:	48 89 c7             	mov    %rax,%rdi
 e26:	e8 00 00 00 00       	callq  e2b <_ZN6module7compileEv+0xab>
    QString primary = QRPrimary.cap(1);
}

void module::compile(){
    //this->compiled.clear();
    QDataStream R(this->compiled);
 e2b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 e2f:	48 89 c7             	mov    %rax,%rdi
 e32:	e8 00 00 00 00       	callq  e37 <_ZN6module7compileEv+0xb7>
    this->compiled.append(RRR);

    //this->compiledHex.append(this->code.at(0));
    this->compiledHex.append(this->toHex());
    //R << this->A6();
}
 e37:	90                   	nop
 e38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 e3c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 e43:	00 00 
 e45:	74 43                	je     e8a <_ZN6module7compileEv+0x10a>
 e47:	eb 3c                	jmp    e85 <_ZN6module7compileEv+0x105>
 e49:	48 89 c3             	mov    %rax,%rbx
    QByteArray RRR = this->A6();

    this->compiled.append(RRR);

    //this->compiledHex.append(this->code.at(0));
    this->compiledHex.append(this->toHex());
 e4c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 e50:	48 89 c7             	mov    %rax,%rdi
 e53:	e8 00 00 00 00       	callq  e58 <_ZN6module7compileEv+0xd8>
 e58:	eb 03                	jmp    e5d <_ZN6module7compileEv+0xdd>
 e5a:	48 89 c3             	mov    %rax,%rbx

void module::compile(){
    //this->compiled.clear();
    QDataStream R(this->compiled);
    prepareVariables();
    QByteArray RRR = this->A6();
 e5d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 e61:	48 89 c7             	mov    %rax,%rdi
 e64:	e8 00 00 00 00       	callq  e69 <_ZN6module7compileEv+0xe9>
 e69:	eb 03                	jmp    e6e <_ZN6module7compileEv+0xee>
 e6b:	48 89 c3             	mov    %rax,%rbx
    QString primary = QRPrimary.cap(1);
}

void module::compile(){
    //this->compiled.clear();
    QDataStream R(this->compiled);
 e6e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 e72:	48 89 c7             	mov    %rax,%rdi
 e75:	e8 00 00 00 00       	callq  e7a <_ZN6module7compileEv+0xfa>
 e7a:	48 89 d8             	mov    %rbx,%rax
 e7d:	48 89 c7             	mov    %rax,%rdi
 e80:	e8 00 00 00 00       	callq  e85 <_ZN6module7compileEv+0x105>
    this->compiled.append(RRR);

    //this->compiledHex.append(this->code.at(0));
    this->compiledHex.append(this->toHex());
    //R << this->A6();
}
 e85:	e8 00 00 00 00       	callq  e8a <_ZN6module7compileEv+0x10a>
 e8a:	48 83 c4 68          	add    $0x68,%rsp
 e8e:	5b                   	pop    %rbx
 e8f:	5d                   	pop    %rbp
 e90:	c3                   	retq   

Дизассемблирование раздела .text._ZnwmPv:

0000000000000000 <_ZnwmPv>:
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  10:	5d                   	pop    %rbp
  11:	c3                   	retq   

Дизассемблирование раздела .text._ZdlPvS_:

0000000000000000 <_ZdlPvS_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	retq   

Дизассемблирование раздела .text._Z7qt_noopv:

0000000000000000 <_Z7qt_noopv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	90                   	nop
   5:	5d                   	pop    %rbp
   6:	c3                   	retq   

Дизассемблирование раздела .text._ZN9QtPrivate8RefCount3refEv:

0000000000000000 <_ZN9QtPrivate8RefCount3refEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN9QtPrivate8RefCount3refEv+0x18>
  18:	89 45 fc             	mov    %eax,-0x4(%rbp)
  1b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  1f:	75 07                	jne    28 <_ZN9QtPrivate8RefCount3refEv+0x28>
  21:	b8 00 00 00 00       	mov    $0x0,%eax
  26:	eb 17                	jmp    3f <_ZN9QtPrivate8RefCount3refEv+0x3f>
  28:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  2c:	74 0c                	je     3a <_ZN9QtPrivate8RefCount3refEv+0x3a>
  2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN9QtPrivate8RefCount3refEv+0x3a>
  3a:	b8 01 00 00 00       	mov    $0x1,%eax
  3f:	c9                   	leaveq 
  40:	c3                   	retq   

Дизассемблирование раздела .text._ZN9QtPrivate8RefCount5derefEv:

0000000000000000 <_ZN9QtPrivate8RefCount5derefEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN9QtPrivate8RefCount5derefEv+0x18>
  18:	89 45 fc             	mov    %eax,-0x4(%rbp)
  1b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  1f:	75 07                	jne    28 <_ZN9QtPrivate8RefCount5derefEv+0x28>
  21:	b8 00 00 00 00       	mov    $0x0,%eax
  26:	eb 19                	jmp    41 <_ZN9QtPrivate8RefCount5derefEv+0x41>
  28:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  2c:	75 07                	jne    35 <_ZN9QtPrivate8RefCount5derefEv+0x35>
  2e:	b8 01 00 00 00       	mov    $0x1,%eax
  33:	eb 0c                	jmp    41 <_ZN9QtPrivate8RefCount5derefEv+0x41>
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	callq  41 <_ZN9QtPrivate8RefCount5derefEv+0x41>
  41:	c9                   	leaveq 
  42:	c3                   	retq   

Дизассемблирование раздела .text._ZNK9QtPrivate8RefCount8isSharedEv:

0000000000000000 <_ZNK9QtPrivate8RefCount8isSharedEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZNK9QtPrivate8RefCount8isSharedEv+0x18>
  18:	89 45 fc             	mov    %eax,-0x4(%rbp)
  1b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  1f:	74 0d                	je     2e <_ZNK9QtPrivate8RefCount8isSharedEv+0x2e>
  21:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  25:	74 07                	je     2e <_ZNK9QtPrivate8RefCount8isSharedEv+0x2e>
  27:	b8 01 00 00 00       	mov    $0x1,%eax
  2c:	eb 05                	jmp    33 <_ZNK9QtPrivate8RefCount8isSharedEv+0x33>
  2e:	b8 00 00 00 00       	mov    $0x0,%eax
  33:	c9                   	leaveq 
  34:	c3                   	retq   

Дизассемблирование раздела .text._ZN10QArrayData4dataEv:

0000000000000000 <_ZN10QArrayData4dataEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 04             	mov    0x4(%rax),%eax
  13:	85 c0                	test   %eax,%eax
  15:	74 33                	je     4a <_ZN10QArrayData4dataEv+0x4a>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 8b 40 10          	mov    0x10(%rax),%rax
  1f:	48 85 c0             	test   %rax,%rax
  22:	78 26                	js     4a <_ZN10QArrayData4dataEv+0x4a>
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 8b 40 10          	mov    0x10(%rax),%rax
  2c:	48 83 f8 18          	cmp    $0x18,%rax
  30:	73 18                	jae    4a <_ZN10QArrayData4dataEv+0x4a>
  32:	ba 36 00 00 00       	mov    $0x36,%edx
  37:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 3e <_ZN10QArrayData4dataEv+0x3e>
  3e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 45 <_ZN10QArrayData4dataEv+0x45>
  45:	e8 00 00 00 00       	callq  4a <_ZN10QArrayData4dataEv+0x4a>
  4a:	e8 00 00 00 00       	callq  4f <_ZN10QArrayData4dataEv+0x4f>
  4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  53:	48 8b 40 10          	mov    0x10(%rax),%rax
  57:	48 89 c2             	mov    %rax,%rdx
  5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5e:	48 01 d0             	add    %rdx,%rax
  61:	c9                   	leaveq 
  62:	c3                   	retq   

Дизассемблирование раздела .text._ZN10QArrayData10sharedNullEv:

0000000000000000 <_ZN10QArrayData10sharedNullEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <_ZN10QArrayData10sharedNullEv+0xb>
   b:	5d                   	pop    %rbp
   c:	c3                   	retq   

Дизассемблирование раздела .text._ZN10QByteArrayC2Ev:

0000000000000000 <_ZN10QByteArrayC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	e8 00 00 00 00       	callq  11 <_ZN10QByteArrayC1Ev+0x11>
  11:	48 89 c2             	mov    %rax,%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 10             	mov    %rdx,(%rax)
  1b:	90                   	nop
  1c:	c9                   	leaveq 
  1d:	c3                   	retq   

Дизассемблирование раздела .text._ZN10QByteArrayD2Ev:

0000000000000000 <_ZN10QByteArrayD1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZN10QByteArrayD1Ev+0x1b>
  1b:	83 f0 01             	xor    $0x1,%eax
  1e:	84 c0                	test   %al,%al
  20:	74 0f                	je     31 <_ZN10QByteArrayD1Ev+0x31>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	48 8b 00             	mov    (%rax),%rax
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	callq  31 <_ZN10QByteArrayD1Ev+0x31>
  31:	90                   	nop
  32:	c9                   	leaveq 
  33:	c3                   	retq   

Дизассемблирование раздела .text._ZNK10QByteArray4sizeEv:

0000000000000000 <_ZNK10QByteArray4sizeEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	8b 40 04             	mov    0x4(%rax),%eax
  12:	5d                   	pop    %rbp
  13:	c3                   	retq   

Дизассемблирование раздела .text._ZNK10QByteArray2atEi:

0000000000000000 <_ZNK10QByteArray2atEi>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZNK10QByteArray2atEi+0x1b>
  1b:	89 c2                	mov    %eax,%edx
  1d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  20:	39 c2                	cmp    %eax,%edx
  22:	77 18                	ja     3c <_ZNK10QByteArray2atEi+0x3c>
  24:	ba d0 01 00 00       	mov    $0x1d0,%edx
  29:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 30 <_ZNK10QByteArray2atEi+0x30>
  30:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 37 <_ZNK10QByteArray2atEi+0x37>
  37:	e8 00 00 00 00       	callq  3c <_ZNK10QByteArray2atEi+0x3c>
  3c:	e8 00 00 00 00       	callq  41 <_ZNK10QByteArray2atEi+0x41>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 8b 00             	mov    (%rax),%rax
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	callq  50 <_ZNK10QByteArray2atEi+0x50>
  50:	48 89 c2             	mov    %rax,%rdx
  53:	8b 45 f4             	mov    -0xc(%rbp),%eax
  56:	48 98                	cltq   
  58:	48 01 d0             	add    %rdx,%rax
  5b:	0f b6 00             	movzbl (%rax),%eax
  5e:	c9                   	leaveq 
  5f:	c3                   	retq   

Дизассемблирование раздела .text._ZNK10QByteArraycvPKcEv:

0000000000000000 <_ZNK10QByteArraycvPKcEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZNK10QByteArraycvPKcEv+0x1b>
  1b:	c9                   	leaveq 
  1c:	c3                   	retq   

Дизассемблирование раздела .text._ZNK7QString4sizeEv:

0000000000000000 <_ZNK7QString4sizeEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	8b 40 04             	mov    0x4(%rax),%eax
  12:	5d                   	pop    %rbp
  13:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QStringpLERKS_:

0000000000000000 <_ZN7QStringpLERKS_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 d6             	mov    %rdx,%rsi
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_ZN7QStringpLERKS_+0x23>
  23:	c9                   	leaveq 
  24:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QString8fromUtf8EPKci:

0000000000000000 <_ZN7QString8fromUtf8EPKci>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  10:	89 55 dc             	mov    %edx,-0x24(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  27:	74 14                	je     3d <_ZN7QString8fromUtf8EPKci+0x3d>
  29:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
  2d:	75 0e                	jne    3d <_ZN7QString8fromUtf8EPKci+0x3d>
  2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	callq  3b <_ZN7QString8fromUtf8EPKci+0x3b>
  3b:	eb 03                	jmp    40 <_ZN7QString8fromUtf8EPKci+0x40>
  3d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  44:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  48:	89 c2                	mov    %eax,%edx
  4a:	48 89 cf             	mov    %rcx,%rdi
  4d:	e8 00 00 00 00       	callq  52 <_ZN7QString8fromUtf8EPKci+0x52>
  52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  56:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  5a:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  61:	00 00 
  63:	74 05                	je     6a <_ZN7QString8fromUtf8EPKci+0x6a>
  65:	e8 00 00 00 00       	callq  6a <_ZN7QString8fromUtf8EPKci+0x6a>
  6a:	c9                   	leaveq 
  6b:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QStringC2EPKc:

0000000000000000 <_ZN7QStringC1EPKc>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  15:	74 10                	je     27 <_ZN7QStringC1EPKc+0x27>
  17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_ZN7QStringC1EPKc+0x23>
  23:	89 c2                	mov    %eax,%edx
  25:	eb 05                	jmp    2c <_ZN7QStringC1EPKc+0x2c>
  27:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  30:	89 d6                	mov    %edx,%esi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN7QStringC1EPKc+0x3a>
  3a:	48 89 c2             	mov    %rax,%rdx
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 10             	mov    %rdx,(%rax)
  44:	90                   	nop
  45:	c9                   	leaveq 
  46:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QString6appendEPKc:

0000000000000000 <_ZN7QString6appendEPKc>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  1e:	31 c0                	xor    %eax,%eax
  20:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  24:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  28:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  2d:	48 89 ce             	mov    %rcx,%rsi
  30:	48 89 c7             	mov    %rax,%rdi
  33:	e8 00 00 00 00       	callq  38 <_ZN7QString6appendEPKc+0x38>
  38:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40:	48 89 d6             	mov    %rdx,%rsi
  43:	48 89 c7             	mov    %rax,%rdi
  46:	e8 00 00 00 00       	callq  4b <_ZN7QString6appendEPKc+0x4b>
  4b:	48 89 c3             	mov    %rax,%rbx
  4e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	callq  5a <_ZN7QString6appendEPKc+0x5a>
  5a:	48 89 d8             	mov    %rbx,%rax
  5d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  61:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  68:	00 00 
  6a:	74 21                	je     8d <_ZN7QString6appendEPKc+0x8d>
  6c:	eb 1a                	jmp    88 <_ZN7QString6appendEPKc+0x88>
  6e:	48 89 c3             	mov    %rax,%rbx
{
    this->code                  = *code;
  71:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  75:	48 89 c7             	mov    %rax,%rdi
  78:	e8 00 00 00 00       	callq  7d <_ZN7QString6appendEPKc+0x7d>
  7d:	48 89 d8             	mov    %rbx,%rax
  80:	48 89 c7             	mov    %rax,%rdi
  83:	e8 00 00 00 00       	callq  88 <_ZN7QString6appendEPKc+0x88>
    this->indexBase             = *indexBase;
  88:	e8 00 00 00 00       	callq  8d <_ZN7QString6appendEPKc+0x8d>
  8d:	48 83 c4 28          	add    $0x28,%rsp
  91:	5b                   	pop    %rbx
  92:	5d                   	pop    %rbp
  93:	c3                   	retq   

Дизассемблирование раздела .text._ZNK7QString6isNullEv:

0000000000000000 <_ZNK7QString6isNullEv>:
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 18          	sub    $0x18,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  11:	48 8b 18             	mov    (%rax),%rbx
  14:	e8 00 00 00 00       	callq  19 <_ZNK7QString6isNullEv+0x19>
  19:	48 39 c3             	cmp    %rax,%rbx
  1c:	0f 94 c0             	sete   %al
  1f:	48 83 c4 18          	add    $0x18,%rsp
  23:	5b                   	pop    %rbx
  24:	5d                   	pop    %rbp
  25:	c3                   	retq   

Дизассемблирование раздела .text._ZNK7QString9constDataEv:

0000000000000000 <_ZNK7QString9constDataEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZNK7QString9constDataEv+0x1b>
  1b:	c9                   	leaveq 
  1c:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QString5clearEv:

0000000000000000 <_ZN7QString5clearEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  1a:	31 c0                	xor    %eax,%eax
  1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	callq  28 <_ZN7QString5clearEv+0x28>
  28:	83 f0 01             	xor    $0x1,%eax
  2b:	84 c0                	test   %al,%al
  2d:	74 47                	je     76 <_ZN7QString5clearEv+0x76>
  2f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	callq  3b <_ZN7QString5clearEv+0x3b>
  3b:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43:	48 89 d6             	mov    %rdx,%rsi
  46:	48 89 c7             	mov    %rax,%rdi
  49:	e8 00 00 00 00       	callq  4e <_ZN7QString5clearEv+0x4e>
  4e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	callq  5a <_ZN7QString5clearEv+0x5a>
  5a:	eb 1a                	jmp    76 <_ZN7QString5clearEv+0x76>
  5c:	48 89 c3             	mov    %rax,%rbx
  5f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  63:	48 89 c7             	mov    %rax,%rdi
  66:	e8 00 00 00 00       	callq  6b <_ZN7QString5clearEv+0x6b>
  6b:	48 89 d8             	mov    %rbx,%rax
  6e:	48 89 c7             	mov    %rax,%rdi
{
    this->code                  = *code;
  71:	e8 00 00 00 00       	callq  76 <_ZN7QString5clearEv+0x76>
  76:	90                   	nop
  77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  82:	00 00 
    this->indexBase             = *indexBase;
  84:	74 05                	je     8b <_ZN7QString5clearEv+0x8b>
  86:	e8 00 00 00 00       	callq  8b <_ZN7QString5clearEv+0x8b>
  8b:	48 83 c4 28          	add    $0x28,%rsp
  8f:	5b                   	pop    %rbx
  90:	5d                   	pop    %rbp
  91:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QStringC2ERKS_:

0000000000000000 <_ZN7QStringC1ERKS_>:
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 8b 10             	mov    (%rax),%rdx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  22:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  26:	75 18                	jne    40 <_ZN7QStringC1ERKS_+0x40>
  28:	ba 6e 03 00 00       	mov    $0x36e,%edx
  2d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 34 <_ZN7QStringC1ERKS_+0x34>
  34:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 3b <_ZN7QStringC1ERKS_+0x3b>
  3b:	e8 00 00 00 00       	callq  40 <_ZN7QStringC1ERKS_+0x40>
  40:	e8 00 00 00 00       	callq  45 <_ZN7QStringC1ERKS_+0x45>
  45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  49:	48 8b 00             	mov    (%rax),%rax
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	callq  54 <_ZN7QStringC1ERKS_+0x54>
  54:	90                   	nop
  55:	c9                   	leaveq 
  56:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QStringC2Ev:

0000000000000000 <_ZN7QStringC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	e8 00 00 00 00       	callq  11 <_ZN7QStringC1Ev+0x11>
  11:	48 89 c2             	mov    %rax,%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 10             	mov    %rdx,(%rax)
  1b:	90                   	nop
  1c:	c9                   	leaveq 
  1d:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QStringD2Ev:

0000000000000000 <_ZN7QStringD1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZN7QStringD1Ev+0x1b>
  1b:	83 f0 01             	xor    $0x1,%eax
  1e:	84 c0                	test   %al,%al
  20:	74 0f                	je     31 <_ZN7QStringD1Ev+0x31>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	48 8b 00             	mov    (%rax),%rax
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	callq  31 <_ZN7QStringD1Ev+0x31>
  31:	90                   	nop
  32:	c9                   	leaveq 
  33:	c3                   	retq   

Дизассемблирование раздела .text._ZNK7QStringeqEPKc:

0000000000000000 <_ZNK7QStringeqEPKc>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 18          	sub    $0x18,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  15:	48 89 c7             	mov    %rax,%rdi
  18:	e8 00 00 00 00       	callq  1d <_ZNK7QStringeqEPKc+0x1d>
  1d:	89 c3                	mov    %eax,%ebx
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	callq  2b <_ZNK7QStringeqEPKc+0x2b>
  2b:	48 89 c7             	mov    %rax,%rdi
  2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  32:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  38:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  3d:	48 89 c2             	mov    %rax,%rdx
  40:	89 de                	mov    %ebx,%esi
  42:	e8 00 00 00 00       	callq  47 <_ZNK7QStringeqEPKc+0x47>
  47:	85 c0                	test   %eax,%eax
  49:	0f 94 c0             	sete   %al
  4c:	48 83 c4 18          	add    $0x18,%rsp
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	c3                   	retq   

Дизассемблирование раздела .text._ZplRK7QStringPKc:

0000000000000000 <_ZplRK7QStringPKc>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 38          	sub    $0x38,%rsp
   9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  11:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  22:	31 c0                	xor    %eax,%eax
  24:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2c:	48 89 d6             	mov    %rdx,%rsi
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	e8 00 00 00 00       	callq  37 <_ZplRK7QStringPKc+0x37>
  37:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  3b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  3f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  44:	48 89 ce             	mov    %rcx,%rsi
  47:	48 89 c7             	mov    %rax,%rdi
  4a:	e8 00 00 00 00       	callq  4f <_ZplRK7QStringPKc+0x4f>
  4f:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  57:	48 89 d6             	mov    %rdx,%rsi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	callq  62 <_ZplRK7QStringPKc+0x62>
  62:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  66:	48 89 c7             	mov    %rax,%rdi
  69:	e8 00 00 00 00       	callq  6e <_ZplRK7QStringPKc+0x6e>
  6e:	eb 2b                	jmp    9b <_ZplRK7QStringPKc+0x9b>
  70:	48 89 c3             	mov    %rax,%rbx
{
    this->code                  = *code;
  73:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  77:	48 89 c7             	mov    %rax,%rdi
  7a:	e8 00 00 00 00       	callq  7f <_ZplRK7QStringPKc+0x7f>
  7f:	eb 03                	jmp    84 <_ZplRK7QStringPKc+0x84>
  81:	48 89 c3             	mov    %rax,%rbx
    this->indexBase             = *indexBase;
  84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	e8 00 00 00 00       	callq  90 <_ZplRK7QStringPKc+0x90>
  90:	48 89 d8             	mov    %rbx,%rax
  93:	48 89 c7             	mov    %rax,%rdi
  96:	e8 00 00 00 00       	callq  9b <_ZplRK7QStringPKc+0x9b>
}
  9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  aa:	00 00 
  ac:	74 05                	je     b3 <_ZplRK7QStringPKc+0xb3>
  ae:	e8 00 00 00 00       	callq  b3 <_ZplRK7QStringPKc+0xb3>
  b3:	48 83 c4 38          	add    $0x38,%rsp
  b7:	5b                   	pop    %rbx
  b8:	5d                   	pop    %rbp
  b9:	c3                   	retq   

Дизассемблирование раздела .text._ZN9QListData7disposeEv:

0000000000000000 <_ZN9QListData7disposeEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZN9QListData7disposeEv+0x1b>
  1b:	90                   	nop
  1c:	c9                   	leaveq 
  1d:	c3                   	retq   

Дизассемблирование раздела .text._ZNK9QListData4sizeEv:

0000000000000000 <_ZNK9QListData4sizeEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	8b 50 0c             	mov    0xc(%rax),%edx
  12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  16:	48 8b 00             	mov    (%rax),%rax
  19:	8b 40 08             	mov    0x8(%rax),%eax
  1c:	29 c2                	sub    %eax,%edx
  1e:	89 d0                	mov    %edx,%eax
  20:	5d                   	pop    %rbp
  21:	c3                   	retq   

Дизассемблирование раздела .text._ZNK9QListData2atEi:

0000000000000000 <_ZNK9QListData2atEi>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   f:	48 8b 00             	mov    (%rax),%rax
  12:	48 8d 48 10          	lea    0x10(%rax),%rcx
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	48 8b 00             	mov    (%rax),%rax
  1d:	8b 40 08             	mov    0x8(%rax),%eax
  20:	48 63 d0             	movslq %eax,%rdx
  23:	8b 45 f4             	mov    -0xc(%rbp),%eax
  26:	48 98                	cltq   
  28:	48 01 d0             	add    %rdx,%rax
  2b:	48 c1 e0 03          	shl    $0x3,%rax
  2f:	48 01 c8             	add    %rcx,%rax
  32:	5d                   	pop    %rbp
  33:	c3                   	retq   

Дизассемблирование раздела .text._ZNK9QListData5beginEv:

0000000000000000 <_ZNK9QListData5beginEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	48 8d 50 10          	lea    0x10(%rax),%rdx
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 00             	mov    (%rax),%rax
  1a:	8b 40 08             	mov    0x8(%rax),%eax
  1d:	48 98                	cltq   
  1f:	48 c1 e0 03          	shl    $0x3,%rax
  23:	48 01 d0             	add    %rdx,%rax
  26:	5d                   	pop    %rbp
  27:	c3                   	retq   

Дизассемблирование раздела .text._ZNK9QListData3endEv:

0000000000000000 <_ZNK9QListData3endEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	48 8d 50 10          	lea    0x10(%rax),%rdx
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 00             	mov    (%rax),%rax
  1a:	8b 40 0c             	mov    0xc(%rax),%eax
  1d:	48 98                	cltq   
  1f:	48 c1 e0 03          	shl    $0x3,%rax
  23:	48 01 d0             	add    %rdx,%rax
  26:	5d                   	pop    %rbp
  27:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QListSpecialMethodsI7QStringED2Ev:

0000000000000000 <_ZN19QListSpecialMethodsI7QStringED1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN11QStringListC2Ev:

0000000000000000 <_ZN11QStringListC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN11QStringListC1Ev+0x18>
  18:	90                   	nop
  19:	c9                   	leaveq 
  1a:	c3                   	retq   

Дизассемблирование раздела .text._ZN11QStringListD2Ev:

0000000000000000 <_ZN11QStringListD1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN11QStringListD1Ev+0x18>
  18:	90                   	nop
  19:	c9                   	leaveq 
  1a:	c3                   	retq   

Дизассемблирование раздела .text._ZN11QDataStreamlsEh:

0000000000000000 <_ZN11QDataStreamlsEh>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  15:	0f be d0             	movsbl %al,%edx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	89 d6                	mov    %edx,%esi
  1e:	48 89 c7             	mov    %rax,%rdi
  21:	e8 00 00 00 00       	callq  26 <_ZN11QDataStreamlsEh+0x26>
  26:	c9                   	leaveq 
  27:	c3                   	retq   

Дизассемблирование раздела .text._ZN11QDataStreamlsEt:

0000000000000000 <_ZN11QDataStreamlsEt>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  12:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  16:	0f bf d0             	movswl %ax,%edx
  19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1d:	89 d6                	mov    %edx,%esi
  1f:	48 89 c7             	mov    %rax,%rdi
  22:	e8 00 00 00 00       	callq  27 <_ZN11QDataStreamlsEt+0x27>
  27:	c9                   	leaveq 
  28:	c3                   	retq   

Дизассемблирование раздела .text._ZN11QStringListaSERKS_:

0000000000000000 <_ZN11QStringListaSERKS_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 d6             	mov    %rdx,%rsi
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_ZN11QStringListaSERKS_+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	c9                   	leaveq 
  28:	c3                   	retq   

Дизассемблирование раздела .text._ZN8VarTypesD2Ev:

0000000000000000 <_ZN8VarTypesD1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN8VarTypesD1Ev+0x18>
  18:	90                   	nop
  19:	c9                   	leaveq 
  1a:	c3                   	retq   

Дизассемблирование раздела .text._ZN8variableD2Ev:

0000000000000000 <_ZN8variableD1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 18          	add    $0x18,%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN8variableD1Ev+0x1c>
  1c:	90                   	nop
  1d:	c9                   	leaveq 
  1e:	c3                   	retq   

Дизассемблирование раздела .text._ZNK19QBasicAtomicIntegerIiE4loadEv:

0000000000000000 <_ZNK19QBasicAtomicIntegerIiE4loadEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 00                	mov    (%rax),%eax
  16:	90                   	nop
  17:	5d                   	pop    %rbp
  18:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QBasicAtomicIntegerIiE3refEv:

0000000000000000 <_ZN19QBasicAtomicIntegerIiE3refEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN19QBasicAtomicIntegerIiE3refEv+0x18>
  18:	c9                   	leaveq 
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QBasicAtomicIntegerIiE5derefEv:

0000000000000000 <_ZN19QBasicAtomicIntegerIiE5derefEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN19QBasicAtomicIntegerIiE5derefEv+0x18>
  18:	c9                   	leaveq 
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataIcE10sharedNullEv:

0000000000000000 <_ZN15QTypedArrayDataIcE10sharedNullEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	e8 00 00 00 00       	callq  9 <_ZN15QTypedArrayDataIcE10sharedNullEv+0x9>
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataIcE10deallocateEP10QArrayData:

0000000000000000 <_ZN15QTypedArrayDataIcE10deallocateEP10QArrayData>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	ba 08 00 00 00       	mov    $0x8,%edx
  15:	be 01 00 00 00       	mov    $0x1,%esi
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	e8 00 00 00 00       	callq  22 <_ZN15QTypedArrayDataIcE10deallocateEP10QArrayData+0x22>
  22:	90                   	nop
  23:	c9                   	leaveq 
  24:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataIcE4dataEv:

0000000000000000 <_ZN15QTypedArrayDataIcE4dataEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN15QTypedArrayDataIcE4dataEv+0x18>
  18:	c9                   	leaveq 
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataItE4dataEv:

0000000000000000 <_ZN15QTypedArrayDataItE4dataEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN15QTypedArrayDataItE4dataEv+0x18>
  18:	c9                   	leaveq 
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataItE10sharedNullEv:

0000000000000000 <_ZN15QTypedArrayDataItE10sharedNullEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	e8 00 00 00 00       	callq  9 <_ZN15QTypedArrayDataItE10sharedNullEv+0x9>
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataItE10deallocateEP10QArrayData:

0000000000000000 <_ZN15QTypedArrayDataItE10deallocateEP10QArrayData>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	ba 08 00 00 00       	mov    $0x8,%edx
  15:	be 02 00 00 00       	mov    $0x2,%esi
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	e8 00 00 00 00       	callq  22 <_ZN15QTypedArrayDataItE10deallocateEP10QArrayData+0x22>
  22:	90                   	nop
  23:	c9                   	leaveq 
  24:	c3                   	retq   

Дизассемблирование раздела .text._Z4qMaxIiERKT_S2_S2_:

0000000000000000 <_Z4qMaxIiERKT_S2_S2_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 10                	mov    (%rax),%edx
  12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  16:	8b 00                	mov    (%rax),%eax
  18:	39 c2                	cmp    %eax,%edx
  1a:	7d 06                	jge    22 <_Z4qMaxIiERKT_S2_S2_+0x22>
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	eb 04                	jmp    26 <_Z4qMaxIiERKT_S2_S2_+0x26>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	5d                   	pop    %rbp
  27:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QListSpecialMethodsI7QStringEC2Ev:

0000000000000000 <_ZN19QListSpecialMethodsI7QStringEC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringEC2Ev:

0000000000000000 <_ZN5QListI7QStringEC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN5QListI7QStringEC1Ev+0x18>
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 23 <_ZN5QListI7QStringEC1Ev+0x23>
  23:	48 89 10             	mov    %rdx,(%rax)
  26:	90                   	nop
  27:	c9                   	leaveq 
  28:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringED2Ev:

0000000000000000 <_ZN5QListI7QStringED1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 18          	sub    $0x18,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  11:	48 8b 00             	mov    (%rax),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI7QStringED1Ev+0x1c>
  1c:	83 f0 01             	xor    $0x1,%eax
  1f:	84 c0                	test   %al,%al
  21:	74 16                	je     39 <_ZN5QListI7QStringED1Ev+0x39>
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 8b 10             	mov    (%rax),%rdx
  2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2e:	48 89 d6             	mov    %rdx,%rsi
  31:	48 89 c7             	mov    %rax,%rdi
  34:	e8 00 00 00 00       	callq  39 <_ZN5QListI7QStringED1Ev+0x39>
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	callq  45 <_ZN5QListI7QStringED1Ev+0x45>
  45:	eb 1a                	jmp    61 <_ZN5QListI7QStringED1Ev+0x61>
  47:	48 89 c3             	mov    %rax,%rbx
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	e8 00 00 00 00       	callq  56 <_ZN5QListI7QStringED1Ev+0x56>
  56:	48 89 d8             	mov    %rbx,%rax
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	callq  61 <_ZN5QListI7QStringED1Ev+0x61>
  61:	48 83 c4 18          	add    $0x18,%rsp
  65:	5b                   	pop    %rbx
  66:	5d                   	pop    %rbp
  67:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringEC2ERKS1_:

0000000000000000 <_ZN5QListI7QStringEC1ERKS1_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 54                	push   %r12
   6:	53                   	push   %rbx
   7:	48 83 ec 10          	sub    $0x10,%rsp
   b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  17:	48 8b 10             	mov    (%rax),%rdx
  1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1e:	48 89 10             	mov    %rdx,(%rax)
  21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  25:	48 8b 00             	mov    (%rax),%rax
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	callq  30 <_ZN5QListI7QStringEC1ERKS1_+0x30>
  30:	83 f0 01             	xor    $0x1,%eax
  33:	84 c0                	test   %al,%al
  35:	0f 84 99 00 00 00    	je     d4 <_ZN5QListI7QStringEC1ERKS1_+0xd4>
  3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3f:	48 8b 00             	mov    (%rax),%rax
  42:	8b 50 04             	mov    0x4(%rax),%edx
  45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  49:	89 d6                	mov    %edx,%esi
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	callq  53 <_ZN5QListI7QStringEC1ERKS1_+0x53>
  53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  57:	48 89 c7             	mov    %rax,%rdi
  5a:	e8 00 00 00 00       	callq  5f <_ZN5QListI7QStringEC1ERKS1_+0x5f>
  5f:	49 89 c4             	mov    %rax,%r12
  62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  66:	48 89 c7             	mov    %rax,%rdi
  69:	e8 00 00 00 00       	callq  6e <_ZN5QListI7QStringEC1ERKS1_+0x6e>
  6e:	48 89 c3             	mov    %rax,%rbx
{
    this->code                  = *code;
  71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  75:	48 89 c7             	mov    %rax,%rdi
  78:	e8 00 00 00 00       	callq  7d <_ZN5QListI7QStringEC1ERKS1_+0x7d>
  7d:	48 89 c6             	mov    %rax,%rsi
  80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    this->indexBase             = *indexBase;
  84:	4c 89 e1             	mov    %r12,%rcx
  87:	48 89 da             	mov    %rbx,%rdx
  8a:	48 89 c7             	mov    %rax,%rdi
  8d:	e8 00 00 00 00       	callq  92 <_ZN5QListI7QStringEC1ERKS1_+0x92>
  92:	eb 40                	jmp    d4 <_ZN5QListI7QStringEC1ERKS1_+0xd4>
  94:	48 89 c7             	mov    %rax,%rdi
  97:	e8 00 00 00 00       	callq  9c <_ZN5QListI7QStringEC1ERKS1_+0x9c>
}
  9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a0:	48 8b 00             	mov    (%rax),%rax
  a3:	48 89 c7             	mov    %rax,%rdi
  a6:	e8 00 00 00 00       	callq  ab <_ZN5QListI7QStringEC1ERKS1_+0xab>
  ab:	e8 00 00 00 00       	callq  b0 <_ZN5QListI7QStringEC1ERKS1_+0xb0>
  b0:	48 89 c3             	mov    %rax,%rbx
  b3:	e8 00 00 00 00       	callq  b8 <_ZN5QListI7QStringEC1ERKS1_+0xb8>
  b8:	eb 03                	jmp    bd <_ZN5QListI7QStringEC1ERKS1_+0xbd>
  ba:	48 89 c3             	mov    %rax,%rbx
  bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c1:	48 89 c7             	mov    %rax,%rdi
  c4:	e8 00 00 00 00       	callq  c9 <_ZN5QListI7QStringEC1ERKS1_+0xc9>
  c9:	48 89 d8             	mov    %rbx,%rax
  cc:	48 89 c7             	mov    %rax,%rdi
  cf:	e8 00 00 00 00       	callq  d4 <_ZN5QListI7QStringEC1ERKS1_+0xd4>
  d4:	90                   	nop
  d5:	48 83 c4 10          	add    $0x10,%rsp
  d9:	5b                   	pop    %rbx
  da:	41 5c                	pop    %r12
  dc:	5d                   	pop    %rbp
  dd:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringEaSERKS1_:

0000000000000000 <_ZN5QListI7QStringEaSERKS1_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  1e:	31 c0                	xor    %eax,%eax
  20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  24:	48 8b 10             	mov    (%rax),%rdx
  27:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  2b:	48 8b 00             	mov    (%rax),%rax
  2e:	48 39 c2             	cmp    %rax,%rdx
  31:	74 32                	je     65 <_ZN5QListI7QStringEaSERKS1_+0x65>
  33:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  37:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  3b:	48 89 d6             	mov    %rdx,%rsi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	callq  46 <_ZN5QListI7QStringEaSERKS1_+0x46>
  46:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  4e:	48 89 d6             	mov    %rdx,%rsi
  51:	48 89 c7             	mov    %rax,%rdi
  54:	e8 00 00 00 00       	callq  59 <_ZN5QListI7QStringEaSERKS1_+0x59>
  59:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	e8 00 00 00 00       	callq  65 <_ZN5QListI7QStringEaSERKS1_+0x65>
  65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  69:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  6d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  74:	00 00 
{
    this->code                  = *code;
  76:	74 21                	je     99 <_ZN5QListI7QStringEaSERKS1_+0x99>
  78:	eb 1a                	jmp    94 <_ZN5QListI7QStringEaSERKS1_+0x94>
  7a:	48 89 c3             	mov    %rax,%rbx
  7d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  81:	48 89 c7             	mov    %rax,%rdi
    this->indexBase             = *indexBase;
  84:	e8 00 00 00 00       	callq  89 <_ZN5QListI7QStringEaSERKS1_+0x89>
  89:	48 89 d8             	mov    %rbx,%rax
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	callq  94 <_ZN5QListI7QStringEaSERKS1_+0x94>
  94:	e8 00 00 00 00       	callq  99 <_ZN5QListI7QStringEaSERKS1_+0x99>
  99:	48 83 c4 28          	add    $0x28,%rsp
}
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	c3                   	retq   

Дизассемблирование раздела .text._ZN6QFlagsIN9QIODevice12OpenModeFlagEEC2ES1_:

0000000000000000 <_ZN6QFlagsIN9QIODevice12OpenModeFlagEEC1ES1_>:
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	8b 55 f4             	mov    -0xc(%rbp),%edx
   e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  12:	89 10                	mov    %edx,(%rax)
  14:	90                   	nop
  15:	5d                   	pop    %rbp
  16:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QListSpecialMethodsI8variableEC2Ev:

0000000000000000 <_ZN19QListSpecialMethodsI8variableEC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableEC2Ev:

0000000000000000 <_ZN5QListI8variableEC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN5QListI8variableEC1Ev+0x18>
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 23 <_ZN5QListI8variableEC1Ev+0x23>
  23:	48 89 10             	mov    %rdx,(%rax)
  26:	90                   	nop
  27:	c9                   	leaveq 
  28:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableED2Ev:

0000000000000000 <_ZN5QListI8variableED1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 18          	sub    $0x18,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  11:	48 8b 00             	mov    (%rax),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI8variableED1Ev+0x1c>
  1c:	83 f0 01             	xor    $0x1,%eax
  1f:	84 c0                	test   %al,%al
  21:	74 16                	je     39 <_ZN5QListI8variableED1Ev+0x39>
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 8b 10             	mov    (%rax),%rdx
  2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2e:	48 89 d6             	mov    %rdx,%rsi
  31:	48 89 c7             	mov    %rax,%rdi
  34:	e8 00 00 00 00       	callq  39 <_ZN5QListI8variableED1Ev+0x39>
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	callq  45 <_ZN5QListI8variableED1Ev+0x45>
  45:	eb 1a                	jmp    61 <_ZN5QListI8variableED1Ev+0x61>
  47:	48 89 c3             	mov    %rax,%rbx
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	e8 00 00 00 00       	callq  56 <_ZN5QListI8variableED1Ev+0x56>
  56:	48 89 d8             	mov    %rbx,%rax
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	callq  61 <_ZN5QListI8variableED1Ev+0x61>
  61:	48 83 c4 18          	add    $0x18,%rsp
  65:	5b                   	pop    %rbx
  66:	5d                   	pop    %rbp
  67:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE8iteratorC2Ev:

0000000000000000 <_ZN5QListI8variableE8iteratorC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  13:	90                   	nop
  14:	5d                   	pop    %rbp
  15:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE5beginEv:

0000000000000000 <_ZN5QListI8variableE5beginEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI8variableE5beginEv+0x1c>
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	callq  28 <_ZN5QListI8variableE5beginEv+0x28>
  28:	48 89 c2             	mov    %rax,%rdx
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	48 89 d6             	mov    %rdx,%rsi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN5QListI8variableE5beginEv+0x3a>
  3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3e:	c9                   	leaveq 
  3f:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE3endEv:

0000000000000000 <_ZN5QListI8variableE3endEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI8variableE3endEv+0x1c>
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	callq  28 <_ZN5QListI8variableE3endEv+0x28>
  28:	48 89 c2             	mov    %rax,%rdx
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	48 89 d6             	mov    %rdx,%rsi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN5QListI8variableE3endEv+0x3a>
  3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3e:	c9                   	leaveq 
  3f:	c3                   	retq   

Дизассемблирование раздела .text._ZNK5QListI8variableE8iteratorneERKS2_:

0000000000000000 <_ZNK5QListI8variableE8iteratorneERKS2_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 10             	mov    (%rax),%rdx
  13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  17:	48 8b 00             	mov    (%rax),%rax
  1a:	48 39 c2             	cmp    %rax,%rdx
  1d:	0f 95 c0             	setne  %al
  20:	5d                   	pop    %rbp
  21:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE8iteratorppEv:

0000000000000000 <_ZN5QListI8variableE8iteratorppEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	48 8d 50 08          	lea    0x8(%rax),%rdx
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1e:	5d                   	pop    %rbp
  1f:	c3                   	retq   

Дизассемблирование раздела .text._ZNK5QListI8variableE8iteratorptEv:

0000000000000000 <_ZNK5QListI8variableE8iteratorptEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZNK5QListI8variableE8iteratorptEv+0x1b>
  1b:	c9                   	leaveq 
  1c:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE8iteratorC2Ev:

0000000000000000 <_ZN5QListI7QStringE8iteratorC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  13:	90                   	nop
  14:	5d                   	pop    %rbp
  15:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE5beginEv:

0000000000000000 <_ZN5QListI7QStringE5beginEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI7QStringE5beginEv+0x1c>
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	callq  28 <_ZN5QListI7QStringE5beginEv+0x28>
  28:	48 89 c2             	mov    %rax,%rdx
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	48 89 d6             	mov    %rdx,%rsi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN5QListI7QStringE5beginEv+0x3a>
  3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3e:	c9                   	leaveq 
  3f:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE3endEv:

0000000000000000 <_ZN5QListI7QStringE3endEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI7QStringE3endEv+0x1c>
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	callq  28 <_ZN5QListI7QStringE3endEv+0x28>
  28:	48 89 c2             	mov    %rax,%rdx
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	48 89 d6             	mov    %rdx,%rsi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN5QListI7QStringE3endEv+0x3a>
  3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3e:	c9                   	leaveq 
  3f:	c3                   	retq   

Дизассемблирование раздела .text._ZNK5QListI7QStringE8iteratorneERKS2_:

0000000000000000 <_ZNK5QListI7QStringE8iteratorneERKS2_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 10             	mov    (%rax),%rdx
  13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  17:	48 8b 00             	mov    (%rax),%rax
  1a:	48 39 c2             	cmp    %rax,%rdx
  1d:	0f 95 c0             	setne  %al
  20:	5d                   	pop    %rbp
  21:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE8iteratorppEv:

0000000000000000 <_ZN5QListI7QStringE8iteratorppEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	48 8d 50 08          	lea    0x8(%rax),%rdx
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1e:	5d                   	pop    %rbp
  1f:	c3                   	retq   

Дизассемблирование раздела .text._ZNK5QListI7QStringE8iteratordeEv:

0000000000000000 <_ZNK5QListI7QStringE8iteratordeEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZNK5QListI7QStringE8iteratordeEv+0x1b>
  1b:	c9                   	leaveq 
  1c:	c3                   	retq   

Дизассемблирование раздела .text._ZNK5QListI7QStringE7indexOfERKS0_i:

0000000000000000 <_ZNK5QListI7QStringE7indexOfERKS0_i>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 48          	sub    $0x48,%rsp
   9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  11:	89 55 bc             	mov    %edx,-0x44(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
  27:	79 35                	jns    5e <_ZNK5QListI7QStringE7indexOfERKS0_i+0x5e>
  29:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  30:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  34:	48 89 c7             	mov    %rax,%rdi
  37:	e8 00 00 00 00       	callq  3c <_ZNK5QListI7QStringE7indexOfERKS0_i+0x3c>
  3c:	89 c2                	mov    %eax,%edx
  3e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41:	01 d0                	add    %edx,%eax
  43:	89 45 d0             	mov    %eax,-0x30(%rbp)
  46:	48 8d 55 d4          	lea    -0x2c(%rbp),%rdx
  4a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  4e:	48 89 d6             	mov    %rdx,%rsi
  51:	48 89 c7             	mov    %rax,%rdi
  54:	e8 00 00 00 00       	callq  59 <_ZNK5QListI7QStringE7indexOfERKS0_i+0x59>
  59:	8b 00                	mov    (%rax),%eax
  5b:	89 45 bc             	mov    %eax,-0x44(%rbp)
  5e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  62:	48 89 c7             	mov    %rax,%rdi
  65:	e8 00 00 00 00       	callq  6a <_ZNK5QListI7QStringE7indexOfERKS0_i+0x6a>
  6a:	3b 45 bc             	cmp    -0x44(%rbp),%eax
  6d:	0f 9f c0             	setg   %al
  70:	84 c0                	test   %al,%al
{
    this->code                  = *code;
  72:	74 7a                	je     ee <_ZNK5QListI7QStringE7indexOfERKS0_i+0xee>
  74:	8b 45 bc             	mov    -0x44(%rbp),%eax
  77:	8d 50 ff             	lea    -0x1(%rax),%edx
  7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  7e:	89 d6                	mov    %edx,%esi
  80:	48 89 c7             	mov    %rax,%rdi
  83:	e8 00 00 00 00       	callq  88 <_ZNK5QListI7QStringE7indexOfERKS0_i+0x88>
    this->indexBase             = *indexBase;
  88:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  90:	48 89 c7             	mov    %rax,%rdi
  93:	e8 00 00 00 00       	callq  98 <_ZNK5QListI7QStringE7indexOfERKS0_i+0x98>
  98:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
}
  9c:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  a9:	0f 95 c0             	setne  %al
  ac:	84 c0                	test   %al,%al
  ae:	74 3e                	je     ee <_ZNK5QListI7QStringE7indexOfERKS0_i+0xee>
  b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b4:	48 89 c7             	mov    %rax,%rdi
  b7:	e8 00 00 00 00       	callq  bc <_ZNK5QListI7QStringE7indexOfERKS0_i+0xbc>
  bc:	48 89 c2             	mov    %rax,%rdx
  bf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  c3:	48 89 c6             	mov    %rax,%rsi
  c6:	48 89 d7             	mov    %rdx,%rdi
  c9:	e8 00 00 00 00       	callq  ce <_ZNK5QListI7QStringE7indexOfERKS0_i+0xce>
  ce:	84 c0                	test   %al,%al
  d0:	74 ca                	je     9c <_ZNK5QListI7QStringE7indexOfERKS0_i+0x9c>
  d2:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
  d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  da:	48 89 c7             	mov    %rax,%rdi
  dd:	e8 00 00 00 00       	callq  e2 <_ZNK5QListI7QStringE7indexOfERKS0_i+0xe2>
  e2:	48 29 c3             	sub    %rax,%rbx
  e5:	48 89 d8             	mov    %rbx,%rax
  e8:	48 c1 f8 03          	sar    $0x3,%rax
  ec:	eb 05                	jmp    f3 <_ZNK5QListI7QStringE7indexOfERKS0_i+0xf3>
  ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  f3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  f7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  fe:	00 00 
 100:	74 05                	je     107 <_ZNK5QListI7QStringE7indexOfERKS0_i+0x107>
 102:	e8 00 00 00 00       	callq  107 <_ZNK5QListI7QStringE7indexOfERKS0_i+0x107>
 107:	48 83 c4 48          	add    $0x48,%rsp
 10b:	5b                   	pop    %rbx
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
 10c:	5d                   	pop    %rbp
 10d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE6appendERKS0_:

0000000000000000 <_ZN5QListI8variableE6appendERKS0_>:
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 38          	sub    $0x38,%rsp
   9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  1e:	31 c0                	xor    %eax,%eax
  20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  24:	48 8b 00             	mov    (%rax),%rax
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	e8 00 00 00 00       	callq  2f <_ZN5QListI8variableE6appendERKS0_+0x2f>
  2f:	84 c0                	test   %al,%al
  31:	74 36                	je     69 <_ZN5QListI8variableE6appendERKS0_+0x69>
  33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  37:	ba 01 00 00 00       	mov    $0x1,%edx
  3c:	be ff ff ff 7f       	mov    $0x7fffffff,%esi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	callq  49 <_ZN5QListI8variableE6appendERKS0_+0x49>
  49:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  51:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  55:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  59:	48 89 ce             	mov    %rcx,%rsi
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	e8 00 00 00 00       	callq  64 <_ZN5QListI8variableE6appendERKS0_+0x64>
  64:	e9 89 00 00 00       	jmpq   f2 <_ZN5QListI8variableE6appendERKS0_+0xf2>
  69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	callq  75 <_ZN5QListI8variableE6appendERKS0_+0x75>
{
    this->code                  = *code;
  75:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  79:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  7d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    this->indexBase             = *indexBase;
  85:	48 89 ce             	mov    %rcx,%rsi
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	e8 00 00 00 00       	callq  90 <_ZN5QListI8variableE6appendERKS0_+0x90>
  90:	eb 60                	jmp    f2 <_ZN5QListI8variableE6appendERKS0_+0xf2>
  92:	48 89 c7             	mov    %rax,%rdi
  95:	e8 00 00 00 00       	callq  9a <_ZN5QListI8variableE6appendERKS0_+0x9a>
  9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
}
  9e:	48 8b 00             	mov    (%rax),%rax
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a1:	8b 50 0c             	mov    0xc(%rax),%edx
  a4:	83 ea 01             	sub    $0x1,%edx
  a7:	89 50 0c             	mov    %edx,0xc(%rax)
  aa:	e8 00 00 00 00       	callq  af <_ZN5QListI8variableE6appendERKS0_+0xaf>
  af:	48 89 c3             	mov    %rax,%rbx
  b2:	e8 00 00 00 00       	callq  b7 <_ZN5QListI8variableE6appendERKS0_+0xb7>
  b7:	48 89 d8             	mov    %rbx,%rax
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	e8 00 00 00 00       	callq  c2 <_ZN5QListI8variableE6appendERKS0_+0xc2>
  c2:	48 89 c7             	mov    %rax,%rdi
  c5:	e8 00 00 00 00       	callq  ca <_ZN5QListI8variableE6appendERKS0_+0xca>
  ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  ce:	48 8b 00             	mov    (%rax),%rax
  d1:	8b 50 0c             	mov    0xc(%rax),%edx
  d4:	83 ea 01             	sub    $0x1,%edx
  d7:	89 50 0c             	mov    %edx,0xc(%rax)
  da:	e8 00 00 00 00       	callq  df <_ZN5QListI8variableE6appendERKS0_+0xdf>
  df:	48 89 c3             	mov    %rax,%rbx
  e2:	e8 00 00 00 00       	callq  e7 <_ZN5QListI8variableE6appendERKS0_+0xe7>
  e7:	48 89 d8             	mov    %rbx,%rax
  ea:	48 89 c7             	mov    %rax,%rdi
  ed:	e8 00 00 00 00       	callq  f2 <_ZN5QListI8variableE6appendERKS0_+0xf2>
  f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  fd:	00 00 
  ff:	74 05                	je     106 <_ZN5QListI8variableE6appendERKS0_+0x106>
 101:	e8 00 00 00 00       	callq  106 <_ZN5QListI8variableE6appendERKS0_+0x106>
 106:	48 83 c4 38          	add    $0x38,%rsp
 10a:	5b                   	pop    %rbx
 10b:	5d                   	pop    %rbp
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
 10c:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringEixEi:

0000000000000000 <_ZN5QListI7QStringEixEi>:
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  13:	78 11                	js     26 <_ZN5QListI7QStringEixEi+0x26>
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	callq  21 <_ZN5QListI7QStringEixEi+0x21>
  21:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  24:	7f 1f                	jg     45 <_ZN5QListI7QStringEixEi+0x45>
  26:	b9 06 02 00 00       	mov    $0x206,%ecx
  2b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 32 <_ZN5QListI7QStringEixEi+0x32>
  32:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 39 <_ZN5QListI7QStringEixEi+0x39>
  39:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 40 <_ZN5QListI7QStringEixEi+0x40>
  40:	e8 00 00 00 00       	callq  45 <_ZN5QListI7QStringEixEi+0x45>
  45:	e8 00 00 00 00       	callq  4a <_ZN5QListI7QStringEixEi+0x4a>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	e8 00 00 00 00       	callq  56 <_ZN5QListI7QStringEixEi+0x56>
  56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  5d:	89 d6                	mov    %edx,%esi
  5f:	48 89 c7             	mov    %rax,%rdi
  62:	e8 00 00 00 00       	callq  67 <_ZN5QListI7QStringEixEi+0x67>
  67:	48 89 c7             	mov    %rax,%rdi
  6a:	e8 00 00 00 00       	callq  6f <_ZN5QListI7QStringEixEi+0x6f>
  6f:	c9                   	leaveq 
  70:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QBasicAtomicOpsILi4EE3refIiEEbRT_:

0000000000000000 <_ZN15QBasicAtomicOpsILi4EE3refIiEEbRT_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  10:	f0 83 00 01          	lock addl $0x1,(%rax)
  14:	0f 95 c2             	setne  %dl
  17:	88 55 ff             	mov    %dl,-0x1(%rbp)
  1a:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
  1e:	0f 95 c0             	setne  %al
  21:	5d                   	pop    %rbp
  22:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QBasicAtomicOpsILi4EE5derefIiEEbRT_:

0000000000000000 <_ZN15QBasicAtomicOpsILi4EE5derefIiEEbRT_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  10:	f0 83 28 01          	lock subl $0x1,(%rax)
  14:	0f 95 c2             	setne  %dl
  17:	88 55 ff             	mov    %dl,-0x1(%rbp)
  1a:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
  1e:	0f 95 c0             	setne  %al
  21:	5d                   	pop    %rbp
  22:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE7deallocEPN9QListData4DataE:

0000000000000000 <_ZN5QListI7QStringE7deallocEPN9QListData4DataE>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 8d 50 10          	lea    0x10(%rax),%rdx
  18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  1c:	8b 40 0c             	mov    0xc(%rax),%eax
  1f:	48 98                	cltq   
  21:	48 c1 e0 03          	shl    $0x3,%rax
  25:	48 01 c2             	add    %rax,%rdx
  28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2c:	48 8d 48 10          	lea    0x10(%rax),%rcx
  30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  34:	8b 40 08             	mov    0x8(%rax),%eax
  37:	48 98                	cltq   
  39:	48 c1 e0 03          	shl    $0x3,%rax
  3d:	48 01 c1             	add    %rax,%rcx
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	48 89 ce             	mov    %rcx,%rsi
  47:	48 89 c7             	mov    %rax,%rdi
  4a:	e8 00 00 00 00       	callq  4f <_ZN5QListI7QStringE7deallocEPN9QListData4DataE+0x4f>
  4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	callq  5b <_ZN5QListI7QStringE7deallocEPN9QListData4DataE+0x5b>
  5b:	90                   	nop
  5c:	c9                   	leaveq 
  5d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_:

0000000000000000 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	53                   	push   %rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  11:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  15:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  19:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  1d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  21:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  29:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  2d:	0f 84 8a 00 00 00    	je     bd <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xbd>
  33:	4c 8b 65 d8          	mov    -0x28(%rbp),%r12
  37:	4c 89 e6             	mov    %r12,%rsi
  3a:	bf 08 00 00 00       	mov    $0x8,%edi
  3f:	e8 00 00 00 00       	callq  44 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x44>
  44:	48 89 c3             	mov    %rax,%rbx
  47:	48 85 db             	test   %rbx,%rbx
  4a:	74 0f                	je     5b <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x5b>
  4c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  50:	48 89 c6             	mov    %rax,%rsi
  53:	48 89 df             	mov    %rbx,%rdi
  56:	e8 00 00 00 00       	callq  5b <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x5b>
  5b:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
  60:	48 83 45 b0 08       	addq   $0x8,-0x50(%rbp)
  65:	eb be                	jmp    25 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x25>
  67:	49 89 c5             	mov    %rax,%r13
  6a:	4c 89 e6             	mov    %r12,%rsi
  6d:	48 89 df             	mov    %rbx,%rdi
  70:	e8 00 00 00 00       	callq  75 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x75>
{
    this->code                  = *code;
  75:	4c 89 e8             	mov    %r13,%rax
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	e8 00 00 00 00       	callq  80 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x80>
  80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    this->indexBase             = *indexBase;
  84:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
  88:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  8c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  90:	0f 95 c0             	setne  %al
  93:	84 c0                	test   %al,%al
  95:	74 0e                	je     a5 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xa5>
  97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
}
  9b:	48 89 c7             	mov    %rax,%rdi
  9e:	e8 00 00 00 00       	callq  a3 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xa3>
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a3:	eb db                	jmp    80 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x80>
  a5:	e8 00 00 00 00       	callq  aa <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xaa>
  aa:	48 89 c3             	mov    %rax,%rbx
  ad:	e8 00 00 00 00       	callq  b2 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xb2>
  b2:	48 89 d8             	mov    %rbx,%rax
  b5:	48 89 c7             	mov    %rax,%rdi
  b8:	e8 00 00 00 00       	callq  bd <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xbd>
  bd:	90                   	nop
  be:	48 83 c4 38          	add    $0x38,%rsp
  c2:	5b                   	pop    %rbx
  c3:	41 5c                	pop    %r12
  c5:	41 5d                	pop    %r13
  c7:	5d                   	pop    %rbp
  c8:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE4swapERS1_:

0000000000000000 <_ZN5QListI7QStringE4swapERS1_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 d6             	mov    %rdx,%rsi
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_ZN5QListI7QStringE4swapERS1_+0x23>
  23:	90                   	nop
  24:	c9                   	leaveq 
  25:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QListSpecialMethodsI8variableED2Ev:

0000000000000000 <_ZN19QListSpecialMethodsI8variableED1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE7deallocEPN9QListData4DataE:

0000000000000000 <_ZN5QListI8variableE7deallocEPN9QListData4DataE>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 8d 50 10          	lea    0x10(%rax),%rdx
  18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  1c:	8b 40 0c             	mov    0xc(%rax),%eax
  1f:	48 98                	cltq   
  21:	48 c1 e0 03          	shl    $0x3,%rax
  25:	48 01 c2             	add    %rax,%rdx
  28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2c:	48 8d 48 10          	lea    0x10(%rax),%rcx
  30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  34:	8b 40 08             	mov    0x8(%rax),%eax
  37:	48 98                	cltq   
  39:	48 c1 e0 03          	shl    $0x3,%rax
  3d:	48 01 c1             	add    %rax,%rcx
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	48 89 ce             	mov    %rcx,%rsi
  47:	48 89 c7             	mov    %rax,%rdi
  4a:	e8 00 00 00 00       	callq  4f <_ZN5QListI8variableE7deallocEPN9QListData4DataE+0x4f>
  4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	callq  5b <_ZN5QListI8variableE7deallocEPN9QListData4DataE+0x5b>
  5b:	90                   	nop
  5c:	c9                   	leaveq 
  5d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE6detachEv:

0000000000000000 <_ZN5QListI8variableE6detachEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZN5QListI8variableE6detachEv+0x1b>
  1b:	84 c0                	test   %al,%al
  1d:	74 0c                	je     2b <_ZN5QListI8variableE6detachEv+0x2b>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	callq  2b <_ZN5QListI8variableE6detachEv+0x2b>
  2b:	90                   	nop
  2c:	c9                   	leaveq 
  2d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE8iteratorC2EPNS1_4NodeE:

0000000000000000 <_ZN5QListI8variableE8iteratorC1EPNS1_4NodeE>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 89 10             	mov    %rdx,(%rax)
  17:	90                   	nop
  18:	5d                   	pop    %rbp
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE4Node1tEv:

0000000000000000 <_ZN5QListI8variableE4Node1tEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	5d                   	pop    %rbp
  10:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE6detachEv:

0000000000000000 <_ZN5QListI7QStringE6detachEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZN5QListI7QStringE6detachEv+0x1b>
  1b:	84 c0                	test   %al,%al
  1d:	74 0c                	je     2b <_ZN5QListI7QStringE6detachEv+0x2b>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	callq  2b <_ZN5QListI7QStringE6detachEv+0x2b>
  2b:	90                   	nop
  2c:	c9                   	leaveq 
  2d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE8iteratorC2EPNS1_4NodeE:

0000000000000000 <_ZN5QListI7QStringE8iteratorC1EPNS1_4NodeE>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 89 10             	mov    %rdx,(%rax)
  17:	90                   	nop
  18:	5d                   	pop    %rbp
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE4Node1tEv:

0000000000000000 <_ZN5QListI7QStringE4Node1tEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	5d                   	pop    %rbp
   d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE18detach_helper_growEii:

0000000000000000 <_ZN5QListI8variableE18detach_helper_growEii>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 54                	push   %r12
   6:	53                   	push   %rbx
   7:	48 83 ec 20          	sub    $0x20,%rsp
   b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   f:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  12:	89 55 d0             	mov    %edx,-0x30(%rbp)
  15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	callq  21 <_ZN5QListI8variableE18detach_helper_growEii+0x21>
  21:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  29:	8b 55 d0             	mov    -0x30(%rbp),%edx
  2c:	48 8d 4d d4          	lea    -0x2c(%rbp),%rcx
  30:	48 89 ce             	mov    %rcx,%rsi
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	callq  3b <_ZN5QListI8variableE18detach_helper_growEii+0x3b>
  3b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43:	48 89 c7             	mov    %rax,%rdi
  46:	e8 00 00 00 00       	callq  4b <_ZN5QListI8variableE18detach_helper_growEii+0x4b>
  4b:	48 89 c2             	mov    %rax,%rdx
  4e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  51:	48 98                	cltq   
  53:	48 c1 e0 03          	shl    $0x3,%rax
  57:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
  5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5f:	48 89 c7             	mov    %rax,%rdi
  62:	e8 00 00 00 00       	callq  67 <_ZN5QListI8variableE18detach_helper_growEii+0x67>
  67:	48 89 c6             	mov    %rax,%rsi
  6a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
{
    this->code                  = *code;
  72:	48 89 d1             	mov    %rdx,%rcx
  75:	48 89 da             	mov    %rbx,%rdx
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	e8 00 00 00 00       	callq  80 <_ZN5QListI8variableE18detach_helper_growEii+0x80>
  80:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  83:	48 98                	cltq   
    this->indexBase             = *indexBase;
  85:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  8c:	00 
  8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  91:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
  95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  99:	48 89 c7             	mov    %rax,%rdi
}
  9c:	e8 00 00 00 00       	callq  a1 <_ZN5QListI8variableE18detach_helper_growEii+0xa1>
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a1:	49 89 c4             	mov    %rax,%r12
  a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	callq  b0 <_ZN5QListI8variableE18detach_helper_growEii+0xb0>
  b0:	48 89 c1             	mov    %rax,%rcx
  b3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  b6:	48 63 d0             	movslq %eax,%rdx
  b9:	8b 45 d0             	mov    -0x30(%rbp),%eax
  bc:	48 98                	cltq   
  be:	48 01 d0             	add    %rdx,%rax
  c1:	48 c1 e0 03          	shl    $0x3,%rax
  c5:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
  c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  cd:	48 89 d9             	mov    %rbx,%rcx
  d0:	4c 89 e2             	mov    %r12,%rdx
  d3:	48 89 c7             	mov    %rax,%rdi
  d6:	e8 00 00 00 00       	callq  db <_ZN5QListI8variableE18detach_helper_growEii+0xdb>
  db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  df:	48 89 c7             	mov    %rax,%rdi
  e2:	e8 00 00 00 00       	callq  e7 <_ZN5QListI8variableE18detach_helper_growEii+0xe7>
  e7:	83 f0 01             	xor    $0x1,%eax
  ea:	84 c0                	test   %al,%al
  ec:	74 13                	je     101 <_ZN5QListI8variableE18detach_helper_growEii+0x101>
  ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  f6:	48 89 d6             	mov    %rdx,%rsi
  f9:	48 89 c7             	mov    %rax,%rdi
  fc:	e8 00 00 00 00       	callq  101 <_ZN5QListI8variableE18detach_helper_growEii+0x101>
 101:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 105:	48 89 c7             	mov    %rax,%rdi
 108:	e8 00 00 00 00       	callq  10d <_ZN5QListI8variableE18detach_helper_growEii+0x10d>
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
 10d:	48 89 c2             	mov    %rax,%rdx
 110:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 113:	48 98                	cltq   

QByteArray module::A6(){
 115:	48 c1 e0 03          	shl    $0x3,%rax
 119:	48 01 d0             	add    %rdx,%rax
 11c:	e9 ab 00 00 00       	jmpq   1cc <_ZN5QListI8variableE18detach_helper_growEii+0x1cc>
 121:	48 89 c7             	mov    %rax,%rdi
 124:	e8 00 00 00 00       	callq  129 <_ZN5QListI8variableE18detach_helper_growEii+0x129>
 129:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 12d:	48 89 c7             	mov    %rax,%rdi
 130:	e8 00 00 00 00       	callq  135 <_ZN5QListI8variableE18detach_helper_growEii+0x135>
 135:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 139:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 13d:	48 89 10             	mov    %rdx,(%rax)
 140:	e8 00 00 00 00       	callq  145 <_ZN5QListI8variableE18detach_helper_growEii+0x145>
    QByteArray result;
 145:	48 89 c3             	mov    %rax,%rbx
 148:	e8 00 00 00 00       	callq  14d <_ZN5QListI8variableE18detach_helper_growEii+0x14d>
 14d:	48 89 d8             	mov    %rbx,%rax

    QDataStream An(&result, QIODevice::ReadWrite);
 150:	48 89 c7             	mov    %rax,%rdi
 153:	e8 00 00 00 00       	callq  158 <_ZN5QListI8variableE18detach_helper_growEii+0x158>
 158:	48 89 c7             	mov    %rax,%rdi
 15b:	e8 00 00 00 00       	callq  160 <_ZN5QListI8variableE18detach_helper_growEii+0x160>
 160:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 164:	48 89 c7             	mov    %rax,%rdi
 167:	e8 00 00 00 00       	callq  16c <_ZN5QListI8variableE18detach_helper_growEii+0x16c>
 16c:	48 89 c2             	mov    %rax,%rdx
 16f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 172:	48 98                	cltq   
 174:	48 c1 e0 03          	shl    $0x3,%rax
 178:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx

    quint16 CRC16 = 0xF0F0;
 17c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 180:	48 89 c7             	mov    %rax,%rdi

    quint8 counter = 0xEE;
 183:	e8 00 00 00 00       	callq  188 <_ZN5QListI8variableE18detach_helper_growEii+0x188>
 188:	48 89 c1             	mov    %rax,%rcx
    quint8 typeId  = 0x11;
 18b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 18f:	48 89 da             	mov    %rbx,%rdx

    An << counter << typeId << this->primary << this->id;
 192:	48 89 ce             	mov    %rcx,%rsi
 195:	48 89 c7             	mov    %rax,%rdi
 198:	e8 00 00 00 00       	callq  19d <_ZN5QListI8variableE18detach_helper_growEii+0x19d>
 19d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1a1:	48 89 c7             	mov    %rax,%rdi
 1a4:	e8 00 00 00 00       	callq  1a9 <_ZN5QListI8variableE18detach_helper_growEii+0x1a9>
 1a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 1b1:	48 89 10             	mov    %rdx,(%rax)
 1b4:	e8 00 00 00 00       	callq  1b9 <_ZN5QListI8variableE18detach_helper_growEii+0x1b9>
 1b9:	48 89 c3             	mov    %rax,%rbx
 1bc:	e8 00 00 00 00       	callq  1c1 <_ZN5QListI8variableE18detach_helper_growEii+0x1c1>
 1c1:	48 89 d8             	mov    %rbx,%rax
 1c4:	48 89 c7             	mov    %rax,%rdi
 1c7:	e8 00 00 00 00       	callq  1cc <_ZN5QListI8variableE18detach_helper_growEii+0x1cc>
 1cc:	48 83 c4 20          	add    $0x20,%rsp
 1d0:	5b                   	pop    %rbx
 1d1:	41 5c                	pop    %r12
 1d3:	5d                   	pop    %rbp
 1d4:	c3                   	retq   

Дизассемблирование раздела .text._ZN8variableC2ERKS_:

0000000000000000 <_ZN8variableC1ERKS_>:
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	0f b6 10             	movzbl (%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	88 10                	mov    %dl,(%rax)
  1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  21:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	88 50 01             	mov    %dl,0x1(%rax)
  2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  30:	0f b7 50 02          	movzwl 0x2(%rax),%edx
  34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  38:	66 89 50 02          	mov    %dx,0x2(%rax)
  3c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  44:	48 8b 50 0c          	mov    0xc(%rax),%rdx
  48:	48 8b 40 04          	mov    0x4(%rax),%rax
  4c:	48 89 41 04          	mov    %rax,0x4(%rcx)
  50:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
  54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  58:	48 8d 50 18          	lea    0x18(%rax),%rdx
  5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  60:	48 83 c0 18          	add    $0x18,%rax
  64:	48 89 d6             	mov    %rdx,%rsi
  67:	48 89 c7             	mov    %rax,%rdi
  6a:	e8 00 00 00 00       	callq  6f <_ZN8variableC1ERKS_+0x6f>
  6f:	90                   	nop
  70:	c9                   	leaveq 
{
    this->code                  = *code;
  71:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_:

0000000000000000 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_>:
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 54                	push   %r12
   6:	53                   	push   %rbx
   7:	48 83 ec 20          	sub    $0x20,%rsp
   b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	bf 20 00 00 00       	mov    $0x20,%edi
  1c:	e8 00 00 00 00       	callq  21 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x21>
  21:	48 89 c3             	mov    %rax,%rbx
  24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	48 89 df             	mov    %rbx,%rdi
  2e:	e8 00 00 00 00       	callq  33 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x33>
  33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  37:	48 89 18             	mov    %rbx,(%rax)
  3a:	eb 16                	jmp    52 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x52>
  3c:	49 89 c4             	mov    %rax,%r12
  3f:	48 89 df             	mov    %rbx,%rdi
  42:	e8 00 00 00 00       	callq  47 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x47>
  47:	4c 89 e0             	mov    %r12,%rax
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	e8 00 00 00 00       	callq  52 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x52>
  52:	48 83 c4 20          	add    $0x20,%rsp
  56:	5b                   	pop    %rbx
  57:	41 5c                	pop    %r12
  59:	5d                   	pop    %rbp
  5a:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_:

0000000000000000 <_ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  18:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  1c:	74 13                	je     31 <_ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_+0x31>
  1e:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	e8 00 00 00 00       	callq  2f <_ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_+0x2f>
  2f:	eb e3                	jmp    14 <_ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_+0x14>
  31:	90                   	nop
  32:	c9                   	leaveq 
  33:	c3                   	retq   

Дизассемблирование раздела .text._Z5qSwapIPN9QListData4DataEEvRT_S4_:

0000000000000000 <_Z5qSwapIPN9QListData4DataEEvRT_S4_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 d6             	mov    %rdx,%rsi
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_Z5qSwapIPN9QListData4DataEEvRT_S4_+0x23>
  23:	90                   	nop
  24:	c9                   	leaveq 
  25:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE13node_destructEPNS1_4NodeES3_:

0000000000000000 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  19:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  1d:	74 23                	je     42 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x42>
  1f:	48 83 6d d8 08       	subq   $0x8,-0x28(%rbp)
  24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  28:	48 8b 18             	mov    (%rax),%rbx
  2b:	48 85 db             	test   %rbx,%rbx
  2e:	74 e5                	je     15 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x15>
  30:	48 89 df             	mov    %rbx,%rdi
  33:	e8 00 00 00 00       	callq  38 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x38>
  38:	48 89 df             	mov    %rbx,%rdi
  3b:	e8 00 00 00 00       	callq  40 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x40>
  40:	eb d3                	jmp    15 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x15>
  42:	90                   	nop
  43:	48 83 c4 28          	add    $0x28,%rsp
  47:	5b                   	pop    %rbx
  48:	5d                   	pop    %rbp
  49:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE13detach_helperEv:

0000000000000000 <_ZN5QListI8variableE13detach_helperEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	8b 50 04             	mov    0x4(%rax),%edx
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	89 d6                	mov    %edx,%esi
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	e8 00 00 00 00       	callq  24 <_ZN5QListI8variableE13detach_helperEv+0x24>
  24:	90                   	nop
  25:	c9                   	leaveq 
  26:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE13detach_helperEv:

0000000000000000 <_ZN5QListI7QStringE13detach_helperEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	8b 50 04             	mov    0x4(%rax),%edx
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	89 d6                	mov    %edx,%esi
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	e8 00 00 00 00       	callq  24 <_ZN5QListI7QStringE13detach_helperEv+0x24>
  24:	90                   	nop
  25:	c9                   	leaveq 
  26:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_:

0000000000000000 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 54                	push   %r12
   6:	53                   	push   %rbx
   7:	48 83 ec 30          	sub    $0x30,%rsp
   b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  13:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  17:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  1f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  2b:	0f 84 97 00 00 00    	je     c8 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xc8>
  31:	bf 20 00 00 00       	mov    $0x20,%edi
  36:	e8 00 00 00 00       	callq  3b <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x3b>
  3b:	48 89 c3             	mov    %rax,%rbx
  3e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42:	48 8b 00             	mov    (%rax),%rax
  45:	48 89 c6             	mov    %rax,%rsi
  48:	48 89 df             	mov    %rbx,%rdi
  4b:	e8 00 00 00 00       	callq  50 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x50>
  50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  54:	48 89 18             	mov    %rbx,(%rax)
  57:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
  5c:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
  61:	eb c0                	jmp    23 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x23>
  63:	49 89 c4             	mov    %rax,%r12
  66:	48 89 df             	mov    %rbx,%rdi
  69:	e8 00 00 00 00       	callq  6e <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x6e>
  6e:	4c 89 e0             	mov    %r12,%rax
{
    this->code                  = *code;
  71:	eb 00                	jmp    73 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x73>
  73:	48 89 c7             	mov    %rax,%rdi
  76:	e8 00 00 00 00       	callq  7b <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x7b>
  7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7f:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
  83:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    this->indexBase             = *indexBase;
  87:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  8b:	0f 95 c0             	setne  %al
  8e:	84 c0                	test   %al,%al
  90:	74 1e                	je     b0 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xb0>
  92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  96:	48 8b 18             	mov    (%rax),%rbx
  99:	48 85 db             	test   %rbx,%rbx
}
  9c:	74 dd                	je     7b <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x7b>
  9e:	48 89 df             	mov    %rbx,%rdi
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a1:	e8 00 00 00 00       	callq  a6 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xa6>
  a6:	48 89 df             	mov    %rbx,%rdi
  a9:	e8 00 00 00 00       	callq  ae <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xae>
  ae:	eb cb                	jmp    7b <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x7b>
  b0:	e8 00 00 00 00       	callq  b5 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xb5>
  b5:	48 89 c3             	mov    %rax,%rbx
  b8:	e8 00 00 00 00       	callq  bd <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xbd>
  bd:	48 89 d8             	mov    %rbx,%rax
  c0:	48 89 c7             	mov    %rax,%rdi
  c3:	e8 00 00 00 00       	callq  c8 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xc8>
  c8:	90                   	nop
  c9:	48 83 c4 30          	add    $0x30,%rsp
  cd:	5b                   	pop    %rbx
  ce:	41 5c                	pop    %r12
  d0:	5d                   	pop    %rbp
  d1:	c3                   	retq   

Дизассемблирование раздела .text._ZSt4swapIPN9QListData4DataEEvRT_S4_:

0000000000000000 <_ZSt4swapIPN9QListData4DataEEvRT_S4_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  1b:	48 8b 10             	mov    (%rax),%rdx
  1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  22:	48 89 10             	mov    %rdx,(%rax)
  25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2d:	48 89 10             	mov    %rdx,(%rax)
  30:	90                   	nop
  31:	5d                   	pop    %rbp
  32:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE13detach_helperEi:

0000000000000000 <_ZN5QListI8variableE13detach_helperEi>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   d:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI8variableE13detach_helperEi+0x1c>
  1c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  24:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  27:	89 d6                	mov    %edx,%esi
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	callq  31 <_ZN5QListI8variableE13detach_helperEi+0x31>
  31:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	callq  41 <_ZN5QListI8variableE13detach_helperEi+0x41>
  41:	48 89 c3             	mov    %rax,%rbx
  44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	callq  50 <_ZN5QListI8variableE13detach_helperEi+0x50>
  50:	48 89 c6             	mov    %rax,%rsi
  53:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5b:	48 89 d1             	mov    %rdx,%rcx
  5e:	48 89 da             	mov    %rbx,%rdx
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	callq  69 <_ZN5QListI8variableE13detach_helperEi+0x69>
  69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	callq  75 <_ZN5QListI8variableE13detach_helperEi+0x75>
{
    this->code                  = *code;
  75:	83 f0 01             	xor    $0x1,%eax
  78:	84 c0                	test   %al,%al
  7a:	74 4c                	je     c8 <_ZN5QListI8variableE13detach_helperEi+0xc8>
  7c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    this->indexBase             = *indexBase;
  84:	48 89 d6             	mov    %rdx,%rsi
  87:	48 89 c7             	mov    %rax,%rdi
  8a:	e8 00 00 00 00       	callq  8f <_ZN5QListI8variableE13detach_helperEi+0x8f>
  8f:	eb 37                	jmp    c8 <_ZN5QListI8variableE13detach_helperEi+0xc8>
  91:	48 89 c7             	mov    %rax,%rdi
  94:	e8 00 00 00 00       	callq  99 <_ZN5QListI8variableE13detach_helperEi+0x99>
  99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
}
  9d:	48 89 c7             	mov    %rax,%rdi
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a0:	e8 00 00 00 00       	callq  a5 <_ZN5QListI8variableE13detach_helperEi+0xa5>
  a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  ad:	48 89 10             	mov    %rdx,(%rax)
  b0:	e8 00 00 00 00       	callq  b5 <_ZN5QListI8variableE13detach_helperEi+0xb5>
  b5:	48 89 c3             	mov    %rax,%rbx
  b8:	e8 00 00 00 00       	callq  bd <_ZN5QListI8variableE13detach_helperEi+0xbd>
  bd:	48 89 d8             	mov    %rbx,%rax
  c0:	48 89 c7             	mov    %rax,%rdi
  c3:	e8 00 00 00 00       	callq  c8 <_ZN5QListI8variableE13detach_helperEi+0xc8>
  c8:	90                   	nop
  c9:	48 83 c4 28          	add    $0x28,%rsp
  cd:	5b                   	pop    %rbx
  ce:	5d                   	pop    %rbp
  cf:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE13detach_helperEi:

0000000000000000 <_ZN5QListI7QStringE13detach_helperEi>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   d:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI7QStringE13detach_helperEi+0x1c>
  1c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  24:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  27:	89 d6                	mov    %edx,%esi
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	callq  31 <_ZN5QListI7QStringE13detach_helperEi+0x31>
  31:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	callq  41 <_ZN5QListI7QStringE13detach_helperEi+0x41>
  41:	48 89 c3             	mov    %rax,%rbx
  44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	callq  50 <_ZN5QListI7QStringE13detach_helperEi+0x50>
  50:	48 89 c6             	mov    %rax,%rsi
  53:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5b:	48 89 d1             	mov    %rdx,%rcx
  5e:	48 89 da             	mov    %rbx,%rdx
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	callq  69 <_ZN5QListI7QStringE13detach_helperEi+0x69>
  69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	callq  75 <_ZN5QListI7QStringE13detach_helperEi+0x75>
{
    this->code                  = *code;
  75:	83 f0 01             	xor    $0x1,%eax
  78:	84 c0                	test   %al,%al
  7a:	74 4c                	je     c8 <_ZN5QListI7QStringE13detach_helperEi+0xc8>
  7c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    this->indexBase             = *indexBase;
  84:	48 89 d6             	mov    %rdx,%rsi
  87:	48 89 c7             	mov    %rax,%rdi
  8a:	e8 00 00 00 00       	callq  8f <_ZN5QListI7QStringE13detach_helperEi+0x8f>
  8f:	eb 37                	jmp    c8 <_ZN5QListI7QStringE13detach_helperEi+0xc8>
  91:	48 89 c7             	mov    %rax,%rdi
  94:	e8 00 00 00 00       	callq  99 <_ZN5QListI7QStringE13detach_helperEi+0x99>
  99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
}
  9d:	48 89 c7             	mov    %rax,%rdi
#include "module.h"
#include "vartypes.h"
#include "QDataStream"

module::module(QStringList *code, QStringList *indexBase)
  a0:	e8 00 00 00 00       	callq  a5 <_ZN5QListI7QStringE13detach_helperEi+0xa5>
  a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  ad:	48 89 10             	mov    %rdx,(%rax)
  b0:	e8 00 00 00 00       	callq  b5 <_ZN5QListI7QStringE13detach_helperEi+0xb5>
  b5:	48 89 c3             	mov    %rax,%rbx
  b8:	e8 00 00 00 00       	callq  bd <_ZN5QListI7QStringE13detach_helperEi+0xbd>
  bd:	48 89 d8             	mov    %rbx,%rax
  c0:	48 89 c7             	mov    %rax,%rdi
  c3:	e8 00 00 00 00       	callq  c8 <_ZN5QListI7QStringE13detach_helperEi+0xc8>
  c8:	90                   	nop
  c9:	48 83 c4 28          	add    $0x28,%rsp
  cd:	5b                   	pop    %rbx
  ce:	5d                   	pop    %rbp
  cf:	c3                   	retq   
