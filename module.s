
module.o:     формат файла elf64-x86-64

Разделы:
Инд Имя           Размер    VMA               LMA               Файл      Вырав
  0 .group        00000008  0000000000000000  0000000000000000  00000040  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  1 .group        00000008  0000000000000000  0000000000000000  00000048  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  2 .group        00000008  0000000000000000  0000000000000000  00000050  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  3 .group        00000008  0000000000000000  0000000000000000  00000058  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  4 .group        00000008  0000000000000000  0000000000000000  00000060  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  5 .group        00000008  0000000000000000  0000000000000000  00000068  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  6 .group        00000008  0000000000000000  0000000000000000  00000070  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  7 .group        00000008  0000000000000000  0000000000000000  00000078  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  8 .group        00000008  0000000000000000  0000000000000000  00000080  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  9 .group        00000008  0000000000000000  0000000000000000  00000088  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 10 .group        00000008  0000000000000000  0000000000000000  00000090  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 11 .group        00000008  0000000000000000  0000000000000000  00000098  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 12 .group        00000008  0000000000000000  0000000000000000  000000a0  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 13 .group        00000008  0000000000000000  0000000000000000  000000a8  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 14 .group        00000008  0000000000000000  0000000000000000  000000b0  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 15 .group        00000008  0000000000000000  0000000000000000  000000b8  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 16 .group        00000008  0000000000000000  0000000000000000  000000c0  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 17 .group        00000008  0000000000000000  0000000000000000  000000c8  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 18 .group        0000000c  0000000000000000  0000000000000000  000000d0  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 19 .group        00000008  0000000000000000  0000000000000000  000000dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 20 .group        00000008  0000000000000000  0000000000000000  000000e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 21 .group        00000008  0000000000000000  0000000000000000  000000ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 22 .group        00000008  0000000000000000  0000000000000000  000000f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 23 .group        00000008  0000000000000000  0000000000000000  000000fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 24 .group        00000008  0000000000000000  0000000000000000  00000104  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 25 .group        00000008  0000000000000000  0000000000000000  0000010c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 26 .group        00000008  0000000000000000  0000000000000000  00000114  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 27 .group        00000008  0000000000000000  0000000000000000  0000011c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 28 .group        00000008  0000000000000000  0000000000000000  00000124  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 29 .group        00000008  0000000000000000  0000000000000000  0000012c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 30 .group        00000008  0000000000000000  0000000000000000  00000134  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 31 .group        00000008  0000000000000000  0000000000000000  0000013c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 32 .group        00000008  0000000000000000  0000000000000000  00000144  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 33 .group        00000008  0000000000000000  0000000000000000  0000014c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 34 .group        00000008  0000000000000000  0000000000000000  00000154  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 35 .group        00000008  0000000000000000  0000000000000000  0000015c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 36 .group        00000008  0000000000000000  0000000000000000  00000164  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 37 .group        00000008  0000000000000000  0000000000000000  0000016c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 38 .group        00000008  0000000000000000  0000000000000000  00000174  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 39 .group        00000008  0000000000000000  0000000000000000  0000017c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 40 .group        00000008  0000000000000000  0000000000000000  00000184  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 41 .group        00000008  0000000000000000  0000000000000000  0000018c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 42 .group        00000008  0000000000000000  0000000000000000  00000194  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 43 .group        00000008  0000000000000000  0000000000000000  0000019c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 44 .group        00000008  0000000000000000  0000000000000000  000001a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 45 .group        00000008  0000000000000000  0000000000000000  000001ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 46 .group        00000008  0000000000000000  0000000000000000  000001b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 47 .group        00000008  0000000000000000  0000000000000000  000001bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 48 .group        00000008  0000000000000000  0000000000000000  000001c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 49 .group        00000008  0000000000000000  0000000000000000  000001cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 50 .group        00000008  0000000000000000  0000000000000000  000001d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 51 .group        00000008  0000000000000000  0000000000000000  000001dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 52 .group        00000008  0000000000000000  0000000000000000  000001e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 53 .group        00000008  0000000000000000  0000000000000000  000001ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 54 .group        00000008  0000000000000000  0000000000000000  000001f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 55 .group        00000008  0000000000000000  0000000000000000  000001fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 56 .group        00000008  0000000000000000  0000000000000000  00000204  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 57 .group        00000008  0000000000000000  0000000000000000  0000020c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 58 .group        00000008  0000000000000000  0000000000000000  00000214  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 59 .group        00000008  0000000000000000  0000000000000000  0000021c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 60 .group        00000008  0000000000000000  0000000000000000  00000224  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 61 .group        00000008  0000000000000000  0000000000000000  0000022c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 62 .group        00000008  0000000000000000  0000000000000000  00000234  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 63 .group        00000008  0000000000000000  0000000000000000  0000023c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 64 .group        00000008  0000000000000000  0000000000000000  00000244  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 65 .group        00000008  0000000000000000  0000000000000000  0000024c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 66 .group        00000008  0000000000000000  0000000000000000  00000254  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 67 .group        00000008  0000000000000000  0000000000000000  0000025c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 68 .group        00000008  0000000000000000  0000000000000000  00000264  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 69 .group        00000008  0000000000000000  0000000000000000  0000026c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 70 .group        00000008  0000000000000000  0000000000000000  00000274  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 71 .group        00000008  0000000000000000  0000000000000000  0000027c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 72 .group        00000008  0000000000000000  0000000000000000  00000284  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 73 .group        00000008  0000000000000000  0000000000000000  0000028c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 74 .group        00000008  0000000000000000  0000000000000000  00000294  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 75 .group        00000008  0000000000000000  0000000000000000  0000029c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 76 .group        00000008  0000000000000000  0000000000000000  000002a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 77 .group        00000008  0000000000000000  0000000000000000  000002ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 78 .group        00000008  0000000000000000  0000000000000000  000002b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 79 .group        00000008  0000000000000000  0000000000000000  000002bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 80 .group        00000008  0000000000000000  0000000000000000  000002c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 81 .group        00000008  0000000000000000  0000000000000000  000002cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 82 .group        00000008  0000000000000000  0000000000000000  000002d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 83 .group        00000008  0000000000000000  0000000000000000  000002dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 84 .group        00000008  0000000000000000  0000000000000000  000002e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 85 .group        00000008  0000000000000000  0000000000000000  000002ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 86 .group        00000008  0000000000000000  0000000000000000  000002f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 87 .group        00000008  0000000000000000  0000000000000000  000002fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 88 .group        00000008  0000000000000000  0000000000000000  00000304  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 89 .group        00000008  0000000000000000  0000000000000000  0000030c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 90 .group        00000008  0000000000000000  0000000000000000  00000314  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 91 .group        00000008  0000000000000000  0000000000000000  0000031c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 92 .group        00000008  0000000000000000  0000000000000000  00000324  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 93 .group        00000008  0000000000000000  0000000000000000  0000032c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 94 .group        00000008  0000000000000000  0000000000000000  00000334  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 95 .group        00000008  0000000000000000  0000000000000000  0000033c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 96 .group        00000008  0000000000000000  0000000000000000  00000344  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 97 .group        00000008  0000000000000000  0000000000000000  0000034c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 98 .group        00000008  0000000000000000  0000000000000000  00000354  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
 99 .group        00000008  0000000000000000  0000000000000000  0000035c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
100 .group        00000008  0000000000000000  0000000000000000  00000364  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
101 .group        00000008  0000000000000000  0000000000000000  0000036c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
102 .group        00000008  0000000000000000  0000000000000000  00000374  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
103 .group        00000008  0000000000000000  0000000000000000  0000037c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
104 .group        00000008  0000000000000000  0000000000000000  00000384  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
105 .group        00000008  0000000000000000  0000000000000000  0000038c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
106 .group        00000008  0000000000000000  0000000000000000  00000394  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
107 .group        00000008  0000000000000000  0000000000000000  0000039c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
108 .group        00000008  0000000000000000  0000000000000000  000003a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
109 .group        00000008  0000000000000000  0000000000000000  000003ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
110 .group        00000008  0000000000000000  0000000000000000  000003b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
111 .group        00000008  0000000000000000  0000000000000000  000003bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
112 .group        00000008  0000000000000000  0000000000000000  000003c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
113 .group        00000008  0000000000000000  0000000000000000  000003cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
114 .group        00000008  0000000000000000  0000000000000000  000003d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
115 .group        00000008  0000000000000000  0000000000000000  000003dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
116 .group        00000008  0000000000000000  0000000000000000  000003e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
117 .group        00000008  0000000000000000  0000000000000000  000003ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
118 .group        00000008  0000000000000000  0000000000000000  000003f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
119 .group        00000008  0000000000000000  0000000000000000  000003fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
120 .group        00000008  0000000000000000  0000000000000000  00000404  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
121 .group        00000008  0000000000000000  0000000000000000  0000040c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
122 .group        00000008  0000000000000000  0000000000000000  00000414  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
123 .group        00000008  0000000000000000  0000000000000000  0000041c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
124 .group        00000008  0000000000000000  0000000000000000  00000424  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
125 .group        00000008  0000000000000000  0000000000000000  0000042c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
126 .group        00000008  0000000000000000  0000000000000000  00000434  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
127 .group        00000008  0000000000000000  0000000000000000  0000043c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
128 .group        00000008  0000000000000000  0000000000000000  00000444  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
129 .group        00000008  0000000000000000  0000000000000000  0000044c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
130 .group        00000008  0000000000000000  0000000000000000  00000454  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
131 .group        00000008  0000000000000000  0000000000000000  0000045c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
132 .group        00000008  0000000000000000  0000000000000000  00000464  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
133 .group        00000008  0000000000000000  0000000000000000  0000046c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
134 .group        00000008  0000000000000000  0000000000000000  00000474  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
135 .group        00000008  0000000000000000  0000000000000000  0000047c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
136 .group        00000008  0000000000000000  0000000000000000  00000484  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
137 .group        00000008  0000000000000000  0000000000000000  0000048c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
138 .group        00000008  0000000000000000  0000000000000000  00000494  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
139 .group        00000008  0000000000000000  0000000000000000  0000049c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
140 .group        00000008  0000000000000000  0000000000000000  000004a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
141 .group        00000008  0000000000000000  0000000000000000  000004ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
142 .group        00000008  0000000000000000  0000000000000000  000004b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
143 .group        00000008  0000000000000000  0000000000000000  000004bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
144 .group        00000008  0000000000000000  0000000000000000  000004c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
145 .group        00000008  0000000000000000  0000000000000000  000004cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
146 .group        00000008  0000000000000000  0000000000000000  000004d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
147 .group        00000008  0000000000000000  0000000000000000  000004dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
148 .group        00000008  0000000000000000  0000000000000000  000004e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
149 .group        00000008  0000000000000000  0000000000000000  000004ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
150 .group        00000008  0000000000000000  0000000000000000  000004f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
151 .group        00000008  0000000000000000  0000000000000000  000004fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
152 .group        00000008  0000000000000000  0000000000000000  00000504  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
153 .group        00000008  0000000000000000  0000000000000000  0000050c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
154 .group        00000008  0000000000000000  0000000000000000  00000514  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
155 .group        00000008  0000000000000000  0000000000000000  0000051c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
156 .group        00000008  0000000000000000  0000000000000000  00000524  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
157 .group        00000008  0000000000000000  0000000000000000  0000052c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
158 .group        00000008  0000000000000000  0000000000000000  00000534  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
159 .group        00000008  0000000000000000  0000000000000000  0000053c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
160 .group        00000008  0000000000000000  0000000000000000  00000544  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
161 .group        00000008  0000000000000000  0000000000000000  0000054c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
162 .group        00000008  0000000000000000  0000000000000000  00000554  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
163 .group        00000008  0000000000000000  0000000000000000  0000055c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
164 .group        00000008  0000000000000000  0000000000000000  00000564  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
165 .group        00000008  0000000000000000  0000000000000000  0000056c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
166 .group        00000008  0000000000000000  0000000000000000  00000574  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
167 .group        00000008  0000000000000000  0000000000000000  0000057c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
168 .group        00000008  0000000000000000  0000000000000000  00000584  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
169 .group        00000008  0000000000000000  0000000000000000  0000058c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
170 .group        00000008  0000000000000000  0000000000000000  00000594  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
171 .group        00000008  0000000000000000  0000000000000000  0000059c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
172 .group        00000008  0000000000000000  0000000000000000  000005a4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
173 .group        00000008  0000000000000000  0000000000000000  000005ac  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
174 .group        00000008  0000000000000000  0000000000000000  000005b4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
175 .group        00000008  0000000000000000  0000000000000000  000005bc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
176 .group        00000008  0000000000000000  0000000000000000  000005c4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
177 .group        00000008  0000000000000000  0000000000000000  000005cc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
178 .group        00000008  0000000000000000  0000000000000000  000005d4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
179 .group        00000008  0000000000000000  0000000000000000  000005dc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
180 .group        00000008  0000000000000000  0000000000000000  000005e4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
181 .group        00000008  0000000000000000  0000000000000000  000005ec  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
182 .group        00000008  0000000000000000  0000000000000000  000005f4  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
183 .group        00000008  0000000000000000  0000000000000000  000005fc  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
184 .group        00000008  0000000000000000  0000000000000000  00000604  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
185 .group        00000008  0000000000000000  0000000000000000  0000060c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
186 .group        00000008  0000000000000000  0000000000000000  00000614  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
187 .group        00000008  0000000000000000  0000000000000000  0000061c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
188 .group        00000008  0000000000000000  0000000000000000  00000624  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
189 .group        00000008  0000000000000000  0000000000000000  0000062c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
190 .group        00000008  0000000000000000  0000000000000000  00000634  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
191 .group        00000008  0000000000000000  0000000000000000  0000063c  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
192 .group        00000008  0000000000000000  0000000000000000  00000644  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
193 .text         000008b9  0000000000000000  0000000000000000  0000064c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
194 .data         00000000  0000000000000000  0000000000000000  00000f05  2**0
                  CONTENTS, ALLOC, LOAD, DATA
195 .bss          00000000  0000000000000000  0000000000000000  00000f05  2**0
                  ALLOC
196 .text._ZnwmPv 00000012  0000000000000000  0000000000000000  00000f05  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 .text._ZdlPvS_ 0000000f  0000000000000000  0000000000000000  00000f17  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 .text._Z7qt_noopv 00000007  0000000000000000  0000000000000000  00000f26  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 .text._ZN9QtPrivate8RefCount3refEv 00000041  0000000000000000  0000000000000000  00000f2e  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
200 .text._ZN9QtPrivate8RefCount5derefEv 00000043  0000000000000000  0000000000000000  00000f70  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
201 .text._ZNK9QtPrivate8RefCount8isSharedEv 00000035  0000000000000000  0000000000000000  00000fb4  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
202 .rodata       00000111  0000000000000000  0000000000000000  00000ff0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
203 .text._ZN10QArrayData4dataEv 00000063  0000000000000000  0000000000000000  00001102  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
204 .text._ZN10QArrayData10sharedNullEv 0000000d  0000000000000000  0000000000000000  00001165  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
205 .text._ZN10QByteArrayC2Ev 0000001e  0000000000000000  0000000000000000  00001172  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
206 .text._ZN10QByteArrayD2Ev 00000034  0000000000000000  0000000000000000  00001190  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
207 .text._ZNK7QString4sizeEv 00000014  0000000000000000  0000000000000000  000011c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 .text._ZN7QStringpLERKS_ 00000025  0000000000000000  0000000000000000  000011d8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
209 .text._ZN7QString8fromUtf8EPKci 0000006c  0000000000000000  0000000000000000  000011fd  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
210 .text._ZN7QStringC2EPKc 00000047  0000000000000000  0000000000000000  0000126a  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
211 .text._ZNK7QString9constDataEv 0000001d  0000000000000000  0000000000000000  000012b2  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
212 .text._ZN7QStringC2ERKS_ 00000057  0000000000000000  0000000000000000  000012d0  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
213 .text._ZN7QStringD2Ev 00000034  0000000000000000  0000000000000000  00001328  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
214 .text._ZNK7QStringeqEPKc 00000053  0000000000000000  0000000000000000  0000135c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
215 .text._ZplRK7QStringPKc 000000ba  0000000000000000  0000000000000000  000013af  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
216 .gcc_except_table._ZplRK7QStringPKc 0000001b  0000000000000000  0000000000000000  00001469  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
217 .text._ZN9QListData7disposeEv 0000001e  0000000000000000  0000000000000000  00001484  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
218 .text._ZNK9QListData5beginEv 00000028  0000000000000000  0000000000000000  000014a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 .text._ZNK9QListData3endEv 00000028  0000000000000000  0000000000000000  000014ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 .text._ZN19QListSpecialMethodsI7QStringED2Ev 0000000b  0000000000000000  0000000000000000  000014f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 .text._ZN11QStringListC2Ev 0000001b  0000000000000000  0000000000000000  000014fe  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
222 .text._ZN11QStringListC2ERKS_ 00000026  0000000000000000  0000000000000000  0000151a  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
223 .text._ZN11QStringListD2Ev 0000001b  0000000000000000  0000000000000000  00001540  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
224 .text._ZN11QStringListaSERKS_ 00000029  0000000000000000  0000000000000000  0000155c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
225 .gcc_except_table 00000234  0000000000000000  0000000000000000  00001588  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
226 .text._ZN8VarTypesD2Ev 0000001b  0000000000000000  0000000000000000  000017bc  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
227 .text._ZN8variableD2Ev 0000001f  0000000000000000  0000000000000000  000017d8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
228 .text._ZNK19QBasicAtomicIntegerIiE4loadEv 00000019  0000000000000000  0000000000000000  000017f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 .text._ZN19QBasicAtomicIntegerIiE3refEv 0000001a  0000000000000000  0000000000000000  00001812  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
230 .text._ZN19QBasicAtomicIntegerIiE5derefEv 0000001a  0000000000000000  0000000000000000  0000182c  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
231 .text._ZN15QTypedArrayDataIcE10sharedNullEv 0000000b  0000000000000000  0000000000000000  00001846  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
232 .text._ZN15QTypedArrayDataIcE10deallocateEP10QArrayData 00000025  0000000000000000  0000000000000000  00001851  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
233 .text._ZN15QTypedArrayDataItE4dataEv 0000001a  0000000000000000  0000000000000000  00001876  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
234 .text._ZN15QTypedArrayDataItE10deallocateEP10QArrayData 00000025  0000000000000000  0000000000000000  00001890  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
235 .text._ZN19QListSpecialMethodsI7QStringEC2Ev 0000000b  0000000000000000  0000000000000000  000018b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 .text._ZN5QListI7QStringEC2Ev 00000029  0000000000000000  0000000000000000  000018c2  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
237 .text._ZN5QListI7QStringED2Ev 00000068  0000000000000000  0000000000000000  000018ec  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
238 .text._ZN5QListI7QStringEC2ERKS1_ 000000de  0000000000000000  0000000000000000  00001954  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
239 .text._ZN5QListI7QStringEaSERKS1_ 000000a0  0000000000000000  0000000000000000  00001a32  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
240 .text._ZN19QListSpecialMethodsI8variableEC2Ev 0000000b  0000000000000000  0000000000000000  00001ad2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 .text._ZN5QListI8variableEC2Ev 00000029  0000000000000000  0000000000000000  00001ade  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
242 .text._ZN5QListI8variableED2Ev 00000068  0000000000000000  0000000000000000  00001b08  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
243 .text._ZN5QListI7QStringE8iteratorC2Ev 00000016  0000000000000000  0000000000000000  00001b70  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 .text._ZN5QListI7QStringE5beginEv 00000040  0000000000000000  0000000000000000  00001b86  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
245 .text._ZN5QListI7QStringE3endEv 00000040  0000000000000000  0000000000000000  00001bc6  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
246 .text._ZNK5QListI7QStringE8iteratorneERKS2_ 00000022  0000000000000000  0000000000000000  00001c06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 .text._ZN5QListI7QStringE8iteratorppEv 00000020  0000000000000000  0000000000000000  00001c28  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 .text._ZNK5QListI7QStringE8iteratordeEv 0000001d  0000000000000000  0000000000000000  00001c48  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
249 .text._ZN5QListI8variableE6appendERKS0_ 0000010d  0000000000000000  0000000000000000  00001c66  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
250 .text._ZN15QBasicAtomicOpsILi4EE3refIiEEbRT_ 00000023  0000000000000000  0000000000000000  00001d73  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 .text._ZN15QBasicAtomicOpsILi4EE5derefIiEEbRT_ 00000023  0000000000000000  0000000000000000  00001d96  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 .text._ZN5QListI7QStringE7deallocEPN9QListData4DataE 0000005e  0000000000000000  0000000000000000  00001dba  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
253 .text._ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_ 000000c9  0000000000000000  0000000000000000  00001e18  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
254 .text._ZN5QListI7QStringE4swapERS1_ 00000026  0000000000000000  0000000000000000  00001ee2  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
255 .text._ZN19QListSpecialMethodsI8variableED2Ev 0000000b  0000000000000000  0000000000000000  00001f08  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 .text._ZN5QListI8variableE7deallocEPN9QListData4DataE 0000005e  0000000000000000  0000000000000000  00001f14  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
257 .text._ZN5QListI7QStringE6detachEv 0000002e  0000000000000000  0000000000000000  00001f72  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
258 .text._ZN5QListI7QStringE8iteratorC2EPNS1_4NodeE 0000001a  0000000000000000  0000000000000000  00001fa0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 .text._ZN5QListI7QStringE4Node1tEv 0000000e  0000000000000000  0000000000000000  00001fba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 .text._ZN5QListI8variableE18detach_helper_growEii 000001d5  0000000000000000  0000000000000000  00001fc8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
261 .text._ZN8variableC2ERKS_ 0000005a  0000000000000000  0000000000000000  0000219e  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
262 .text._ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_ 0000005b  0000000000000000  0000000000000000  000021f8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
263 .text._ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_ 00000034  0000000000000000  0000000000000000  00002254  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
264 .text._Z5qSwapIPN9QListData4DataEEvRT_S4_ 00000026  0000000000000000  0000000000000000  00002288  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
265 .text._ZN5QListI8variableE13node_destructEPNS1_4NodeES3_ 0000004a  0000000000000000  0000000000000000  000022ae  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
266 .text._ZN5QListI7QStringE13detach_helperEv 00000027  0000000000000000  0000000000000000  000022f8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
267 .text._ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_ 000000d2  0000000000000000  0000000000000000  00002320  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
268 .text._ZSt4swapIPN9QListData4DataEEvRT_S4_ 00000033  0000000000000000  0000000000000000  000023f2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
269 .text._ZN5QListI7QStringE13detach_helperEi 000000d0  0000000000000000  0000000000000000  00002426  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
270 .debug_info   00013bb9  0000000000000000  0000000000000000  000024f6  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
271 .debug_abbrev 00000a76  0000000000000000  0000000000000000  000160af  2**0
                  CONTENTS, READONLY, DEBUGGING
272 .debug_aranges 000004a0  0000000000000000  0000000000000000  00016b25  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
273 .debug_ranges 000005e0  0000000000000000  0000000000000000  00016fc5  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
274 .debug_macro  00000a87  0000000000000000  0000000000000000  000175a5  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
275 .debug_macro  0000061c  0000000000000000  0000000000000000  0001802c  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
276 .debug_macro  00000022  0000000000000000  0000000000000000  00018648  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
277 .debug_macro  00000136  0000000000000000  0000000000000000  0001866a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
278 .debug_macro  00000010  0000000000000000  0000000000000000  000187a0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
279 .debug_macro  00000275  0000000000000000  0000000000000000  000187b0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
280 .debug_macro  0000016f  0000000000000000  0000000000000000  00018a25  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
281 .debug_macro  00000016  0000000000000000  0000000000000000  00018b94  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
282 .debug_macro  00000035  0000000000000000  0000000000000000  00018baa  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
283 .debug_macro  00000058  0000000000000000  0000000000000000  00018bdf  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
284 .debug_macro  000005b4  0000000000000000  0000000000000000  00018c37  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
285 .debug_macro  0000016d  0000000000000000  0000000000000000  000191eb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
286 .debug_macro  00000016  0000000000000000  0000000000000000  00019358  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
287 .debug_macro  0000009a  0000000000000000  0000000000000000  0001936e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
288 .debug_macro  00000016  0000000000000000  0000000000000000  00019408  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
289 .debug_macro  00000018  0000000000000000  0000000000000000  0001941e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
290 .debug_macro  00000032  0000000000000000  0000000000000000  00019436  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
291 .debug_macro  000000c0  0000000000000000  0000000000000000  00019468  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
292 .debug_macro  00000028  0000000000000000  0000000000000000  00019528  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
293 .debug_macro  00000012  0000000000000000  0000000000000000  00019550  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
294 .debug_macro  000000cf  0000000000000000  0000000000000000  00019562  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
295 .debug_macro  0000001c  0000000000000000  0000000000000000  00019631  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
296 .debug_macro  00000018  0000000000000000  0000000000000000  0001964d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
297 .debug_macro  0000006e  0000000000000000  0000000000000000  00019665  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
298 .debug_macro  00000082  0000000000000000  0000000000000000  000196d3  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
299 .debug_macro  00000012  0000000000000000  0000000000000000  00019755  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
300 .debug_macro  00000012  0000000000000000  0000000000000000  00019767  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
301 .debug_macro  00000016  0000000000000000  0000000000000000  00019779  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
302 .debug_macro  00000035  0000000000000000  0000000000000000  0001978f  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
303 .debug_macro  00000052  0000000000000000  0000000000000000  000197c4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
304 .debug_macro  0000004c  0000000000000000  0000000000000000  00019816  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
305 .debug_macro  0000001c  0000000000000000  0000000000000000  00019862  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
306 .debug_macro  00000028  0000000000000000  0000000000000000  0001987e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
307 .debug_macro  0000005e  0000000000000000  0000000000000000  000198a6  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
308 .debug_macro  000000e2  0000000000000000  0000000000000000  00019904  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
309 .debug_macro  00000010  0000000000000000  0000000000000000  000199e6  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
310 .debug_macro  0000004c  0000000000000000  0000000000000000  000199f6  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
311 .debug_macro  00000022  0000000000000000  0000000000000000  00019a42  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
312 .debug_macro  00000068  0000000000000000  0000000000000000  00019a64  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
313 .debug_macro  0000007f  0000000000000000  0000000000000000  00019acc  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
314 .debug_macro  0000003a  0000000000000000  0000000000000000  00019b4b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
315 .debug_macro  00000019  0000000000000000  0000000000000000  00019b85  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
316 .debug_macro  00000020  0000000000000000  0000000000000000  00019b9e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
317 .debug_macro  00000022  0000000000000000  0000000000000000  00019bbe  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
318 .debug_macro  00000010  0000000000000000  0000000000000000  00019be0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
319 .debug_macro  00000016  0000000000000000  0000000000000000  00019bf0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
320 .debug_macro  00000028  0000000000000000  0000000000000000  00019c06  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
321 .debug_macro  00000010  0000000000000000  0000000000000000  00019c2e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
322 .debug_macro  00000046  0000000000000000  0000000000000000  00019c3e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
323 .debug_macro  0000001c  0000000000000000  0000000000000000  00019c84  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
324 .debug_macro  00000020  0000000000000000  0000000000000000  00019ca0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
325 .debug_macro  0000005a  0000000000000000  0000000000000000  00019cc0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
326 .debug_macro  00000010  0000000000000000  0000000000000000  00019d1a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
327 .debug_macro  00000010  0000000000000000  0000000000000000  00019d2a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
328 .debug_macro  000000e4  0000000000000000  0000000000000000  00019d3a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
329 .debug_macro  0000025a  0000000000000000  0000000000000000  00019e1e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
330 .debug_macro  0000002d  0000000000000000  0000000000000000  0001a078  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
331 .debug_macro  00000016  0000000000000000  0000000000000000  0001a0a5  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
332 .debug_macro  00000050  0000000000000000  0000000000000000  0001a0bb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
333 .debug_macro  00000019  0000000000000000  0000000000000000  0001a10b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
334 .debug_macro  00000011  0000000000000000  0000000000000000  0001a124  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
335 .debug_macro  0000014b  0000000000000000  0000000000000000  0001a135  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
336 .debug_macro  0000001e  0000000000000000  0000000000000000  0001a280  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
337 .debug_macro  0000001c  0000000000000000  0000000000000000  0001a29e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
338 .debug_macro  00000024  0000000000000000  0000000000000000  0001a2ba  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
339 .debug_macro  00000016  0000000000000000  0000000000000000  0001a2de  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
340 .debug_macro  00000018  0000000000000000  0000000000000000  0001a2f4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
341 .debug_macro  00000019  0000000000000000  0000000000000000  0001a30c  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
342 .debug_macro  00000058  0000000000000000  0000000000000000  0001a325  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
343 .debug_macro  00000016  0000000000000000  0000000000000000  0001a37d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
344 .debug_macro  0000001c  0000000000000000  0000000000000000  0001a393  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
345 .debug_macro  00000016  0000000000000000  0000000000000000  0001a3af  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
346 .debug_macro  00000022  0000000000000000  0000000000000000  0001a3c5  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
347 .debug_macro  00000043  0000000000000000  0000000000000000  0001a3e7  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
348 .debug_macro  0000003c  0000000000000000  0000000000000000  0001a42a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
349 .debug_macro  00000173  0000000000000000  0000000000000000  0001a466  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
350 .debug_macro  00000012  0000000000000000  0000000000000000  0001a5d9  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
351 .debug_macro  00000010  0000000000000000  0000000000000000  0001a5eb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
352 .debug_macro  00000058  0000000000000000  0000000000000000  0001a5fb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
353 .debug_macro  000000b4  0000000000000000  0000000000000000  0001a653  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
354 .debug_macro  00000016  0000000000000000  0000000000000000  0001a707  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
355 .debug_macro  00000010  0000000000000000  0000000000000000  0001a71d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
356 .debug_macro  00000037  0000000000000000  0000000000000000  0001a72d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
357 .debug_macro  00000058  0000000000000000  0000000000000000  0001a764  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
358 .debug_macro  00000011  0000000000000000  0000000000000000  0001a7bc  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
359 .debug_macro  00000016  0000000000000000  0000000000000000  0001a7cd  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
360 .debug_macro  00000010  0000000000000000  0000000000000000  0001a7e3  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
361 .debug_macro  00000010  0000000000000000  0000000000000000  0001a7f3  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
362 .debug_macro  00000022  0000000000000000  0000000000000000  0001a803  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
363 .debug_macro  00000122  0000000000000000  0000000000000000  0001a825  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
364 .debug_macro  0000008e  0000000000000000  0000000000000000  0001a947  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
365 .debug_macro  00000016  0000000000000000  0000000000000000  0001a9d5  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
366 .debug_macro  00000058  0000000000000000  0000000000000000  0001a9eb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
367 .debug_macro  000000fa  0000000000000000  0000000000000000  0001aa43  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
368 .debug_macro  00000030  0000000000000000  0000000000000000  0001ab3d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
369 .debug_macro  000000c1  0000000000000000  0000000000000000  0001ab6d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
370 .debug_macro  0000004d  0000000000000000  0000000000000000  0001ac2e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
371 .debug_macro  00000010  0000000000000000  0000000000000000  0001ac7b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
372 .debug_macro  00000019  0000000000000000  0000000000000000  0001ac8b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
373 .debug_macro  00000020  0000000000000000  0000000000000000  0001aca4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
374 .debug_macro  000000fc  0000000000000000  0000000000000000  0001acc4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
375 .debug_macro  00000018  0000000000000000  0000000000000000  0001adc0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
376 .debug_macro  00000023  0000000000000000  0000000000000000  0001add8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
377 .debug_macro  00000010  0000000000000000  0000000000000000  0001adfb  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
378 .debug_macro  00000016  0000000000000000  0000000000000000  0001ae0b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
379 .debug_macro  00000076  0000000000000000  0000000000000000  0001ae21  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
380 .debug_macro  00000016  0000000000000000  0000000000000000  0001ae97  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
381 .debug_macro  00000025  0000000000000000  0000000000000000  0001aead  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
382 .debug_macro  000000de  0000000000000000  0000000000000000  0001aed2  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
383 .debug_macro  0000001c  0000000000000000  0000000000000000  0001afb0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
384 .debug_macro  00000058  0000000000000000  0000000000000000  0001afcc  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
385 .debug_macro  00000088  0000000000000000  0000000000000000  0001b024  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
386 .debug_macro  00000076  0000000000000000  0000000000000000  0001b0ac  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
387 .debug_macro  00000010  0000000000000000  0000000000000000  0001b122  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
388 .debug_macro  00000041  0000000000000000  0000000000000000  0001b132  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
389 .debug_macro  000000ee  0000000000000000  0000000000000000  0001b173  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
390 .debug_macro  00000010  0000000000000000  0000000000000000  0001b261  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
391 .debug_macro  000000e5  0000000000000000  0000000000000000  0001b271  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
392 .debug_macro  00000012  0000000000000000  0000000000000000  0001b356  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
393 .debug_macro  0000001f  0000000000000000  0000000000000000  0001b368  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
394 .debug_macro  00000016  0000000000000000  0000000000000000  0001b387  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
395 .debug_macro  00000010  0000000000000000  0000000000000000  0001b39d  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
396 .debug_line   000017e6  0000000000000000  0000000000000000  0001b3ad  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
397 .debug_str    0002a51b  0000000000000000  0000000000000000  0001cb93  2**0
                  CONTENTS, READONLY, DEBUGGING
398 .data.DW.ref.__gxx_personality_v0 00000008  0000000000000000  0000000000000000  000470b0  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
399 .comment      0000002e  0000000000000000  0000000000000000  000470b8  2**0
                  CONTENTS, READONLY
400 .note.GNU-stack 00000000  0000000000000000  0000000000000000  000470e6  2**0
                  CONTENTS, READONLY
401 .eh_frame     000009f8  0000000000000000  0000000000000000  000470e8  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Дизассемблирование раздела .text:

0000000000000000 <_ZN6moduleC1EP11QStringListS1_>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	callq  21 <_ZN6moduleC1EP11QStringListS1_+0x21>
  21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  25:	48 83 c0 08          	add    $0x8,%rax
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	callq  31 <_ZN6moduleC1EP11QStringListS1_+0x31>
  31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  35:	48 83 c0 10          	add    $0x10,%rax
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	callq  41 <_ZN6moduleC1EP11QStringListS1_+0x41>
  41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  45:	48 83 c0 18          	add    $0x18,%rax
  49:	48 89 c7             	mov    %rax,%rdi
  4c:	e8 00 00 00 00       	callq  51 <_ZN6moduleC1EP11QStringListS1_+0x51>
{
    this->code                  = *code;
  51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  55:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  59:	48 89 d6             	mov    %rdx,%rsi
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	e8 00 00 00 00       	callq  64 <_ZN6moduleC1EP11QStringListS1_+0x64>
    this->indexBase             = *indexBase;
  64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  68:	48 8d 50 18          	lea    0x18(%rax),%rdx
  6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  70:	48 89 c6             	mov    %rax,%rsi
  73:	48 89 d7             	mov    %rdx,%rdi
  76:	e8 00 00 00 00       	callq  7b <_ZN6moduleC1EP11QStringListS1_+0x7b>
}
  7b:	eb 4f                	jmp    cc <_ZN6moduleC1EP11QStringListS1_+0xcc>
  7d:	48 89 c3             	mov    %rax,%rbx
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
  80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  84:	48 83 c0 18          	add    $0x18,%rax
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	e8 00 00 00 00       	callq  90 <_ZN6moduleC1EP11QStringListS1_+0x90>
  90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  94:	48 83 c0 10          	add    $0x10,%rax
  98:	48 89 c7             	mov    %rax,%rdi
  9b:	e8 00 00 00 00       	callq  a0 <_ZN6moduleC1EP11QStringListS1_+0xa0>
  a0:	eb 03                	jmp    a5 <_ZN6moduleC1EP11QStringListS1_+0xa5>
  a2:	48 89 c3             	mov    %rax,%rbx
  a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a9:	48 83 c0 08          	add    $0x8,%rax
  ad:	48 89 c7             	mov    %rax,%rdi
  b0:	e8 00 00 00 00       	callq  b5 <_ZN6moduleC1EP11QStringListS1_+0xb5>
  b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b9:	48 89 c7             	mov    %rax,%rdi
  bc:	e8 00 00 00 00       	callq  c1 <_ZN6moduleC1EP11QStringListS1_+0xc1>
  c1:	48 89 d8             	mov    %rbx,%rax
  c4:	48 89 c7             	mov    %rax,%rdi
  c7:	e8 00 00 00 00       	callq  cc <_ZN6moduleC1EP11QStringListS1_+0xcc>
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
  cc:	48 83 c4 28          	add    $0x28,%rsp
  d0:	5b                   	pop    %rbx
  d1:	5d                   	pop    %rbp
  d2:	c3                   	retq   
  d3:	90                   	nop

00000000000000d4 <_ZN6module16prepareVariablesE11QStringList>:

void module::prepareVariables(QStringList indexes){
  d4:	55                   	push   %rbp
  d5:	48 89 e5             	mov    %rsp,%rbp
  d8:	53                   	push   %rbx
  d9:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
  e0:	48 89 bd b8 fe ff ff 	mov    %rdi,-0x148(%rbp)
  e7:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
  ee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  f5:	00 00 
  f7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  fb:	31 c0                	xor    %eax,%eax
    QStringList::iterator it;
  fd:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
 104:	48 89 c7             	mov    %rax,%rdi
 107:	e8 00 00 00 00       	callq  10c <_ZN6module16prepareVariablesE11QStringList+0x38>
    VarTypes VT;
 10c:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 113:	48 89 c7             	mov    %rax,%rdi
 116:	e8 00 00 00 00       	callq  11b <_ZN6module16prepareVariablesE11QStringList+0x47>
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
 11b:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
 122:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
 129:	48 89 d6             	mov    %rdx,%rsi
 12c:	48 89 c7             	mov    %rax,%rdi
 12f:	e8 00 00 00 00       	callq  134 <_ZN6module16prepareVariablesE11QStringList+0x60>
 134:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 13b:	48 8d 8d 10 ff ff ff 	lea    -0xf0(%rbp),%rcx
 142:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 149 <_ZN6module16prepareVariablesE11QStringList+0x75>
 149:	48 89 ce             	mov    %rcx,%rsi
 14c:	48 89 c7             	mov    %rax,%rdi
 14f:	e8 00 00 00 00       	callq  154 <_ZN6module16prepareVariablesE11QStringList+0x80>
 154:	48 8d b5 40 ff ff ff 	lea    -0xc0(%rbp),%rsi
 15b:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 162:	b9 00 00 00 00       	mov    $0x0,%ecx
 167:	ba 01 00 00 00       	mov    $0x1,%edx
 16c:	48 89 c7             	mov    %rax,%rdi
 16f:	e8 00 00 00 00       	callq  174 <_ZN6module16prepareVariablesE11QStringList+0xa0>
 174:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 17b:	48 89 c7             	mov    %rax,%rdi
 17e:	e8 00 00 00 00       	callq  183 <_ZN6module16prepareVariablesE11QStringList+0xaf>
 183:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
 18a:	48 89 c7             	mov    %rax,%rdi
 18d:	e8 00 00 00 00       	callq  192 <_ZN6module16prepareVariablesE11QStringList+0xbe>
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // имя : порт : номер
 192:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 199:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1a0 <_ZN6module16prepareVariablesE11QStringList+0xcc>
 1a0:	48 89 c7             	mov    %rax,%rdi
 1a3:	e8 00 00 00 00       	callq  1a8 <_ZN6module16prepareVariablesE11QStringList+0xd4>
 1a8:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
 1af:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 1b6:	b9 00 00 00 00       	mov    $0x0,%ecx
 1bb:	ba 01 00 00 00       	mov    $0x1,%edx
 1c0:	48 89 c7             	mov    %rax,%rdi
 1c3:	e8 00 00 00 00       	callq  1c8 <_ZN6module16prepareVariablesE11QStringList+0xf4>
 1c8:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 1cf:	48 89 c7             	mov    %rax,%rdi
 1d2:	e8 00 00 00 00       	callq  1d7 <_ZN6module16prepareVariablesE11QStringList+0x103>
    QRegExp testVarName("\\w+");
 1d7:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 1de:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1e5 <_ZN6module16prepareVariablesE11QStringList+0x111>
 1e5:	48 89 c7             	mov    %rax,%rdi
 1e8:	e8 00 00 00 00       	callq  1ed <_ZN6module16prepareVariablesE11QStringList+0x119>
 1ed:	48 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%rsi
 1f4:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 1fb:	b9 00 00 00 00       	mov    $0x0,%ecx
 200:	ba 01 00 00 00       	mov    $0x1,%edx
 205:	48 89 c7             	mov    %rax,%rdi
 208:	e8 00 00 00 00       	callq  20d <_ZN6module16prepareVariablesE11QStringList+0x139>
 20d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 214:	48 89 c7             	mov    %rax,%rdi
 217:	e8 00 00 00 00       	callq  21c <_ZN6module16prepareVariablesE11QStringList+0x148>

    for(it=this->code.begin(); it!=this->code.end(); ++it){
 21c:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
 223:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 227:	48 89 d6             	mov    %rdx,%rsi
 22a:	48 89 c7             	mov    %rax,%rdi
 22d:	e8 00 00 00 00       	callq  232 <_ZN6module16prepareVariablesE11QStringList+0x15e>
 232:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 236:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
 23d:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
 244:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 248:	48 89 d6             	mov    %rdx,%rsi
 24b:	48 89 c7             	mov    %rax,%rdi
 24e:	e8 00 00 00 00       	callq  253 <_ZN6module16prepareVariablesE11QStringList+0x17f>
 253:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
 257:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
 25e:	48 89 d6             	mov    %rdx,%rsi
 261:	48 89 c7             	mov    %rax,%rdi
 264:	e8 00 00 00 00       	callq  269 <_ZN6module16prepareVariablesE11QStringList+0x195>
 269:	84 c0                	test   %al,%al
 26b:	0f 84 63 03 00 00    	je     5d4 <_ZN6module16prepareVariablesE11QStringList+0x500>
        int test = testDefinition.indexIn(*it);
 271:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
 278:	48 89 c7             	mov    %rax,%rdi
 27b:	e8 00 00 00 00       	callq  280 <_ZN6module16prepareVariablesE11QStringList+0x1ac>
 280:	48 89 c6             	mov    %rax,%rsi
 283:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 28a:	b9 00 00 00 00       	mov    $0x0,%ecx
 28f:	ba 00 00 00 00       	mov    $0x0,%edx
 294:	48 89 c7             	mov    %rax,%rdi
 297:	e8 00 00 00 00       	callq  29c <_ZN6module16prepareVariablesE11QStringList+0x1c8>
 29c:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
        if(test >= 0){
 2a2:	83 bd cc fe ff ff 00 	cmpl   $0x0,-0x134(%rbp)
 2a9:	0f 88 11 03 00 00    	js     5c0 <_ZN6module16prepareVariablesE11QStringList+0x4ec>
            QString type = testDefinition.cap(1);
 2af:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 2b6:	48 8d 8d 00 ff ff ff 	lea    -0x100(%rbp),%rcx
 2bd:	ba 01 00 00 00       	mov    $0x1,%edx
 2c2:	48 89 ce             	mov    %rcx,%rsi
 2c5:	48 89 c7             	mov    %rax,%rdi
 2c8:	e8 00 00 00 00       	callq  2cd <_ZN6module16prepareVariablesE11QStringList+0x1f9>
            QString defs = testDefinition.cap(2);
 2cd:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 2d4:	48 8d 8d 00 ff ff ff 	lea    -0x100(%rbp),%rcx
 2db:	ba 02 00 00 00       	mov    $0x2,%edx
 2e0:	48 89 ce             	mov    %rcx,%rsi
 2e3:	48 89 c7             	mov    %rax,%rdi
 2e6:	e8 00 00 00 00       	callq  2eb <_ZN6module16prepareVariablesE11QStringList+0x217>

            QStringList listCommaSplitted = defs.split("\,");
 2eb:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 2f2:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 2f9 <_ZN6module16prepareVariablesE11QStringList+0x225>
 2f9:	48 89 c7             	mov    %rax,%rdi
 2fc:	e8 00 00 00 00       	callq  301 <_ZN6module16prepareVariablesE11QStringList+0x22d>
 301:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 308:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
 30f:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
 316:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 31c:	b9 00 00 00 00       	mov    $0x0,%ecx
 321:	48 89 c7             	mov    %rax,%rdi
 324:	e8 00 00 00 00       	callq  329 <_ZN6module16prepareVariablesE11QStringList+0x255>
 329:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 330:	48 89 c7             	mov    %rax,%rdi
 333:	e8 00 00 00 00       	callq  338 <_ZN6module16prepareVariablesE11QStringList+0x264>
            variable v;
 338:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 33c:	48 89 c7             	mov    %rax,%rdi
 33f:	e8 00 00 00 00       	callq  344 <_ZN6module16prepareVariablesE11QStringList+0x270>

            QStringList::iterator it;
 344:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 348:	48 89 c7             	mov    %rax,%rdi
 34b:	e8 00 00 00 00       	callq  350 <_ZN6module16prepareVariablesE11QStringList+0x27c>
            for(it=listCommaSplitted.begin(); it!=listCommaSplitted.end(); ++it){
 350:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 354:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
 35b:	48 89 d6             	mov    %rdx,%rsi
 35e:	48 89 c7             	mov    %rax,%rdi
 361:	e8 00 00 00 00       	callq  366 <_ZN6module16prepareVariablesE11QStringList+0x292>
 366:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 36a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 36e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 372:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
 379:	48 89 d6             	mov    %rdx,%rsi
 37c:	48 89 c7             	mov    %rax,%rdi
 37f:	e8 00 00 00 00       	callq  384 <_ZN6module16prepareVariablesE11QStringList+0x2b0>
 384:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
 388:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 38c:	48 89 d6             	mov    %rdx,%rsi
 38f:	48 89 c7             	mov    %rax,%rdi
 392:	e8 00 00 00 00       	callq  397 <_ZN6module16prepareVariablesE11QStringList+0x2c3>
 397:	84 c0                	test   %al,%al
 399:	0f 84 e8 01 00 00    	je     587 <_ZN6module16prepareVariablesE11QStringList+0x4b3>
                int indexRgPort     =  testRgPort.indexIn(*it);
 39f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 3a3:	48 89 c7             	mov    %rax,%rdi
 3a6:	e8 00 00 00 00       	callq  3ab <_ZN6module16prepareVariablesE11QStringList+0x2d7>
 3ab:	48 89 c6             	mov    %rax,%rsi
 3ae:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 3b5:	b9 00 00 00 00       	mov    $0x0,%ecx
 3ba:	ba 00 00 00 00       	mov    $0x0,%edx
 3bf:	48 89 c7             	mov    %rax,%rdi
 3c2:	e8 00 00 00 00       	callq  3c7 <_ZN6module16prepareVariablesE11QStringList+0x2f3>
 3c7:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
                int indexVarName    =  testVarName.indexIn(*it);
 3cd:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 3d1:	48 89 c7             	mov    %rax,%rdi
 3d4:	e8 00 00 00 00       	callq  3d9 <_ZN6module16prepareVariablesE11QStringList+0x305>
 3d9:	48 89 c6             	mov    %rax,%rsi
 3dc:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 3e3:	b9 00 00 00 00       	mov    $0x0,%ecx
 3e8:	ba 00 00 00 00       	mov    $0x0,%edx
 3ed:	48 89 c7             	mov    %rax,%rdi
 3f0:	e8 00 00 00 00       	callq  3f5 <_ZN6module16prepareVariablesE11QStringList+0x321>
 3f5:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
                int countRgPort     =  testRgPort.captureCount();
 3fb:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 402:	48 89 c7             	mov    %rax,%rdi
 405:	e8 00 00 00 00       	callq  40a <_ZN6module16prepareVariablesE11QStringList+0x336>
 40a:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
                int countVarName    =  testVarName.captureCount();
 410:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 417:	48 89 c7             	mov    %rax,%rdi
 41a:	e8 00 00 00 00       	callq  41f <_ZN6module16prepareVariablesE11QStringList+0x34b>
 41f:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)

                if(indexRgPort >= 0){
 425:	83 bd d0 fe ff ff 00 	cmpl   $0x0,-0x130(%rbp)
 42c:	0f 88 e8 00 00 00    	js     51a <_ZN6module16prepareVariablesE11QStringList+0x446>
                    v.name                  = testRgPort.cap(1);
 432:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 436:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 43d:	ba 01 00 00 00       	mov    $0x1,%edx
 442:	48 89 ce             	mov    %rcx,%rsi
 445:	48 89 c7             	mov    %rax,%rdi
 448:	e8 00 00 00 00       	callq  44d <_ZN6module16prepareVariablesE11QStringList+0x379>
 44d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 451:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
 455:	48 83 c2 10          	add    $0x10,%rdx
 459:	48 89 c6             	mov    %rax,%rsi
 45c:	48 89 d7             	mov    %rdx,%rdi
 45f:	e8 00 00 00 00       	callq  464 <_ZN6module16prepareVariablesE11QStringList+0x390>
 464:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 468:	48 89 c7             	mov    %rax,%rdi
 46b:	e8 00 00 00 00       	callq  470 <_ZN6module16prepareVariablesE11QStringList+0x39c>
                    QString assignment      = testRgPort.cap(2);
 470:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 474:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 47b:	ba 02 00 00 00       	mov    $0x2,%edx
 480:	48 89 ce             	mov    %rcx,%rsi
 483:	48 89 c7             	mov    %rax,%rdi
 486:	e8 00 00 00 00       	callq  48b <_ZN6module16prepareVariablesE11QStringList+0x3b7>
                    QString address         = testRgPort.cap(3);
 48b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 48f:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
 496:	ba 03 00 00 00       	mov    $0x3,%edx
 49b:	48 89 ce             	mov    %rcx,%rsi
 49e:	48 89 c7             	mov    %rax,%rdi
 4a1:	e8 00 00 00 00       	callq  4a6 <_ZN6module16prepareVariablesE11QStringList+0x3d2>
                    if(assignment=="port"){
 4a6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 4aa:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 4b1 <_ZN6module16prepareVariablesE11QStringList+0x3dd>
 4b1:	48 89 c7             	mov    %rax,%rdi
 4b4:	e8 00 00 00 00       	callq  4b9 <_ZN6module16prepareVariablesE11QStringList+0x3e5>
 4b9:	84 c0                	test   %al,%al
 4bb:	74 28                	je     4e5 <_ZN6module16prepareVariablesE11QStringList+0x411>
                        bool ok;
                        v.assign            = 80;
 4bd:	c6 45 d1 50          	movb   $0x50,-0x2f(%rbp)
                        v.VP.indexRP        = address.toInt(&ok, 10);
 4c1:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
 4c5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 4c9:	ba 0a 00 00 00       	mov    $0xa,%edx
 4ce:	48 89 ce             	mov    %rcx,%rsi
 4d1:	48 89 c7             	mov    %rax,%rdi
 4d4:	e8 00 00 00 00       	callq  4d9 <_ZN6module16prepareVariablesE11QStringList+0x405>
 4d9:	66 89 45 d2          	mov    %ax,-0x2e(%rbp)
                        v.VP.eventCHANGE    = 0x00010000;
 4dd:	66 c7 45 d8 00 00    	movw   $0x0,-0x28(%rbp)
 4e3:	eb 1b                	jmp    500 <_ZN6module16prepareVariablesE11QStringList+0x42c>
                    }else if(assignment=="rg"){
 4e5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 4e9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 4f0 <_ZN6module16prepareVariablesE11QStringList+0x41c>
 4f0:	48 89 c7             	mov    %rax,%rdi
 4f3:	e8 00 00 00 00       	callq  4f8 <_ZN6module16prepareVariablesE11QStringList+0x424>
 4f8:	84 c0                	test   %al,%al
 4fa:	74 04                	je     500 <_ZN6module16prepareVariablesE11QStringList+0x42c>
                        v.assign = 40;
 4fc:	c6 45 d1 28          	movb   $0x28,-0x2f(%rbp)
                int countVarName    =  testVarName.captureCount();

                if(indexRgPort >= 0){
                    v.name                  = testRgPort.cap(1);
                    QString assignment      = testRgPort.cap(2);
                    QString address         = testRgPort.cap(3);
 500:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 504:	48 89 c7             	mov    %rax,%rdi
 507:	e8 00 00 00 00       	callq  50c <_ZN6module16prepareVariablesE11QStringList+0x438>
                int countRgPort     =  testRgPort.captureCount();
                int countVarName    =  testVarName.captureCount();

                if(indexRgPort >= 0){
                    v.name                  = testRgPort.cap(1);
                    QString assignment      = testRgPort.cap(2);
 50c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 510:	48 89 c7             	mov    %rax,%rdi
 513:	e8 00 00 00 00       	callq  518 <_ZN6module16prepareVariablesE11QStringList+0x444>
 518:	eb 42                	jmp    55c <_ZN6module16prepareVariablesE11QStringList+0x488>
                        v.assign = 40;
                    }else{
                        // error. undefined assignment.
                    }
                }else{
                    v.assign    = 4;
 51a:	c6 45 d1 04          	movb   $0x4,-0x2f(%rbp)
                    v.name      = testVarName.cap(0);
 51e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 522:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
 529:	ba 00 00 00 00       	mov    $0x0,%edx
 52e:	48 89 ce             	mov    %rcx,%rsi
 531:	48 89 c7             	mov    %rax,%rdi
 534:	e8 00 00 00 00       	callq  539 <_ZN6module16prepareVariablesE11QStringList+0x465>
 539:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 53d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
 541:	48 83 c2 10          	add    $0x10,%rdx
 545:	48 89 c6             	mov    %rax,%rsi
 548:	48 89 d7             	mov    %rdx,%rdi
 54b:	e8 00 00 00 00       	callq  550 <_ZN6module16prepareVariablesE11QStringList+0x47c>
 550:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 554:	48 89 c7             	mov    %rax,%rdi
 557:	e8 00 00 00 00       	callq  55c <_ZN6module16prepareVariablesE11QStringList+0x488>
                }

                this->variables.append(v);
 55c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
 563:	48 8d 50 10          	lea    0x10(%rax),%rdx
 567:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 56b:	48 89 c6             	mov    %rax,%rsi
 56e:	48 89 d7             	mov    %rdx,%rdi
 571:	e8 00 00 00 00       	callq  576 <_ZN6module16prepareVariablesE11QStringList+0x4a2>

            QStringList listCommaSplitted = defs.split("\,");
            variable v;

            QStringList::iterator it;
            for(it=listCommaSplitted.begin(); it!=listCommaSplitted.end(); ++it){
 576:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 57a:	48 89 c7             	mov    %rax,%rdi
 57d:	e8 00 00 00 00       	callq  582 <_ZN6module16prepareVariablesE11QStringList+0x4ae>
 582:	e9 e7 fd ff ff       	jmpq   36e <_ZN6module16prepareVariablesE11QStringList+0x29a>
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);

            QStringList listCommaSplitted = defs.split("\,");
            variable v;
 587:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 58b:	48 89 c7             	mov    %rax,%rdi
 58e:	e8 00 00 00 00       	callq  593 <_ZN6module16prepareVariablesE11QStringList+0x4bf>
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);

            QStringList listCommaSplitted = defs.split("\,");
 593:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 59a:	48 89 c7             	mov    %rax,%rdi
 59d:	e8 00 00 00 00       	callq  5a2 <_ZN6module16prepareVariablesE11QStringList+0x4ce>

    for(it=this->code.begin(); it!=this->code.end(); ++it){
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);
 5a2:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 5a9:	48 89 c7             	mov    %rax,%rdi
 5ac:	e8 00 00 00 00       	callq  5b1 <_ZN6module16prepareVariablesE11QStringList+0x4dd>
    QRegExp testVarName("\\w+");

    for(it=this->code.begin(); it!=this->code.end(); ++it){
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
 5b1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 5b8:	48 89 c7             	mov    %rax,%rdi
 5bb:	e8 00 00 00 00       	callq  5c0 <_ZN6module16prepareVariablesE11QStringList+0x4ec>
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // имя : порт : номер
    QRegExp testVarName("\\w+");

    for(it=this->code.begin(); it!=this->code.end(); ++it){
 5c0:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
 5c7:	48 89 c7             	mov    %rax,%rdi
 5ca:	e8 00 00 00 00       	callq  5cf <_ZN6module16prepareVariablesE11QStringList+0x4fb>
 5cf:	e9 69 fc ff ff       	jmpq   23d <_ZN6module16prepareVariablesE11QStringList+0x169>
void module::prepareVariables(QStringList indexes){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // имя : порт : номер
    QRegExp testVarName("\\w+");
 5d4:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 5db:	48 89 c7             	mov    %rax,%rdi
 5de:	e8 00 00 00 00       	callq  5e3 <_ZN6module16prepareVariablesE11QStringList+0x50f>

void module::prepareVariables(QStringList indexes){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // имя : порт : номер
 5e3:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 5ea:	48 89 c7             	mov    %rax,%rdi
 5ed:	e8 00 00 00 00       	callq  5f2 <_ZN6module16prepareVariablesE11QStringList+0x51e>
}

void module::prepareVariables(QStringList indexes){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
 5f2:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 5f9:	48 89 c7             	mov    %rax,%rdi
 5fc:	e8 00 00 00 00       	callq  601 <_ZN6module16prepareVariablesE11QStringList+0x52d>
    this->indexBase             = *indexBase;
}

void module::prepareVariables(QStringList indexes){
    QStringList::iterator it;
    VarTypes VT;
 601:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 608:	48 89 c7             	mov    %rax,%rdi
 60b:	e8 00 00 00 00       	callq  610 <_ZN6module16prepareVariablesE11QStringList+0x53c>
                this->variables.append(v);
            }

        }
    }
}
 610:	90                   	nop
 611:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 615:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 61c:	00 00 
 61e:	0f 84 d1 01 00 00    	je     7f5 <_ZN6module16prepareVariablesE11QStringList+0x721>
 624:	e9 c7 01 00 00       	jmpq   7f0 <_ZN6module16prepareVariablesE11QStringList+0x71c>
 629:	48 89 c3             	mov    %rax,%rbx
 62c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 633:	48 89 c7             	mov    %rax,%rdi
 636:	e8 00 00 00 00       	callq  63b <_ZN6module16prepareVariablesE11QStringList+0x567>
 63b:	eb 17                	jmp    654 <_ZN6module16prepareVariablesE11QStringList+0x580>
 63d:	48 89 c3             	mov    %rax,%rbx
 640:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 647:	48 89 c7             	mov    %rax,%rdi
 64a:	e8 00 00 00 00       	callq  64f <_ZN6module16prepareVariablesE11QStringList+0x57b>
 64f:	eb 03                	jmp    654 <_ZN6module16prepareVariablesE11QStringList+0x580>
 651:	48 89 c3             	mov    %rax,%rbx
 654:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
 65b:	48 89 c7             	mov    %rax,%rdi
 65e:	e8 00 00 00 00       	callq  663 <_ZN6module16prepareVariablesE11QStringList+0x58f>
 663:	e9 6e 01 00 00       	jmpq   7d6 <_ZN6module16prepareVariablesE11QStringList+0x702>
 668:	48 89 c3             	mov    %rax,%rbx
 66b:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 672:	48 89 c7             	mov    %rax,%rdi
 675:	e8 00 00 00 00       	callq  67a <_ZN6module16prepareVariablesE11QStringList+0x5a6>
 67a:	e9 57 01 00 00       	jmpq   7d6 <_ZN6module16prepareVariablesE11QStringList+0x702>
 67f:	48 89 c3             	mov    %rax,%rbx
 682:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 689:	48 89 c7             	mov    %rax,%rdi
 68c:	e8 00 00 00 00       	callq  691 <_ZN6module16prepareVariablesE11QStringList+0x5bd>
 691:	e9 2c 01 00 00       	jmpq   7c2 <_ZN6module16prepareVariablesE11QStringList+0x6ee>
 696:	48 89 c3             	mov    %rax,%rbx
 699:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 6a0:	48 89 c7             	mov    %rax,%rdi
 6a3:	e8 00 00 00 00       	callq  6a8 <_ZN6module16prepareVariablesE11QStringList+0x5d4>
 6a8:	e9 15 01 00 00       	jmpq   7c2 <_ZN6module16prepareVariablesE11QStringList+0x6ee>
 6ad:	48 89 c3             	mov    %rax,%rbx
 6b0:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 6b7:	48 89 c7             	mov    %rax,%rdi
 6ba:	e8 00 00 00 00       	callq  6bf <_ZN6module16prepareVariablesE11QStringList+0x5eb>
 6bf:	e9 ea 00 00 00       	jmpq   7ae <_ZN6module16prepareVariablesE11QStringList+0x6da>
 6c4:	48 89 c3             	mov    %rax,%rbx
 6c7:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 6ce:	48 89 c7             	mov    %rax,%rdi
 6d1:	e8 00 00 00 00       	callq  6d6 <_ZN6module16prepareVariablesE11QStringList+0x602>
 6d6:	e9 d3 00 00 00       	jmpq   7ae <_ZN6module16prepareVariablesE11QStringList+0x6da>
 6db:	48 89 c3             	mov    %rax,%rbx
 6de:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 6e5:	48 89 c7             	mov    %rax,%rdi
 6e8:	e8 00 00 00 00       	callq  6ed <_ZN6module16prepareVariablesE11QStringList+0x619>
 6ed:	e9 80 00 00 00       	jmpq   772 <_ZN6module16prepareVariablesE11QStringList+0x69e>
 6f2:	48 89 c3             	mov    %rax,%rbx
 6f5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 6fc:	48 89 c7             	mov    %rax,%rdi
 6ff:	e8 00 00 00 00       	callq  704 <_ZN6module16prepareVariablesE11QStringList+0x630>
 704:	eb 6c                	jmp    772 <_ZN6module16prepareVariablesE11QStringList+0x69e>
 706:	48 89 c3             	mov    %rax,%rbx
                int indexVarName    =  testVarName.indexIn(*it);
                int countRgPort     =  testRgPort.captureCount();
                int countVarName    =  testVarName.captureCount();

                if(indexRgPort >= 0){
                    v.name                  = testRgPort.cap(1);
 709:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 70d:	48 89 c7             	mov    %rax,%rdi
 710:	e8 00 00 00 00       	callq  715 <_ZN6module16prepareVariablesE11QStringList+0x641>
 715:	eb 36                	jmp    74d <_ZN6module16prepareVariablesE11QStringList+0x679>
 717:	48 89 c3             	mov    %rax,%rbx
                    QString assignment      = testRgPort.cap(2);
                    QString address         = testRgPort.cap(3);
 71a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 71e:	48 89 c7             	mov    %rax,%rdi
 721:	e8 00 00 00 00       	callq  726 <_ZN6module16prepareVariablesE11QStringList+0x652>
 726:	eb 03                	jmp    72b <_ZN6module16prepareVariablesE11QStringList+0x657>
 728:	48 89 c3             	mov    %rax,%rbx
                int countRgPort     =  testRgPort.captureCount();
                int countVarName    =  testVarName.captureCount();

                if(indexRgPort >= 0){
                    v.name                  = testRgPort.cap(1);
                    QString assignment      = testRgPort.cap(2);
 72b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 72f:	48 89 c7             	mov    %rax,%rdi
 732:	e8 00 00 00 00       	callq  737 <_ZN6module16prepareVariablesE11QStringList+0x663>
 737:	eb 14                	jmp    74d <_ZN6module16prepareVariablesE11QStringList+0x679>
 739:	48 89 c3             	mov    %rax,%rbx
                    }else{
                        // error. undefined assignment.
                    }
                }else{
                    v.assign    = 4;
                    v.name      = testVarName.cap(0);
 73c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 740:	48 89 c7             	mov    %rax,%rdi
 743:	e8 00 00 00 00       	callq  748 <_ZN6module16prepareVariablesE11QStringList+0x674>
 748:	eb 03                	jmp    74d <_ZN6module16prepareVariablesE11QStringList+0x679>
 74a:	48 89 c3             	mov    %rax,%rbx
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);

            QStringList listCommaSplitted = defs.split("\,");
            variable v;
 74d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 751:	48 89 c7             	mov    %rax,%rdi
 754:	e8 00 00 00 00       	callq  759 <_ZN6module16prepareVariablesE11QStringList+0x685>
 759:	eb 03                	jmp    75e <_ZN6module16prepareVariablesE11QStringList+0x68a>
 75b:	48 89 c3             	mov    %rax,%rbx
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);

            QStringList listCommaSplitted = defs.split("\,");
 75e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
 765:	48 89 c7             	mov    %rax,%rdi
 768:	e8 00 00 00 00       	callq  76d <_ZN6module16prepareVariablesE11QStringList+0x699>
 76d:	eb 03                	jmp    772 <_ZN6module16prepareVariablesE11QStringList+0x69e>
 76f:	48 89 c3             	mov    %rax,%rbx

    for(it=this->code.begin(); it!=this->code.end(); ++it){
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
            QString defs = testDefinition.cap(2);
 772:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 779:	48 89 c7             	mov    %rax,%rdi
 77c:	e8 00 00 00 00       	callq  781 <_ZN6module16prepareVariablesE11QStringList+0x6ad>
 781:	eb 03                	jmp    786 <_ZN6module16prepareVariablesE11QStringList+0x6b2>
 783:	48 89 c3             	mov    %rax,%rbx
    QRegExp testVarName("\\w+");

    for(it=this->code.begin(); it!=this->code.end(); ++it){
        int test = testDefinition.indexIn(*it);
        if(test >= 0){
            QString type = testDefinition.cap(1);
 786:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 78d:	48 89 c7             	mov    %rax,%rdi
 790:	e8 00 00 00 00       	callq  795 <_ZN6module16prepareVariablesE11QStringList+0x6c1>
 795:	eb 03                	jmp    79a <_ZN6module16prepareVariablesE11QStringList+0x6c6>
 797:	48 89 c3             	mov    %rax,%rbx
void module::prepareVariables(QStringList indexes){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // имя : порт : номер
    QRegExp testVarName("\\w+");
 79a:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
 7a1:	48 89 c7             	mov    %rax,%rdi
 7a4:	e8 00 00 00 00       	callq  7a9 <_ZN6module16prepareVariablesE11QStringList+0x6d5>
 7a9:	eb 03                	jmp    7ae <_ZN6module16prepareVariablesE11QStringList+0x6da>
 7ab:	48 89 c3             	mov    %rax,%rbx

void module::prepareVariables(QStringList indexes){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // имя : порт : номер
 7ae:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
 7b5:	48 89 c7             	mov    %rax,%rdi
 7b8:	e8 00 00 00 00       	callq  7bd <_ZN6module16prepareVariablesE11QStringList+0x6e9>
 7bd:	eb 03                	jmp    7c2 <_ZN6module16prepareVariablesE11QStringList+0x6ee>
 7bf:	48 89 c3             	mov    %rax,%rbx
}

void module::prepareVariables(QStringList indexes){
    QStringList::iterator it;
    VarTypes VT;
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
 7c2:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
 7c9:	48 89 c7             	mov    %rax,%rdi
 7cc:	e8 00 00 00 00       	callq  7d1 <_ZN6module16prepareVariablesE11QStringList+0x6fd>
 7d1:	eb 03                	jmp    7d6 <_ZN6module16prepareVariablesE11QStringList+0x702>
 7d3:	48 89 c3             	mov    %rax,%rbx
    this->indexBase             = *indexBase;
}

void module::prepareVariables(QStringList indexes){
    QStringList::iterator it;
    VarTypes VT;
 7d6:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 7dd:	48 89 c7             	mov    %rax,%rdi
 7e0:	e8 00 00 00 00       	callq  7e5 <_ZN6module16prepareVariablesE11QStringList+0x711>
 7e5:	48 89 d8             	mov    %rbx,%rax
 7e8:	48 89 c7             	mov    %rax,%rdi
 7eb:	e8 00 00 00 00       	callq  7f0 <_ZN6module16prepareVariablesE11QStringList+0x71c>
                this->variables.append(v);
            }

        }
    }
}
 7f0:	e8 00 00 00 00       	callq  7f5 <_ZN6module16prepareVariablesE11QStringList+0x721>
 7f5:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
 7fc:	5b                   	pop    %rbx
 7fd:	5d                   	pop    %rbp
 7fe:	c3                   	retq   
 7ff:	90                   	nop

0000000000000800 <_ZN6module7compileEv>:

void module::compile(){
 800:	55                   	push   %rbp
 801:	48 89 e5             	mov    %rsp,%rbp
 804:	53                   	push   %rbx
 805:	48 83 ec 38          	sub    $0x38,%rsp
 809:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 80d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 814:	00 00 
 816:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 81a:	31 c0                	xor    %eax,%eax
    this->compiled.clear();
 81c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 820:	48 83 c0 08          	add    $0x8,%rax
 824:	48 89 c7             	mov    %rax,%rdi
 827:	e8 00 00 00 00       	callq  82c <_ZN6module7compileEv+0x2c>
    QByteArray *R = &this->compiled;
 82c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 830:	48 83 c0 08          	add    $0x8,%rax
 834:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    prepareVariables(this->indexBase);
 838:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 83c:	48 8d 50 18          	lea    0x18(%rax),%rdx
 840:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 844:	48 89 d6             	mov    %rdx,%rsi
 847:	48 89 c7             	mov    %rax,%rdi
 84a:	e8 00 00 00 00       	callq  84f <_ZN6module7compileEv+0x4f>
 84f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
 853:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 857:	48 89 d6             	mov    %rdx,%rsi
 85a:	48 89 c7             	mov    %rax,%rdi
 85d:	e8 00 00 00 00       	callq  862 <_ZN6module7compileEv+0x62>
 862:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 866:	48 89 c7             	mov    %rax,%rdi
 869:	e8 00 00 00 00       	callq  86e <_ZN6module7compileEv+0x6e>
    R->append("\n\n");
 86e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 872:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 879 <_ZN6module7compileEv+0x79>
 879:	48 89 c7             	mov    %rax,%rdi
 87c:	e8 00 00 00 00       	callq  881 <_ZN6module7compileEv+0x81>
}
 881:	90                   	nop
 882:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 886:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 88d:	00 00 
 88f:	74 21                	je     8b2 <_ZN6module7compileEv+0xb2>
 891:	eb 1a                	jmp    8ad <_ZN6module7compileEv+0xad>
 893:	48 89 c3             	mov    %rax,%rbx
}

void module::compile(){
    this->compiled.clear();
    QByteArray *R = &this->compiled;
    prepareVariables(this->indexBase);
 896:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 89a:	48 89 c7             	mov    %rax,%rdi
 89d:	e8 00 00 00 00       	callq  8a2 <_ZN6module7compileEv+0xa2>
 8a2:	48 89 d8             	mov    %rbx,%rax
 8a5:	48 89 c7             	mov    %rax,%rdi
 8a8:	e8 00 00 00 00       	callq  8ad <_ZN6module7compileEv+0xad>
    R->append("\n\n");
}
 8ad:	e8 00 00 00 00       	callq  8b2 <_ZN6module7compileEv+0xb2>
 8b2:	48 83 c4 38          	add    $0x38,%rsp
 8b6:	5b                   	pop    %rbx
 8b7:	5d                   	pop    %rbp
 8b8:	c3                   	retq   

Дизассемблирование раздела .text._ZnwmPv:

0000000000000000 <_ZnwmPv>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  10:	5d                   	pop    %rbp
  11:	c3                   	retq   

Дизассемблирование раздела .text._ZdlPvS_:

0000000000000000 <_ZdlPvS_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	retq   

Дизассемблирование раздела .text._Z7qt_noopv:

0000000000000000 <_Z7qt_noopv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	90                   	nop
   5:	5d                   	pop    %rbp
   6:	c3                   	retq   

Дизассемблирование раздела .text._ZN9QtPrivate8RefCount3refEv:

0000000000000000 <_ZN9QtPrivate8RefCount3refEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN9QtPrivate8RefCount3refEv+0x18>
  18:	89 45 fc             	mov    %eax,-0x4(%rbp)
  1b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  1f:	75 07                	jne    28 <_ZN9QtPrivate8RefCount3refEv+0x28>
  21:	b8 00 00 00 00       	mov    $0x0,%eax
  26:	eb 17                	jmp    3f <_ZN9QtPrivate8RefCount3refEv+0x3f>
  28:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  2c:	74 0c                	je     3a <_ZN9QtPrivate8RefCount3refEv+0x3a>
  2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN9QtPrivate8RefCount3refEv+0x3a>
  3a:	b8 01 00 00 00       	mov    $0x1,%eax
  3f:	c9                   	leaveq 
  40:	c3                   	retq   

Дизассемблирование раздела .text._ZN9QtPrivate8RefCount5derefEv:

0000000000000000 <_ZN9QtPrivate8RefCount5derefEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN9QtPrivate8RefCount5derefEv+0x18>
  18:	89 45 fc             	mov    %eax,-0x4(%rbp)
  1b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  1f:	75 07                	jne    28 <_ZN9QtPrivate8RefCount5derefEv+0x28>
  21:	b8 00 00 00 00       	mov    $0x0,%eax
  26:	eb 19                	jmp    41 <_ZN9QtPrivate8RefCount5derefEv+0x41>
  28:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  2c:	75 07                	jne    35 <_ZN9QtPrivate8RefCount5derefEv+0x35>
  2e:	b8 01 00 00 00       	mov    $0x1,%eax
  33:	eb 0c                	jmp    41 <_ZN9QtPrivate8RefCount5derefEv+0x41>
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	callq  41 <_ZN9QtPrivate8RefCount5derefEv+0x41>
  41:	c9                   	leaveq 
  42:	c3                   	retq   

Дизассемблирование раздела .text._ZNK9QtPrivate8RefCount8isSharedEv:

0000000000000000 <_ZNK9QtPrivate8RefCount8isSharedEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZNK9QtPrivate8RefCount8isSharedEv+0x18>
  18:	89 45 fc             	mov    %eax,-0x4(%rbp)
  1b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  1f:	74 0d                	je     2e <_ZNK9QtPrivate8RefCount8isSharedEv+0x2e>
  21:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  25:	74 07                	je     2e <_ZNK9QtPrivate8RefCount8isSharedEv+0x2e>
  27:	b8 01 00 00 00       	mov    $0x1,%eax
  2c:	eb 05                	jmp    33 <_ZNK9QtPrivate8RefCount8isSharedEv+0x33>
  2e:	b8 00 00 00 00       	mov    $0x0,%eax
  33:	c9                   	leaveq 
  34:	c3                   	retq   

Дизассемблирование раздела .text._ZN10QArrayData4dataEv:

0000000000000000 <_ZN10QArrayData4dataEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 04             	mov    0x4(%rax),%eax
  13:	85 c0                	test   %eax,%eax
  15:	74 33                	je     4a <_ZN10QArrayData4dataEv+0x4a>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 8b 40 10          	mov    0x10(%rax),%rax
  1f:	48 85 c0             	test   %rax,%rax
  22:	78 26                	js     4a <_ZN10QArrayData4dataEv+0x4a>
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 8b 40 10          	mov    0x10(%rax),%rax
  2c:	48 83 f8 18          	cmp    $0x18,%rax
  30:	73 18                	jae    4a <_ZN10QArrayData4dataEv+0x4a>
  32:	ba 36 00 00 00       	mov    $0x36,%edx
  37:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 3e <_ZN10QArrayData4dataEv+0x3e>
  3e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 45 <_ZN10QArrayData4dataEv+0x45>
  45:	e8 00 00 00 00       	callq  4a <_ZN10QArrayData4dataEv+0x4a>
  4a:	e8 00 00 00 00       	callq  4f <_ZN10QArrayData4dataEv+0x4f>
  4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
{
    this->code                  = *code;
  53:	48 8b 40 10          	mov    0x10(%rax),%rax
  57:	48 89 c2             	mov    %rax,%rdx
  5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5e:	48 01 d0             	add    %rdx,%rax
  61:	c9                   	leaveq 
  62:	c3                   	retq   

Дизассемблирование раздела .text._ZN10QArrayData10sharedNullEv:

0000000000000000 <_ZN10QArrayData10sharedNullEv>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <_ZN10QArrayData10sharedNullEv+0xb>
   b:	5d                   	pop    %rbp
   c:	c3                   	retq   

Дизассемблирование раздела .text._ZN10QByteArrayC2Ev:

0000000000000000 <_ZN10QByteArrayC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	e8 00 00 00 00       	callq  11 <_ZN10QByteArrayC1Ev+0x11>
  11:	48 89 c2             	mov    %rax,%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 10             	mov    %rdx,(%rax)
  1b:	90                   	nop
  1c:	c9                   	leaveq 
  1d:	c3                   	retq   

Дизассемблирование раздела .text._ZN10QByteArrayD2Ev:

0000000000000000 <_ZN10QByteArrayD1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZN10QByteArrayD1Ev+0x1b>
  1b:	83 f0 01             	xor    $0x1,%eax
  1e:	84 c0                	test   %al,%al
  20:	74 0f                	je     31 <_ZN10QByteArrayD1Ev+0x31>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	48 8b 00             	mov    (%rax),%rax
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	callq  31 <_ZN10QByteArrayD1Ev+0x31>
  31:	90                   	nop
  32:	c9                   	leaveq 
  33:	c3                   	retq   

Дизассемблирование раздела .text._ZNK7QString4sizeEv:

0000000000000000 <_ZNK7QString4sizeEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	8b 40 04             	mov    0x4(%rax),%eax
  12:	5d                   	pop    %rbp
  13:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QStringpLERKS_:

0000000000000000 <_ZN7QStringpLERKS_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 d6             	mov    %rdx,%rsi
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_ZN7QStringpLERKS_+0x23>
  23:	c9                   	leaveq 
  24:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QString8fromUtf8EPKci:

0000000000000000 <_ZN7QString8fromUtf8EPKci>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  10:	89 55 dc             	mov    %edx,-0x24(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  27:	74 14                	je     3d <_ZN7QString8fromUtf8EPKci+0x3d>
  29:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
  2d:	75 0e                	jne    3d <_ZN7QString8fromUtf8EPKci+0x3d>
  2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	callq  3b <_ZN7QString8fromUtf8EPKci+0x3b>
  3b:	eb 03                	jmp    40 <_ZN7QString8fromUtf8EPKci+0x40>
  3d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  44:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  48:	89 c2                	mov    %eax,%edx
  4a:	48 89 cf             	mov    %rcx,%rdi
  4d:	e8 00 00 00 00       	callq  52 <_ZN7QString8fromUtf8EPKci+0x52>
{
    this->code                  = *code;
  52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  56:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  5a:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  61:	00 00 
  63:	74 05                	je     6a <_ZN7QString8fromUtf8EPKci+0x6a>
    this->indexBase             = *indexBase;
  65:	e8 00 00 00 00       	callq  6a <_ZN7QString8fromUtf8EPKci+0x6a>
  6a:	c9                   	leaveq 
  6b:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QStringC2EPKc:

0000000000000000 <_ZN7QStringC1EPKc>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  15:	74 10                	je     27 <_ZN7QStringC1EPKc+0x27>
  17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_ZN7QStringC1EPKc+0x23>
  23:	89 c2                	mov    %eax,%edx
  25:	eb 05                	jmp    2c <_ZN7QStringC1EPKc+0x2c>
  27:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  30:	89 d6                	mov    %edx,%esi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN7QStringC1EPKc+0x3a>
  3a:	48 89 c2             	mov    %rax,%rdx
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 10             	mov    %rdx,(%rax)
  44:	90                   	nop
  45:	c9                   	leaveq 
  46:	c3                   	retq   

Дизассемблирование раздела .text._ZNK7QString9constDataEv:

0000000000000000 <_ZNK7QString9constDataEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZNK7QString9constDataEv+0x1b>
  1b:	c9                   	leaveq 
  1c:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QStringC2ERKS_:

0000000000000000 <_ZN7QStringC1ERKS_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 8b 10             	mov    (%rax),%rdx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  22:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  26:	75 18                	jne    40 <_ZN7QStringC1ERKS_+0x40>
  28:	ba 6e 03 00 00       	mov    $0x36e,%edx
  2d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 34 <_ZN7QStringC1ERKS_+0x34>
  34:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 3b <_ZN7QStringC1ERKS_+0x3b>
  3b:	e8 00 00 00 00       	callq  40 <_ZN7QStringC1ERKS_+0x40>
  40:	e8 00 00 00 00       	callq  45 <_ZN7QStringC1ERKS_+0x45>
  45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  49:	48 8b 00             	mov    (%rax),%rax
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	callq  54 <_ZN7QStringC1ERKS_+0x54>
{
    this->code                  = *code;
  54:	90                   	nop
  55:	c9                   	leaveq 
  56:	c3                   	retq   

Дизассемблирование раздела .text._ZN7QStringD2Ev:

0000000000000000 <_ZN7QStringD1Ev>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZN7QStringD1Ev+0x1b>
  1b:	83 f0 01             	xor    $0x1,%eax
  1e:	84 c0                	test   %al,%al
  20:	74 0f                	je     31 <_ZN7QStringD1Ev+0x31>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	48 8b 00             	mov    (%rax),%rax
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	callq  31 <_ZN7QStringD1Ev+0x31>
  31:	90                   	nop
  32:	c9                   	leaveq 
  33:	c3                   	retq   

Дизассемблирование раздела .text._ZNK7QStringeqEPKc:

0000000000000000 <_ZNK7QStringeqEPKc>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 18          	sub    $0x18,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  15:	48 89 c7             	mov    %rax,%rdi
  18:	e8 00 00 00 00       	callq  1d <_ZNK7QStringeqEPKc+0x1d>
  1d:	89 c3                	mov    %eax,%ebx
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	callq  2b <_ZNK7QStringeqEPKc+0x2b>
  2b:	48 89 c7             	mov    %rax,%rdi
  2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  32:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  38:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  3d:	48 89 c2             	mov    %rax,%rdx
  40:	89 de                	mov    %ebx,%esi
  42:	e8 00 00 00 00       	callq  47 <_ZNK7QStringeqEPKc+0x47>
  47:	85 c0                	test   %eax,%eax
  49:	0f 94 c0             	sete   %al
  4c:	48 83 c4 18          	add    $0x18,%rsp
  50:	5b                   	pop    %rbx
{
    this->code                  = *code;
  51:	5d                   	pop    %rbp
  52:	c3                   	retq   

Дизассемблирование раздела .text._ZplRK7QStringPKc:

0000000000000000 <_ZplRK7QStringPKc>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 38          	sub    $0x38,%rsp
   9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  11:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  22:	31 c0                	xor    %eax,%eax
  24:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2c:	48 89 d6             	mov    %rdx,%rsi
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	e8 00 00 00 00       	callq  37 <_ZplRK7QStringPKc+0x37>
  37:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  3b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  3f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  44:	48 89 ce             	mov    %rcx,%rsi
  47:	48 89 c7             	mov    %rax,%rdi
  4a:	e8 00 00 00 00       	callq  4f <_ZplRK7QStringPKc+0x4f>
  4f:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
{
    this->code                  = *code;
  53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  57:	48 89 d6             	mov    %rdx,%rsi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	callq  62 <_ZplRK7QStringPKc+0x62>
  62:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    this->indexBase             = *indexBase;
  66:	48 89 c7             	mov    %rax,%rdi
  69:	e8 00 00 00 00       	callq  6e <_ZplRK7QStringPKc+0x6e>
  6e:	eb 2b                	jmp    9b <_ZplRK7QStringPKc+0x9b>
  70:	48 89 c3             	mov    %rax,%rbx
  73:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  77:	48 89 c7             	mov    %rax,%rdi
  7a:	e8 00 00 00 00       	callq  7f <_ZplRK7QStringPKc+0x7f>
}
  7f:	eb 03                	jmp    84 <_ZplRK7QStringPKc+0x84>
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
  81:	48 89 c3             	mov    %rax,%rbx
  84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	e8 00 00 00 00       	callq  90 <_ZplRK7QStringPKc+0x90>
  90:	48 89 d8             	mov    %rbx,%rax
  93:	48 89 c7             	mov    %rax,%rdi
  96:	e8 00 00 00 00       	callq  9b <_ZplRK7QStringPKc+0x9b>
  9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  a3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  aa:	00 00 
  ac:	74 05                	je     b3 <_ZplRK7QStringPKc+0xb3>
  ae:	e8 00 00 00 00       	callq  b3 <_ZplRK7QStringPKc+0xb3>
  b3:	48 83 c4 38          	add    $0x38,%rsp
  b7:	5b                   	pop    %rbx
  b8:	5d                   	pop    %rbp
  b9:	c3                   	retq   

Дизассемблирование раздела .text._ZN9QListData7disposeEv:

0000000000000000 <_ZN9QListData7disposeEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZN9QListData7disposeEv+0x1b>
  1b:	90                   	nop
  1c:	c9                   	leaveq 
  1d:	c3                   	retq   

Дизассемблирование раздела .text._ZNK9QListData5beginEv:

0000000000000000 <_ZNK9QListData5beginEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	48 8d 50 10          	lea    0x10(%rax),%rdx
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 00             	mov    (%rax),%rax
  1a:	8b 40 08             	mov    0x8(%rax),%eax
  1d:	48 98                	cltq   
  1f:	48 c1 e0 03          	shl    $0x3,%rax
  23:	48 01 d0             	add    %rdx,%rax
  26:	5d                   	pop    %rbp
  27:	c3                   	retq   

Дизассемблирование раздела .text._ZNK9QListData3endEv:

0000000000000000 <_ZNK9QListData3endEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	48 8d 50 10          	lea    0x10(%rax),%rdx
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 00             	mov    (%rax),%rax
  1a:	8b 40 0c             	mov    0xc(%rax),%eax
  1d:	48 98                	cltq   
  1f:	48 c1 e0 03          	shl    $0x3,%rax
  23:	48 01 d0             	add    %rdx,%rax
  26:	5d                   	pop    %rbp
  27:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QListSpecialMethodsI7QStringED2Ev:

0000000000000000 <_ZN19QListSpecialMethodsI7QStringED1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN11QStringListC2Ev:

0000000000000000 <_ZN11QStringListC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN11QStringListC1Ev+0x18>
  18:	90                   	nop
  19:	c9                   	leaveq 
  1a:	c3                   	retq   

Дизассемблирование раздела .text._ZN11QStringListC2ERKS_:

0000000000000000 <_ZN11QStringListC1ERKS_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 d6             	mov    %rdx,%rsi
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_ZN11QStringListC1ERKS_+0x23>
  23:	90                   	nop
  24:	c9                   	leaveq 
  25:	c3                   	retq   

Дизассемблирование раздела .text._ZN11QStringListD2Ev:

0000000000000000 <_ZN11QStringListD1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN11QStringListD1Ev+0x18>
  18:	90                   	nop
  19:	c9                   	leaveq 
  1a:	c3                   	retq   

Дизассемблирование раздела .text._ZN11QStringListaSERKS_:

0000000000000000 <_ZN11QStringListaSERKS_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 d6             	mov    %rdx,%rsi
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_ZN11QStringListaSERKS_+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	c9                   	leaveq 
  28:	c3                   	retq   

Дизассемблирование раздела .text._ZN8VarTypesD2Ev:

0000000000000000 <_ZN8VarTypesD1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN8VarTypesD1Ev+0x18>
  18:	90                   	nop
  19:	c9                   	leaveq 
  1a:	c3                   	retq   

Дизассемблирование раздела .text._ZN8variableD2Ev:

0000000000000000 <_ZN8variableD1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 10          	add    $0x10,%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN8variableD1Ev+0x1c>
  1c:	90                   	nop
  1d:	c9                   	leaveq 
  1e:	c3                   	retq   

Дизассемблирование раздела .text._ZNK19QBasicAtomicIntegerIiE4loadEv:

0000000000000000 <_ZNK19QBasicAtomicIntegerIiE4loadEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 00                	mov    (%rax),%eax
  16:	90                   	nop
  17:	5d                   	pop    %rbp
  18:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QBasicAtomicIntegerIiE3refEv:

0000000000000000 <_ZN19QBasicAtomicIntegerIiE3refEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN19QBasicAtomicIntegerIiE3refEv+0x18>
  18:	c9                   	leaveq 
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QBasicAtomicIntegerIiE5derefEv:

0000000000000000 <_ZN19QBasicAtomicIntegerIiE5derefEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN19QBasicAtomicIntegerIiE5derefEv+0x18>
  18:	c9                   	leaveq 
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataIcE10sharedNullEv:

0000000000000000 <_ZN15QTypedArrayDataIcE10sharedNullEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	e8 00 00 00 00       	callq  9 <_ZN15QTypedArrayDataIcE10sharedNullEv+0x9>
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataIcE10deallocateEP10QArrayData:

0000000000000000 <_ZN15QTypedArrayDataIcE10deallocateEP10QArrayData>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	ba 08 00 00 00       	mov    $0x8,%edx
  15:	be 01 00 00 00       	mov    $0x1,%esi
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	e8 00 00 00 00       	callq  22 <_ZN15QTypedArrayDataIcE10deallocateEP10QArrayData+0x22>
  22:	90                   	nop
  23:	c9                   	leaveq 
  24:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataItE4dataEv:

0000000000000000 <_ZN15QTypedArrayDataItE4dataEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN15QTypedArrayDataItE4dataEv+0x18>
  18:	c9                   	leaveq 
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QTypedArrayDataItE10deallocateEP10QArrayData:

0000000000000000 <_ZN15QTypedArrayDataItE10deallocateEP10QArrayData>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	ba 08 00 00 00       	mov    $0x8,%edx
  15:	be 02 00 00 00       	mov    $0x2,%esi
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	e8 00 00 00 00       	callq  22 <_ZN15QTypedArrayDataItE10deallocateEP10QArrayData+0x22>
  22:	90                   	nop
  23:	c9                   	leaveq 
  24:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QListSpecialMethodsI7QStringEC2Ev:

0000000000000000 <_ZN19QListSpecialMethodsI7QStringEC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringEC2Ev:

0000000000000000 <_ZN5QListI7QStringEC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN5QListI7QStringEC1Ev+0x18>
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 23 <_ZN5QListI7QStringEC1Ev+0x23>
  23:	48 89 10             	mov    %rdx,(%rax)
  26:	90                   	nop
  27:	c9                   	leaveq 
  28:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringED2Ev:

0000000000000000 <_ZN5QListI7QStringED1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 18          	sub    $0x18,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  11:	48 8b 00             	mov    (%rax),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI7QStringED1Ev+0x1c>
  1c:	83 f0 01             	xor    $0x1,%eax
  1f:	84 c0                	test   %al,%al
  21:	74 16                	je     39 <_ZN5QListI7QStringED1Ev+0x39>
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 8b 10             	mov    (%rax),%rdx
  2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2e:	48 89 d6             	mov    %rdx,%rsi
  31:	48 89 c7             	mov    %rax,%rdi
  34:	e8 00 00 00 00       	callq  39 <_ZN5QListI7QStringED1Ev+0x39>
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	callq  45 <_ZN5QListI7QStringED1Ev+0x45>
  45:	eb 1a                	jmp    61 <_ZN5QListI7QStringED1Ev+0x61>
  47:	48 89 c3             	mov    %rax,%rbx
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	48 89 c7             	mov    %rax,%rdi
{
    this->code                  = *code;
  51:	e8 00 00 00 00       	callq  56 <_ZN5QListI7QStringED1Ev+0x56>
  56:	48 89 d8             	mov    %rbx,%rax
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	callq  61 <_ZN5QListI7QStringED1Ev+0x61>
  61:	48 83 c4 18          	add    $0x18,%rsp
    this->indexBase             = *indexBase;
  65:	5b                   	pop    %rbx
  66:	5d                   	pop    %rbp
  67:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringEC2ERKS1_:

0000000000000000 <_ZN5QListI7QStringEC1ERKS1_>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 54                	push   %r12
   6:	53                   	push   %rbx
   7:	48 83 ec 10          	sub    $0x10,%rsp
   b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  17:	48 8b 10             	mov    (%rax),%rdx
  1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1e:	48 89 10             	mov    %rdx,(%rax)
  21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  25:	48 8b 00             	mov    (%rax),%rax
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	callq  30 <_ZN5QListI7QStringEC1ERKS1_+0x30>
  30:	83 f0 01             	xor    $0x1,%eax
  33:	84 c0                	test   %al,%al
  35:	0f 84 99 00 00 00    	je     d4 <_ZN5QListI7QStringEC1ERKS1_+0xd4>
  3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3f:	48 8b 00             	mov    (%rax),%rax
  42:	8b 50 04             	mov    0x4(%rax),%edx
  45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  49:	89 d6                	mov    %edx,%esi
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	callq  53 <_ZN5QListI7QStringEC1ERKS1_+0x53>
{
    this->code                  = *code;
  53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  57:	48 89 c7             	mov    %rax,%rdi
  5a:	e8 00 00 00 00       	callq  5f <_ZN5QListI7QStringEC1ERKS1_+0x5f>
  5f:	49 89 c4             	mov    %rax,%r12
  62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    this->indexBase             = *indexBase;
  66:	48 89 c7             	mov    %rax,%rdi
  69:	e8 00 00 00 00       	callq  6e <_ZN5QListI7QStringEC1ERKS1_+0x6e>
  6e:	48 89 c3             	mov    %rax,%rbx
  71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  75:	48 89 c7             	mov    %rax,%rdi
  78:	e8 00 00 00 00       	callq  7d <_ZN5QListI7QStringEC1ERKS1_+0x7d>
}
  7d:	48 89 c6             	mov    %rax,%rsi
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
  80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  84:	4c 89 e1             	mov    %r12,%rcx
  87:	48 89 da             	mov    %rbx,%rdx
  8a:	48 89 c7             	mov    %rax,%rdi
  8d:	e8 00 00 00 00       	callq  92 <_ZN5QListI7QStringEC1ERKS1_+0x92>
  92:	eb 40                	jmp    d4 <_ZN5QListI7QStringEC1ERKS1_+0xd4>
  94:	48 89 c7             	mov    %rax,%rdi
  97:	e8 00 00 00 00       	callq  9c <_ZN5QListI7QStringEC1ERKS1_+0x9c>
  9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a0:	48 8b 00             	mov    (%rax),%rax
  a3:	48 89 c7             	mov    %rax,%rdi
  a6:	e8 00 00 00 00       	callq  ab <_ZN5QListI7QStringEC1ERKS1_+0xab>
  ab:	e8 00 00 00 00       	callq  b0 <_ZN5QListI7QStringEC1ERKS1_+0xb0>
  b0:	48 89 c3             	mov    %rax,%rbx
  b3:	e8 00 00 00 00       	callq  b8 <_ZN5QListI7QStringEC1ERKS1_+0xb8>
  b8:	eb 03                	jmp    bd <_ZN5QListI7QStringEC1ERKS1_+0xbd>
  ba:	48 89 c3             	mov    %rax,%rbx
  bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c1:	48 89 c7             	mov    %rax,%rdi
  c4:	e8 00 00 00 00       	callq  c9 <_ZN5QListI7QStringEC1ERKS1_+0xc9>
  c9:	48 89 d8             	mov    %rbx,%rax
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
  cc:	48 89 c7             	mov    %rax,%rdi
  cf:	e8 00 00 00 00       	callq  d4 <_ZN5QListI7QStringEC1ERKS1_+0xd4>

void module::prepareVariables(QStringList indexes){
  d4:	90                   	nop
  d5:	48 83 c4 10          	add    $0x10,%rsp
  d9:	5b                   	pop    %rbx
  da:	41 5c                	pop    %r12
  dc:	5d                   	pop    %rbp
  dd:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringEaSERKS1_:

0000000000000000 <_ZN5QListI7QStringEaSERKS1_>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  1e:	31 c0                	xor    %eax,%eax
  20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  24:	48 8b 10             	mov    (%rax),%rdx
  27:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  2b:	48 8b 00             	mov    (%rax),%rax
  2e:	48 39 c2             	cmp    %rax,%rdx
  31:	74 32                	je     65 <_ZN5QListI7QStringEaSERKS1_+0x65>
  33:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  37:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  3b:	48 89 d6             	mov    %rdx,%rsi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	callq  46 <_ZN5QListI7QStringEaSERKS1_+0x46>
  46:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  4e:	48 89 d6             	mov    %rdx,%rsi
{
    this->code                  = *code;
  51:	48 89 c7             	mov    %rax,%rdi
  54:	e8 00 00 00 00       	callq  59 <_ZN5QListI7QStringEaSERKS1_+0x59>
  59:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	e8 00 00 00 00       	callq  65 <_ZN5QListI7QStringEaSERKS1_+0x65>
    this->indexBase             = *indexBase;
  65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  69:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  6d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  74:	00 00 
  76:	74 21                	je     99 <_ZN5QListI7QStringEaSERKS1_+0x99>
  78:	eb 1a                	jmp    94 <_ZN5QListI7QStringEaSERKS1_+0x94>
  7a:	48 89 c3             	mov    %rax,%rbx
}
  7d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
  81:	48 89 c7             	mov    %rax,%rdi
  84:	e8 00 00 00 00       	callq  89 <_ZN5QListI7QStringEaSERKS1_+0x89>
  89:	48 89 d8             	mov    %rbx,%rax
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	callq  94 <_ZN5QListI7QStringEaSERKS1_+0x94>
  94:	e8 00 00 00 00       	callq  99 <_ZN5QListI7QStringEaSERKS1_+0x99>
  99:	48 83 c4 28          	add    $0x28,%rsp
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QListSpecialMethodsI8variableEC2Ev:

0000000000000000 <_ZN19QListSpecialMethodsI8variableEC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableEC2Ev:

0000000000000000 <_ZN5QListI8variableEC1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e8 00 00 00 00       	callq  18 <_ZN5QListI8variableEC1Ev+0x18>
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 23 <_ZN5QListI8variableEC1Ev+0x23>
  23:	48 89 10             	mov    %rdx,(%rax)
  26:	90                   	nop
  27:	c9                   	leaveq 
  28:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableED2Ev:

0000000000000000 <_ZN5QListI8variableED1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 18          	sub    $0x18,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  11:	48 8b 00             	mov    (%rax),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI8variableED1Ev+0x1c>
  1c:	83 f0 01             	xor    $0x1,%eax
  1f:	84 c0                	test   %al,%al
  21:	74 16                	je     39 <_ZN5QListI8variableED1Ev+0x39>
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 8b 10             	mov    (%rax),%rdx
  2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2e:	48 89 d6             	mov    %rdx,%rsi
  31:	48 89 c7             	mov    %rax,%rdi
  34:	e8 00 00 00 00       	callq  39 <_ZN5QListI8variableED1Ev+0x39>
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	callq  45 <_ZN5QListI8variableED1Ev+0x45>
  45:	eb 1a                	jmp    61 <_ZN5QListI8variableED1Ev+0x61>
  47:	48 89 c3             	mov    %rax,%rbx
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	48 89 c7             	mov    %rax,%rdi
{
    this->code                  = *code;
  51:	e8 00 00 00 00       	callq  56 <_ZN5QListI8variableED1Ev+0x56>
  56:	48 89 d8             	mov    %rbx,%rax
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	callq  61 <_ZN5QListI8variableED1Ev+0x61>
  61:	48 83 c4 18          	add    $0x18,%rsp
    this->indexBase             = *indexBase;
  65:	5b                   	pop    %rbx
  66:	5d                   	pop    %rbp
  67:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE8iteratorC2Ev:

0000000000000000 <_ZN5QListI7QStringE8iteratorC1Ev>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  13:	90                   	nop
  14:	5d                   	pop    %rbp
  15:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE5beginEv:

0000000000000000 <_ZN5QListI7QStringE5beginEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI7QStringE5beginEv+0x1c>
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	callq  28 <_ZN5QListI7QStringE5beginEv+0x28>
  28:	48 89 c2             	mov    %rax,%rdx
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	48 89 d6             	mov    %rdx,%rsi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN5QListI7QStringE5beginEv+0x3a>
  3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3e:	c9                   	leaveq 
  3f:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE3endEv:

0000000000000000 <_ZN5QListI7QStringE3endEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI7QStringE3endEv+0x1c>
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	callq  28 <_ZN5QListI7QStringE3endEv+0x28>
  28:	48 89 c2             	mov    %rax,%rdx
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	48 89 d6             	mov    %rdx,%rsi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	callq  3a <_ZN5QListI7QStringE3endEv+0x3a>
  3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3e:	c9                   	leaveq 
  3f:	c3                   	retq   

Дизассемблирование раздела .text._ZNK5QListI7QStringE8iteratorneERKS2_:

0000000000000000 <_ZNK5QListI7QStringE8iteratorneERKS2_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 10             	mov    (%rax),%rdx
  13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  17:	48 8b 00             	mov    (%rax),%rax
  1a:	48 39 c2             	cmp    %rax,%rdx
  1d:	0f 95 c0             	setne  %al
  20:	5d                   	pop    %rbp
  21:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE8iteratorppEv:

0000000000000000 <_ZN5QListI7QStringE8iteratorppEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	48 8d 50 08          	lea    0x8(%rax),%rdx
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1e:	5d                   	pop    %rbp
  1f:	c3                   	retq   

Дизассемблирование раздела .text._ZNK5QListI7QStringE8iteratordeEv:

0000000000000000 <_ZNK5QListI7QStringE8iteratordeEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZNK5QListI7QStringE8iteratordeEv+0x1b>
  1b:	c9                   	leaveq 
  1c:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE6appendERKS0_:

0000000000000000 <_ZN5QListI8variableE6appendERKS0_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 38          	sub    $0x38,%rsp
   9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  1e:	31 c0                	xor    %eax,%eax
  20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  24:	48 8b 00             	mov    (%rax),%rax
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	e8 00 00 00 00       	callq  2f <_ZN5QListI8variableE6appendERKS0_+0x2f>
  2f:	84 c0                	test   %al,%al
  31:	74 36                	je     69 <_ZN5QListI8variableE6appendERKS0_+0x69>
  33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  37:	ba 01 00 00 00       	mov    $0x1,%edx
  3c:	be ff ff ff 7f       	mov    $0x7fffffff,%esi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	callq  49 <_ZN5QListI8variableE6appendERKS0_+0x49>
  49:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
{
    this->code                  = *code;
  51:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  55:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  59:	48 89 ce             	mov    %rcx,%rsi
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	e8 00 00 00 00       	callq  64 <_ZN5QListI8variableE6appendERKS0_+0x64>
    this->indexBase             = *indexBase;
  64:	e9 89 00 00 00       	jmpq   f2 <_ZN5QListI8variableE6appendERKS0_+0xf2>
  69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	callq  75 <_ZN5QListI8variableE6appendERKS0_+0x75>
  75:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  79:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
}
  7d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
  81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  85:	48 89 ce             	mov    %rcx,%rsi
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	e8 00 00 00 00       	callq  90 <_ZN5QListI8variableE6appendERKS0_+0x90>
  90:	eb 60                	jmp    f2 <_ZN5QListI8variableE6appendERKS0_+0xf2>
  92:	48 89 c7             	mov    %rax,%rdi
  95:	e8 00 00 00 00       	callq  9a <_ZN5QListI8variableE6appendERKS0_+0x9a>
  9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  9e:	48 8b 00             	mov    (%rax),%rax
  a1:	8b 50 0c             	mov    0xc(%rax),%edx
  a4:	83 ea 01             	sub    $0x1,%edx
  a7:	89 50 0c             	mov    %edx,0xc(%rax)
  aa:	e8 00 00 00 00       	callq  af <_ZN5QListI8variableE6appendERKS0_+0xaf>
  af:	48 89 c3             	mov    %rax,%rbx
  b2:	e8 00 00 00 00       	callq  b7 <_ZN5QListI8variableE6appendERKS0_+0xb7>
  b7:	48 89 d8             	mov    %rbx,%rax
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	e8 00 00 00 00       	callq  c2 <_ZN5QListI8variableE6appendERKS0_+0xc2>
  c2:	48 89 c7             	mov    %rax,%rdi
  c5:	e8 00 00 00 00       	callq  ca <_ZN5QListI8variableE6appendERKS0_+0xca>
  ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
  ce:	48 8b 00             	mov    (%rax),%rax
  d1:	8b 50 0c             	mov    0xc(%rax),%edx

void module::prepareVariables(QStringList indexes){
  d4:	83 ea 01             	sub    $0x1,%edx
  d7:	89 50 0c             	mov    %edx,0xc(%rax)
  da:	e8 00 00 00 00       	callq  df <_ZN5QListI8variableE6appendERKS0_+0xdf>
  df:	48 89 c3             	mov    %rax,%rbx
  e2:	e8 00 00 00 00       	callq  e7 <_ZN5QListI8variableE6appendERKS0_+0xe7>
  e7:	48 89 d8             	mov    %rbx,%rax
  ea:	48 89 c7             	mov    %rax,%rdi
  ed:	e8 00 00 00 00       	callq  f2 <_ZN5QListI8variableE6appendERKS0_+0xf2>
  f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  fd:	00 00 
    QStringList::iterator it;
  ff:	74 05                	je     106 <_ZN5QListI8variableE6appendERKS0_+0x106>
 101:	e8 00 00 00 00       	callq  106 <_ZN5QListI8variableE6appendERKS0_+0x106>
 106:	48 83 c4 38          	add    $0x38,%rsp
 10a:	5b                   	pop    %rbx
 10b:	5d                   	pop    %rbp
    VarTypes VT;
 10c:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QBasicAtomicOpsILi4EE3refIiEEbRT_:

0000000000000000 <_ZN15QBasicAtomicOpsILi4EE3refIiEEbRT_>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  10:	f0 83 00 01          	lock addl $0x1,(%rax)
  14:	0f 95 c2             	setne  %dl
  17:	88 55 ff             	mov    %dl,-0x1(%rbp)
  1a:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
  1e:	0f 95 c0             	setne  %al
  21:	5d                   	pop    %rbp
  22:	c3                   	retq   

Дизассемблирование раздела .text._ZN15QBasicAtomicOpsILi4EE5derefIiEEbRT_:

0000000000000000 <_ZN15QBasicAtomicOpsILi4EE5derefIiEEbRT_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  10:	f0 83 28 01          	lock subl $0x1,(%rax)
  14:	0f 95 c2             	setne  %dl
  17:	88 55 ff             	mov    %dl,-0x1(%rbp)
  1a:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
  1e:	0f 95 c0             	setne  %al
  21:	5d                   	pop    %rbp
  22:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE7deallocEPN9QListData4DataE:

0000000000000000 <_ZN5QListI7QStringE7deallocEPN9QListData4DataE>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 8d 50 10          	lea    0x10(%rax),%rdx
  18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  1c:	8b 40 0c             	mov    0xc(%rax),%eax
  1f:	48 98                	cltq   
  21:	48 c1 e0 03          	shl    $0x3,%rax
  25:	48 01 c2             	add    %rax,%rdx
  28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2c:	48 8d 48 10          	lea    0x10(%rax),%rcx
  30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  34:	8b 40 08             	mov    0x8(%rax),%eax
  37:	48 98                	cltq   
  39:	48 c1 e0 03          	shl    $0x3,%rax
  3d:	48 01 c1             	add    %rax,%rcx
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	48 89 ce             	mov    %rcx,%rsi
  47:	48 89 c7             	mov    %rax,%rdi
  4a:	e8 00 00 00 00       	callq  4f <_ZN5QListI7QStringE7deallocEPN9QListData4DataE+0x4f>
  4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
{
    this->code                  = *code;
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	callq  5b <_ZN5QListI7QStringE7deallocEPN9QListData4DataE+0x5b>
  5b:	90                   	nop
  5c:	c9                   	leaveq 
  5d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_:

0000000000000000 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	53                   	push   %rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  11:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  15:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  19:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  1d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  21:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  29:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  2d:	0f 84 8a 00 00 00    	je     bd <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xbd>
  33:	4c 8b 65 d8          	mov    -0x28(%rbp),%r12
  37:	4c 89 e6             	mov    %r12,%rsi
  3a:	bf 08 00 00 00       	mov    $0x8,%edi
  3f:	e8 00 00 00 00       	callq  44 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x44>
  44:	48 89 c3             	mov    %rax,%rbx
  47:	48 85 db             	test   %rbx,%rbx
  4a:	74 0f                	je     5b <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x5b>
  4c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  50:	48 89 c6             	mov    %rax,%rsi
{
    this->code                  = *code;
  53:	48 89 df             	mov    %rbx,%rdi
  56:	e8 00 00 00 00       	callq  5b <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x5b>
  5b:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
  60:	48 83 45 b0 08       	addq   $0x8,-0x50(%rbp)
    this->indexBase             = *indexBase;
  65:	eb be                	jmp    25 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x25>
  67:	49 89 c5             	mov    %rax,%r13
  6a:	4c 89 e6             	mov    %r12,%rsi
  6d:	48 89 df             	mov    %rbx,%rdi
  70:	e8 00 00 00 00       	callq  75 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x75>
  75:	4c 89 e8             	mov    %r13,%rax
  78:	48 89 c7             	mov    %rax,%rdi
}
  7b:	e8 00 00 00 00       	callq  80 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x80>
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
  80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  84:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
  88:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  8c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  90:	0f 95 c0             	setne  %al
  93:	84 c0                	test   %al,%al
  95:	74 0e                	je     a5 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xa5>
  97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9b:	48 89 c7             	mov    %rax,%rdi
  9e:	e8 00 00 00 00       	callq  a3 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xa3>
  a3:	eb db                	jmp    80 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0x80>
  a5:	e8 00 00 00 00       	callq  aa <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xaa>
  aa:	48 89 c3             	mov    %rax,%rbx
  ad:	e8 00 00 00 00       	callq  b2 <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xb2>
  b2:	48 89 d8             	mov    %rbx,%rax
  b5:	48 89 c7             	mov    %rax,%rdi
  b8:	e8 00 00 00 00       	callq  bd <_ZN5QListI7QStringE9node_copyEPNS1_4NodeES3_S3_+0xbd>
  bd:	90                   	nop
  be:	48 83 c4 38          	add    $0x38,%rsp
  c2:	5b                   	pop    %rbx
  c3:	41 5c                	pop    %r12
  c5:	41 5d                	pop    %r13
  c7:	5d                   	pop    %rbp
  c8:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE4swapERS1_:

0000000000000000 <_ZN5QListI7QStringE4swapERS1_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 d6             	mov    %rdx,%rsi
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_ZN5QListI7QStringE4swapERS1_+0x23>
  23:	90                   	nop
  24:	c9                   	leaveq 
  25:	c3                   	retq   

Дизассемблирование раздела .text._ZN19QListSpecialMethodsI8variableED2Ev:

0000000000000000 <_ZN19QListSpecialMethodsI8variableED1Ev>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE7deallocEPN9QListData4DataE:

0000000000000000 <_ZN5QListI8variableE7deallocEPN9QListData4DataE>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 8d 50 10          	lea    0x10(%rax),%rdx
  18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  1c:	8b 40 0c             	mov    0xc(%rax),%eax
  1f:	48 98                	cltq   
  21:	48 c1 e0 03          	shl    $0x3,%rax
  25:	48 01 c2             	add    %rax,%rdx
  28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2c:	48 8d 48 10          	lea    0x10(%rax),%rcx
  30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  34:	8b 40 08             	mov    0x8(%rax),%eax
  37:	48 98                	cltq   
  39:	48 c1 e0 03          	shl    $0x3,%rax
  3d:	48 01 c1             	add    %rax,%rcx
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	48 89 ce             	mov    %rcx,%rsi
  47:	48 89 c7             	mov    %rax,%rdi
  4a:	e8 00 00 00 00       	callq  4f <_ZN5QListI8variableE7deallocEPN9QListData4DataE+0x4f>
  4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
{
    this->code                  = *code;
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	callq  5b <_ZN5QListI8variableE7deallocEPN9QListData4DataE+0x5b>
  5b:	90                   	nop
  5c:	c9                   	leaveq 
  5d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE6detachEv:

0000000000000000 <_ZN5QListI7QStringE6detachEv>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 c7             	mov    %rax,%rdi
  16:	e8 00 00 00 00       	callq  1b <_ZN5QListI7QStringE6detachEv+0x1b>
  1b:	84 c0                	test   %al,%al
  1d:	74 0c                	je     2b <_ZN5QListI7QStringE6detachEv+0x2b>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	callq  2b <_ZN5QListI7QStringE6detachEv+0x2b>
  2b:	90                   	nop
  2c:	c9                   	leaveq 
  2d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE8iteratorC2EPNS1_4NodeE:

0000000000000000 <_ZN5QListI7QStringE8iteratorC1EPNS1_4NodeE>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 89 10             	mov    %rdx,(%rax)
  17:	90                   	nop
  18:	5d                   	pop    %rbp
  19:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE4Node1tEv:

0000000000000000 <_ZN5QListI7QStringE4Node1tEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   c:	5d                   	pop    %rbp
   d:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE18detach_helper_growEii:

0000000000000000 <_ZN5QListI8variableE18detach_helper_growEii>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 54                	push   %r12
   6:	53                   	push   %rbx
   7:	48 83 ec 20          	sub    $0x20,%rsp
   b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   f:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  12:	89 55 d0             	mov    %edx,-0x30(%rbp)
  15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	callq  21 <_ZN5QListI8variableE18detach_helper_growEii+0x21>
  21:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  29:	8b 55 d0             	mov    -0x30(%rbp),%edx
  2c:	48 8d 4d d4          	lea    -0x2c(%rbp),%rcx
  30:	48 89 ce             	mov    %rcx,%rsi
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	callq  3b <_ZN5QListI8variableE18detach_helper_growEii+0x3b>
  3b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43:	48 89 c7             	mov    %rax,%rdi
  46:	e8 00 00 00 00       	callq  4b <_ZN5QListI8variableE18detach_helper_growEii+0x4b>
  4b:	48 89 c2             	mov    %rax,%rdx
  4e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
{
    this->code                  = *code;
  51:	48 98                	cltq   
  53:	48 c1 e0 03          	shl    $0x3,%rax
  57:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
  5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5f:	48 89 c7             	mov    %rax,%rdi
  62:	e8 00 00 00 00       	callq  67 <_ZN5QListI8variableE18detach_helper_growEii+0x67>
    this->indexBase             = *indexBase;
  67:	48 89 c6             	mov    %rax,%rsi
  6a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  72:	48 89 d1             	mov    %rdx,%rcx
  75:	48 89 da             	mov    %rbx,%rdx
  78:	48 89 c7             	mov    %rax,%rdi
}
  7b:	e8 00 00 00 00       	callq  80 <_ZN5QListI8variableE18detach_helper_growEii+0x80>
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
  80:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  83:	48 98                	cltq   
  85:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  8c:	00 
  8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  91:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
  95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  99:	48 89 c7             	mov    %rax,%rdi
  9c:	e8 00 00 00 00       	callq  a1 <_ZN5QListI8variableE18detach_helper_growEii+0xa1>
  a1:	49 89 c4             	mov    %rax,%r12
  a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	callq  b0 <_ZN5QListI8variableE18detach_helper_growEii+0xb0>
  b0:	48 89 c1             	mov    %rax,%rcx
  b3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  b6:	48 63 d0             	movslq %eax,%rdx
  b9:	8b 45 d0             	mov    -0x30(%rbp),%eax
  bc:	48 98                	cltq   
  be:	48 01 d0             	add    %rdx,%rax
  c1:	48 c1 e0 03          	shl    $0x3,%rax
  c5:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
  c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
  cd:	48 89 d9             	mov    %rbx,%rcx
  d0:	4c 89 e2             	mov    %r12,%rdx
  d3:	48 89 c7             	mov    %rax,%rdi

void module::prepareVariables(QStringList indexes){
  d6:	e8 00 00 00 00       	callq  db <_ZN5QListI8variableE18detach_helper_growEii+0xdb>
  db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  df:	48 89 c7             	mov    %rax,%rdi
  e2:	e8 00 00 00 00       	callq  e7 <_ZN5QListI8variableE18detach_helper_growEii+0xe7>
  e7:	83 f0 01             	xor    $0x1,%eax
  ea:	84 c0                	test   %al,%al
  ec:	74 13                	je     101 <_ZN5QListI8variableE18detach_helper_growEii+0x101>
  ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  f6:	48 89 d6             	mov    %rdx,%rsi
  f9:	48 89 c7             	mov    %rax,%rdi
  fc:	e8 00 00 00 00       	callq  101 <_ZN5QListI8variableE18detach_helper_growEii+0x101>
    QStringList::iterator it;
 101:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 105:	48 89 c7             	mov    %rax,%rdi
 108:	e8 00 00 00 00       	callq  10d <_ZN5QListI8variableE18detach_helper_growEii+0x10d>
    VarTypes VT;
 10d:	48 89 c2             	mov    %rax,%rdx
 110:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 113:	48 98                	cltq   
 115:	48 c1 e0 03          	shl    $0x3,%rax
 119:	48 01 d0             	add    %rdx,%rax
    QRegExp testDefinition(VT.getRegExpQueue() + "[\\s\\t]*([^\\n]*)\\;");
 11c:	e9 ab 00 00 00       	jmpq   1cc <_ZN5QListI8variableE18detach_helper_growEii+0x1cc>
 121:	48 89 c7             	mov    %rax,%rdi
 124:	e8 00 00 00 00       	callq  129 <_ZN5QListI8variableE18detach_helper_growEii+0x129>
 129:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 12d:	48 89 c7             	mov    %rax,%rdi
 130:	e8 00 00 00 00       	callq  135 <_ZN5QListI8variableE18detach_helper_growEii+0x135>
 135:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 139:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 13d:	48 89 10             	mov    %rdx,(%rax)
 140:	e8 00 00 00 00       	callq  145 <_ZN5QListI8variableE18detach_helper_growEii+0x145>
 145:	48 89 c3             	mov    %rax,%rbx
 148:	e8 00 00 00 00       	callq  14d <_ZN5QListI8variableE18detach_helper_growEii+0x14d>
 14d:	48 89 d8             	mov    %rbx,%rax
 150:	48 89 c7             	mov    %rax,%rdi
 153:	e8 00 00 00 00       	callq  158 <_ZN5QListI8variableE18detach_helper_growEii+0x158>
 158:	48 89 c7             	mov    %rax,%rdi
 15b:	e8 00 00 00 00       	callq  160 <_ZN5QListI8variableE18detach_helper_growEii+0x160>
 160:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 164:	48 89 c7             	mov    %rax,%rdi
 167:	e8 00 00 00 00       	callq  16c <_ZN5QListI8variableE18detach_helper_growEii+0x16c>
 16c:	48 89 c2             	mov    %rax,%rdx
 16f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 172:	48 98                	cltq   
 174:	48 c1 e0 03          	shl    $0x3,%rax
 178:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
 17c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 180:	48 89 c7             	mov    %rax,%rdi
 183:	e8 00 00 00 00       	callq  188 <_ZN5QListI8variableE18detach_helper_growEii+0x188>
 188:	48 89 c1             	mov    %rax,%rcx
 18b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 18f:	48 89 da             	mov    %rbx,%rdx
    QRegExp testRgPort("([\\w\\d\\_]*)[\\s\\t]*\\:[\\s\\t]*(port|rg)[\\s\\t]*\\:[\\s\\t]*([\\w\\d\\_]*)"); // имя : порт : номер
 192:	48 89 ce             	mov    %rcx,%rsi
 195:	48 89 c7             	mov    %rax,%rdi
 198:	e8 00 00 00 00       	callq  19d <_ZN5QListI8variableE18detach_helper_growEii+0x19d>
 19d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1a1:	48 89 c7             	mov    %rax,%rdi
 1a4:	e8 00 00 00 00       	callq  1a9 <_ZN5QListI8variableE18detach_helper_growEii+0x1a9>
 1a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 1b1:	48 89 10             	mov    %rdx,(%rax)
 1b4:	e8 00 00 00 00       	callq  1b9 <_ZN5QListI8variableE18detach_helper_growEii+0x1b9>
 1b9:	48 89 c3             	mov    %rax,%rbx
 1bc:	e8 00 00 00 00       	callq  1c1 <_ZN5QListI8variableE18detach_helper_growEii+0x1c1>
 1c1:	48 89 d8             	mov    %rbx,%rax
 1c4:	48 89 c7             	mov    %rax,%rdi
 1c7:	e8 00 00 00 00       	callq  1cc <_ZN5QListI8variableE18detach_helper_growEii+0x1cc>
 1cc:	48 83 c4 20          	add    $0x20,%rsp
 1d0:	5b                   	pop    %rbx
 1d1:	41 5c                	pop    %r12
 1d3:	5d                   	pop    %rbp
 1d4:	c3                   	retq   

Дизассемблирование раздела .text._ZN8variableC2ERKS_:

0000000000000000 <_ZN8variableC1ERKS_>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	0f b6 10             	movzbl (%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	88 10                	mov    %dl,(%rax)
  1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  21:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	88 50 01             	mov    %dl,0x1(%rax)
  2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  30:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  34:	48 8b 52 02          	mov    0x2(%rdx),%rdx
  38:	48 89 50 02          	mov    %rdx,0x2(%rax)
  3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40:	48 8d 50 10          	lea    0x10(%rax),%rdx
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	48 83 c0 10          	add    $0x10,%rax
  4c:	48 89 d6             	mov    %rdx,%rsi
  4f:	48 89 c7             	mov    %rax,%rdi
{
    this->code                  = *code;
  52:	e8 00 00 00 00       	callq  57 <_ZN8variableC1ERKS_+0x57>
  57:	90                   	nop
  58:	c9                   	leaveq 
  59:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_:

0000000000000000 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 54                	push   %r12
   6:	53                   	push   %rbx
   7:	48 83 ec 20          	sub    $0x20,%rsp
   b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	bf 18 00 00 00       	mov    $0x18,%edi
  1c:	e8 00 00 00 00       	callq  21 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x21>
  21:	48 89 c3             	mov    %rax,%rbx
  24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	48 89 df             	mov    %rbx,%rdi
  2e:	e8 00 00 00 00       	callq  33 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x33>
  33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  37:	48 89 18             	mov    %rbx,(%rax)
  3a:	eb 16                	jmp    52 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x52>
  3c:	49 89 c4             	mov    %rax,%r12
  3f:	48 89 df             	mov    %rbx,%rdi
  42:	e8 00 00 00 00       	callq  47 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x47>
  47:	4c 89 e0             	mov    %r12,%rax
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	e8 00 00 00 00       	callq  52 <_ZN5QListI8variableE14node_constructEPNS1_4NodeERKS0_+0x52>
{
    this->code                  = *code;
  52:	48 83 c4 20          	add    $0x20,%rsp
  56:	5b                   	pop    %rbx
  57:	41 5c                	pop    %r12
  59:	5d                   	pop    %rbp
  5a:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_:

0000000000000000 <_ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  18:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  1c:	74 13                	je     31 <_ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_+0x31>
  1e:	48 83 6d e8 08       	subq   $0x8,-0x18(%rbp)
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	e8 00 00 00 00       	callq  2f <_ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_+0x2f>
  2f:	eb e3                	jmp    14 <_ZN5QListI7QStringE13node_destructEPNS1_4NodeES3_+0x14>
  31:	90                   	nop
  32:	c9                   	leaveq 
  33:	c3                   	retq   

Дизассемблирование раздела .text._Z5qSwapIPN9QListData4DataEEvRT_S4_:

0000000000000000 <_Z5qSwapIPN9QListData4DataEEvRT_S4_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 d6             	mov    %rdx,%rsi
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	callq  23 <_Z5qSwapIPN9QListData4DataEEvRT_S4_+0x23>
  23:	90                   	nop
  24:	c9                   	leaveq 
  25:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE13node_destructEPNS1_4NodeES3_:

0000000000000000 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  19:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  1d:	74 23                	je     42 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x42>
  1f:	48 83 6d d8 08       	subq   $0x8,-0x28(%rbp)
  24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  28:	48 8b 18             	mov    (%rax),%rbx
  2b:	48 85 db             	test   %rbx,%rbx
  2e:	74 e5                	je     15 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x15>
  30:	48 89 df             	mov    %rbx,%rdi
  33:	e8 00 00 00 00       	callq  38 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x38>
  38:	48 89 df             	mov    %rbx,%rdi
  3b:	e8 00 00 00 00       	callq  40 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x40>
  40:	eb d3                	jmp    15 <_ZN5QListI8variableE13node_destructEPNS1_4NodeES3_+0x15>
  42:	90                   	nop
  43:	48 83 c4 28          	add    $0x28,%rsp
  47:	5b                   	pop    %rbx
  48:	5d                   	pop    %rbp
  49:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE13detach_helperEv:

0000000000000000 <_ZN5QListI7QStringE13detach_helperEv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	8b 50 04             	mov    0x4(%rax),%edx
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	89 d6                	mov    %edx,%esi
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	e8 00 00 00 00       	callq  24 <_ZN5QListI7QStringE13detach_helperEv+0x24>
  24:	90                   	nop
  25:	c9                   	leaveq 
  26:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_:

0000000000000000 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 54                	push   %r12
   6:	53                   	push   %rbx
   7:	48 83 ec 30          	sub    $0x30,%rsp
   b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  13:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  17:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  1f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  2b:	0f 84 97 00 00 00    	je     c8 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xc8>
  31:	bf 18 00 00 00       	mov    $0x18,%edi
  36:	e8 00 00 00 00       	callq  3b <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x3b>
  3b:	48 89 c3             	mov    %rax,%rbx
  3e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  42:	48 8b 00             	mov    (%rax),%rax
  45:	48 89 c6             	mov    %rax,%rsi
  48:	48 89 df             	mov    %rbx,%rdi
  4b:	e8 00 00 00 00       	callq  50 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x50>
  50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
{
    this->code                  = *code;
  54:	48 89 18             	mov    %rbx,(%rax)
  57:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
  5c:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
  61:	eb c0                	jmp    23 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x23>
  63:	49 89 c4             	mov    %rax,%r12
    this->indexBase             = *indexBase;
  66:	48 89 df             	mov    %rbx,%rdi
  69:	e8 00 00 00 00       	callq  6e <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x6e>
  6e:	4c 89 e0             	mov    %r12,%rax
  71:	eb 00                	jmp    73 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x73>
  73:	48 89 c7             	mov    %rax,%rdi
  76:	e8 00 00 00 00       	callq  7b <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x7b>
}
  7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7f:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
  83:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  87:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  8b:	0f 95 c0             	setne  %al
  8e:	84 c0                	test   %al,%al
  90:	74 1e                	je     b0 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xb0>
  92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  96:	48 8b 18             	mov    (%rax),%rbx
  99:	48 85 db             	test   %rbx,%rbx
  9c:	74 dd                	je     7b <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x7b>
  9e:	48 89 df             	mov    %rbx,%rdi
  a1:	e8 00 00 00 00       	callq  a6 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xa6>
  a6:	48 89 df             	mov    %rbx,%rdi
  a9:	e8 00 00 00 00       	callq  ae <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xae>
  ae:	eb cb                	jmp    7b <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0x7b>
  b0:	e8 00 00 00 00       	callq  b5 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xb5>
  b5:	48 89 c3             	mov    %rax,%rbx
  b8:	e8 00 00 00 00       	callq  bd <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xbd>
  bd:	48 89 d8             	mov    %rbx,%rax
  c0:	48 89 c7             	mov    %rax,%rdi
  c3:	e8 00 00 00 00       	callq  c8 <_ZN5QListI8variableE9node_copyEPNS1_4NodeES3_S3_+0xc8>
  c8:	90                   	nop
  c9:	48 83 c4 30          	add    $0x30,%rsp
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
  cd:	5b                   	pop    %rbx
  ce:	41 5c                	pop    %r12
  d0:	5d                   	pop    %rbp
  d1:	c3                   	retq   

Дизассемблирование раздела .text._ZSt4swapIPN9QListData4DataEEvRT_S4_:

0000000000000000 <_ZSt4swapIPN9QListData4DataEEvRT_S4_>:
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	48 8b 00             	mov    (%rax),%rax
  13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  1b:	48 8b 10             	mov    (%rax),%rdx
  1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  22:	48 89 10             	mov    %rdx,(%rax)
  25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2d:	48 89 10             	mov    %rdx,(%rax)
  30:	90                   	nop
  31:	5d                   	pop    %rbp
  32:	c3                   	retq   

Дизассемблирование раздела .text._ZN5QListI7QStringE13detach_helperEi:

0000000000000000 <_ZN5QListI7QStringE13detach_helperEi>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	53                   	push   %rbx
   5:	48 83 ec 28          	sub    $0x28,%rsp
   9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   d:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	callq  1c <_ZN5QListI7QStringE13detach_helperEi+0x1c>
  1c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  24:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  27:	89 d6                	mov    %edx,%esi
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	callq  31 <_ZN5QListI7QStringE13detach_helperEi+0x31>
  31:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	callq  41 <_ZN5QListI7QStringE13detach_helperEi+0x41>
  41:	48 89 c3             	mov    %rax,%rbx
  44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	callq  50 <_ZN5QListI7QStringE13detach_helperEi+0x50>
  50:	48 89 c6             	mov    %rax,%rsi
{
    this->code                  = *code;
  53:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5b:	48 89 d1             	mov    %rdx,%rcx
  5e:	48 89 da             	mov    %rbx,%rdx
  61:	48 89 c7             	mov    %rax,%rdi
    this->indexBase             = *indexBase;
  64:	e8 00 00 00 00       	callq  69 <_ZN5QListI7QStringE13detach_helperEi+0x69>
  69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	callq  75 <_ZN5QListI7QStringE13detach_helperEi+0x75>
  75:	83 f0 01             	xor    $0x1,%eax
  78:	84 c0                	test   %al,%al
  7a:	74 4c                	je     c8 <_ZN5QListI7QStringE13detach_helperEi+0xc8>
}
  7c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
#include "module.h"
#include "vartypes.h"

module::module(QStringList *code, QStringList *indexBase)
  80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  84:	48 89 d6             	mov    %rdx,%rsi
  87:	48 89 c7             	mov    %rax,%rdi
  8a:	e8 00 00 00 00       	callq  8f <_ZN5QListI7QStringE13detach_helperEi+0x8f>
  8f:	eb 37                	jmp    c8 <_ZN5QListI7QStringE13detach_helperEi+0xc8>
  91:	48 89 c7             	mov    %rax,%rdi
  94:	e8 00 00 00 00       	callq  99 <_ZN5QListI7QStringE13detach_helperEi+0x99>
  99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9d:	48 89 c7             	mov    %rax,%rdi
  a0:	e8 00 00 00 00       	callq  a5 <_ZN5QListI7QStringE13detach_helperEi+0xa5>
  a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  ad:	48 89 10             	mov    %rdx,(%rax)
  b0:	e8 00 00 00 00       	callq  b5 <_ZN5QListI7QStringE13detach_helperEi+0xb5>
  b5:	48 89 c3             	mov    %rax,%rbx
  b8:	e8 00 00 00 00       	callq  bd <_ZN5QListI7QStringE13detach_helperEi+0xbd>
  bd:	48 89 d8             	mov    %rbx,%rax
  c0:	48 89 c7             	mov    %rax,%rdi
  c3:	e8 00 00 00 00       	callq  c8 <_ZN5QListI7QStringE13detach_helperEi+0xc8>
  c8:	90                   	nop
  c9:	48 83 c4 28          	add    $0x28,%rsp
{
    this->code                  = *code;
    this->indexBase             = *indexBase;
}
  cd:	5b                   	pop    %rbx
  ce:	5d                   	pop    %rbp
  cf:	c3                   	retq   
